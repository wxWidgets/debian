/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.29
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGPYTHON
#define SWIG_PYTHON_DIRECTOR_NO_VTABLE

#ifdef __cplusplus
template<class T> class SwigValueWrapper {
    T *tt;
public:
    SwigValueWrapper() : tt(0) { }
    SwigValueWrapper(const SwigValueWrapper<T>& rhs) : tt(new T(*rhs.tt)) { }
    SwigValueWrapper(const T& t) : tt(new T(t)) { }
    ~SwigValueWrapper() { delete tt; } 
    SwigValueWrapper& operator=(const T& t) { delete tt; tt = new T(t); return *this; }
    operator T&() const { return *tt; }
    T *operator&() { return tt; }
private:
    SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
};
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC)
#   if (__SUNPRO_CC <= 0x560)
#     define SWIGTEMPLATEDISAMBIGUATOR template
#   else
#     define SWIGTEMPLATEDISAMBIGUATOR 
#   endif
# else
#   define SWIGTEMPLATEDISAMBIGUATOR 
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__)) 
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__)) 
# else
#   define SWIGUNUSED 
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED 
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif 
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER)
# define _CRT_SECURE_NO_DEPRECATE
#endif


/* Python.h has to appear first */
#include <Python.h>

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic CAPI SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "2"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the swig runtime code.
  In 99.9% of the cases, swig just needs to declare them as 'static'.
  
  But only do this if is strictly necessary, ie, if you have problems
  with your compiler or so.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/* 
   Flags/methods for returning states.
   
   The swig conversion methods, as ConvertPtr, return and integer 
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).
   
   Use the following macros/flags to set or process the returning
   states.
   
   In old swig versions, you usually write code as:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit as:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   that seems to be the same, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }
    
   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   requires also to SWIG_ConvertPtr to return new result values, as

      int SWIG_ConvertPtr(obj, ptr,...) {         
        if (<obj is ok>) {			       
          if (<need new object>) {		       
            *ptr = <ptr to new allocated object>; 
            return SWIG_NEWOBJ;		       
          } else {				       
            *ptr = <ptr to old object>;	       
            return SWIG_OLDOBJ;		       
          } 				       
        } else {				       
          return SWIG_BADOBJ;		       
        }					       
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   swig errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call
 
      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()


 */
#define SWIG_OK                    (0) 
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)  

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))


/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) { 
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) { 
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0; 
}
#else /* no cast-rank mode */
#  define SWIG_AddCast
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif




#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store inforomation on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/* 
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (l1 - f1) - (l2 - f2);
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCompare(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}


/* think of this as a c++ template<> or a scheme macro */
#define SWIG_TypeCheck_Template(comparison, ty)         \
  if (ty) {                                             \
    swig_cast_info *iter = ty->cast;                    \
    while (iter) {                                      \
      if (comparison) {                                 \
        if (iter == ty->cast) return iter;              \
        /* Move iter to the top of the linked list */   \
        iter->prev->next = iter->next;                  \
        if (iter->next)                                 \
          iter->next->prev = iter->prev;                \
        iter->next = ty->cast;                          \
        iter->prev = 0;                                 \
        if (ty->cast) ty->cast->prev = iter;            \
        ty->cast = iter;                                \
        return iter;                                    \
      }                                                 \
      iter = iter->next;                                \
    }                                                   \
  }                                                     \
  return 0

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  SWIG_TypeCheck_Template(strcmp(iter->type->name, c) == 0, ty);
}

/* Same as previous function, except strcmp is replaced with a pointer comparison */
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *into) {
  SWIG_TypeCheck_Template(iter->type == from, into);
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr);
}

/* 
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/* 
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;
  
  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }    
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}
  
/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start, 
                            swig_module_info *end, 
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      register size_t l = 0;
      register size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	register size_t i = (l + r) >> 1; 
	const char *iname = iter->types[i]->name;
	if (iname) {
	  register int compare = strcmp(name, iname);
	  if (compare == 0) {	    
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start, 
                     swig_module_info *end, 
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      register size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }
  
  /* neither found a match */
  return 0;
}

/* 
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  register const unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    register unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/* 
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  register unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    register char d = *(c++);
    register unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    else 
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    else 
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/* 
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1 
#define  SWIG_IOError        	   -2 
#define  SWIG_RuntimeError   	   -3 
#define  SWIG_IndexError     	   -4 
#define  SWIG_TypeError      	   -5 
#define  SWIG_DivisionByZero 	   -6 
#define  SWIG_OverflowError  	   -7 
#define  SWIG_SyntaxError    	   -8 
#define  SWIG_ValueError     	   -9 
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12 
#define  SWIG_NullReferenceError   -13



/* Python.h has to appear first */
#include <Python.h>

/* Add PyOS_snprintf for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# if defined(_MSC_VER) || defined(__BORLANDC__) || defined(_WATCOM)
#  define PyOS_snprintf _snprintf
# else
#  define PyOS_snprintf snprintf
# endif
#endif

/* A crude PyString_FromFormat implementation for old Pythons */
#if PY_VERSION_HEX < 0x02020000

#ifndef SWIG_PYBUFFER_SIZE
# define SWIG_PYBUFFER_SIZE 1024
#endif

static PyObject *
PyString_FromFormat(const char *fmt, ...) {
  va_list ap;
  char buf[SWIG_PYBUFFER_SIZE * 2];
  int res;
  va_start(ap, fmt);
  res = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return (res < 0 || res >= (int)sizeof(buf)) ? 0 : PyString_FromString(buf);
}
#endif

/* Add PyObject_Del for old Pythons */
#if PY_VERSION_HEX < 0x01060000
# define PyObject_Del(op) PyMem_DEL((op))
#endif
#ifndef PyObject_DEL
# define PyObject_DEL PyObject_Del
#endif

/* A crude PyExc_StopIteration exception for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# ifndef PyExc_StopIteration
#  define PyExc_StopIteration PyExc_RuntimeError
# endif
# ifndef PyObject_GenericGetAttr
#  define PyObject_GenericGetAttr 0
# endif
#endif
/* Py_NotImplemented is defined in 2.1 and up. */
#if PY_VERSION_HEX < 0x02010000
# ifndef Py_NotImplemented
#  define Py_NotImplemented PyExc_RuntimeError
# endif
#endif


/* A crude PyString_AsStringAndSize implementation for old Pythons */
#if PY_VERSION_HEX < 0x02010000
# ifndef PyString_AsStringAndSize
#  define PyString_AsStringAndSize(obj, s, len) {*s = PyString_AsString(obj); *len = *s ? strlen(*s) : 0;}
# endif
#endif

/* PySequence_Size for old Pythons */
#if PY_VERSION_HEX < 0x02000000
# ifndef PySequence_Size
#  define PySequence_Size PySequence_Length
# endif
#endif


/* PyBool_FromLong for old Pythons */
#if PY_VERSION_HEX < 0x02030000
static
PyObject *PyBool_FromLong(long ok)
{
  PyObject *result = ok ? Py_True : Py_False;
  Py_INCREF(result);
  return result;
}
#endif


/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIME PyObject*
SWIG_Python_ErrorType(int code) {
  PyObject* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = PyExc_MemoryError;
    break;
  case SWIG_IOError:
    type = PyExc_IOError;
    break;
  case SWIG_RuntimeError:
    type = PyExc_RuntimeError;
    break;
  case SWIG_IndexError:
    type = PyExc_IndexError;
    break;
  case SWIG_TypeError:
    type = PyExc_TypeError;
    break;
  case SWIG_DivisionByZero:
    type = PyExc_ZeroDivisionError;
    break;
  case SWIG_OverflowError:
    type = PyExc_OverflowError;
    break;
  case SWIG_SyntaxError:
    type = PyExc_SyntaxError;
    break;
  case SWIG_ValueError:
    type = PyExc_ValueError;
    break;
  case SWIG_SystemError:
    type = PyExc_SystemError;
    break;
  case SWIG_AttributeError:
    type = PyExc_AttributeError;
    break;
  default:
    type = PyExc_RuntimeError;
  }
  return type;
}


SWIGRUNTIME void
SWIG_Python_AddErrorMsg(const char* mesg)
{
  PyObject *type = 0;
  PyObject *value = 0;
  PyObject *traceback = 0;

  if (PyErr_Occurred()) PyErr_Fetch(&type, &value, &traceback);
  if (value) {
    PyObject *old_str = PyObject_Str(value);
    PyErr_Clear();
    Py_XINCREF(type);
    PyErr_Format(type, "%s %s", PyString_AsString(old_str), mesg);
    Py_DECREF(old_str);
    Py_DECREF(value);
  } else {
    PyErr_Format(PyExc_RuntimeError, mesg);
  }
}



#if defined(SWIG_PYTHON_NO_THREADS)
#  if defined(SWIG_PYTHON_THREADS)
#    undef SWIG_PYTHON_THREADS
#  endif
#endif
#if defined(SWIG_PYTHON_THREADS) /* Threading support is enabled */
#  if !defined(SWIG_PYTHON_USE_GIL) && !defined(SWIG_PYTHON_NO_USE_GIL)
#    if (PY_VERSION_HEX >= 0x02030000) /* For 2.3 or later, use the PyGILState calls */
#      define SWIG_PYTHON_USE_GIL
#    endif
#  endif
#  if defined(SWIG_PYTHON_USE_GIL) /* Use PyGILState threads calls */
#    ifndef SWIG_PYTHON_INITIALIZE_THREADS
#     define SWIG_PYTHON_INITIALIZE_THREADS  PyEval_InitThreads() 
#    endif
#    ifdef __cplusplus /* C++ code */
       class SWIG_Python_Thread_Block {
         bool status;
         PyGILState_STATE state;
       public:
         void end() { if (status) { PyGILState_Release(state); status = false;} }
         SWIG_Python_Thread_Block() : status(true), state(PyGILState_Ensure()) {}
         ~SWIG_Python_Thread_Block() { end(); }
       };
       class SWIG_Python_Thread_Allow {
         bool status;
         PyThreadState *save;
       public:
         void end() { if (status) { PyEval_RestoreThread(save); status = false; }}
         SWIG_Python_Thread_Allow() : status(true), save(PyEval_SaveThread()) {}
         ~SWIG_Python_Thread_Allow() { end(); }
       };
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   SWIG_Python_Thread_Block _swig_thread_block
#      define SWIG_PYTHON_THREAD_END_BLOCK     _swig_thread_block.end()
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   SWIG_Python_Thread_Allow _swig_thread_allow
#      define SWIG_PYTHON_THREAD_END_ALLOW     _swig_thread_allow.end()
#    else /* C code */
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   PyGILState_STATE _swig_thread_block = PyGILState_Ensure()
#      define SWIG_PYTHON_THREAD_END_BLOCK     PyGILState_Release(_swig_thread_block)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   PyThreadState *_swig_thread_allow = PyEval_SaveThread()
#      define SWIG_PYTHON_THREAD_END_ALLOW     PyEval_RestoreThread(_swig_thread_allow)
#    endif
#  else /* Old thread way, not implemented, user must provide it */
#    if !defined(SWIG_PYTHON_INITIALIZE_THREADS)
#      define SWIG_PYTHON_INITIALIZE_THREADS
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_BLOCK)
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_BLOCK)
#      define SWIG_PYTHON_THREAD_END_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_ALLOW)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_ALLOW)
#      define SWIG_PYTHON_THREAD_END_ALLOW
#    endif
#  endif
#else /* No thread support */
#  define SWIG_PYTHON_INITIALIZE_THREADS
#  define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#  define SWIG_PYTHON_THREAD_END_BLOCK
#  define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#  define SWIG_PYTHON_THREAD_END_ALLOW
#endif

/* -----------------------------------------------------------------------------
 * Python API portion that goes into the runtime
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* cc-mode */
#endif
#endif

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
  int type;
  char *name;
  long lvalue;
  double dvalue;
  void   *pvalue;
  swig_type_info **ptype;
} swig_const_info;

#ifdef __cplusplus
#if 0
{ /* cc-mode */
#endif
}
#endif


/* -----------------------------------------------------------------------------
 * See the LICENSE file for information on copyright, usage and redistribution
 * of SWIG, and the README file for authors - http://www.swig.org/release.html.
 *
 * pyrun.swg
 *
 * This file contains the runtime support for Python modules
 * and includes code for managing global variables and pointer
 * type checking.
 *
 * ----------------------------------------------------------------------------- */

/* Common SWIG API */

#if PY_VERSION_HEX < 0x02050000
typedef int Py_ssize_t;
#endif

/* for raw pointers */
#define SWIG_Python_ConvertPtr(obj, pptr, type, flags)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, 0)
#define SWIG_ConvertPtr(obj, pptr, type, flags)         SWIG_Python_ConvertPtr(obj, pptr, type, flags)
#define SWIG_ConvertPtrAndOwn(obj,pptr,type,flags,own)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, own)
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(ptr, type, flags)
#define SWIG_CheckImplicit(ty)                          SWIG_Python_CheckImplicit(ty) 
#define SWIG_AcquirePtr(ptr, src)                       SWIG_Python_AcquirePtr(ptr, src)
#define swig_owntype                                    int

/* for raw packed data */
#define SWIG_ConvertPacked(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewPackedObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_ConvertPtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(ptr, type, flags)           SWIG_NewPointerObj(ptr, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_Python_ConvertFunctionPtr(obj, pptr, type)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_Python_NewPointerObj(ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Python_GetModule()
#define SWIG_SetModule(clientdata, pointer)             SWIG_Python_SetModule(pointer)
#define SWIG_NewClientData(obj)                         PySwigClientData_New(obj)

#define SWIG_SetErrorObj                                SWIG_Python_SetErrorObj                            
#define SWIG_SetErrorMsg                        	SWIG_Python_SetErrorMsg				   
#define SWIG_ErrorType(code)                    	SWIG_Python_ErrorType(code)                        
#define SWIG_Error(code, msg)            		SWIG_Python_SetErrorMsg(SWIG_ErrorType(code), msg) 
#define SWIG_fail                        		goto fail					   


/* Runtime API implementation */

/* Error manipulation */

SWIGINTERN void 
SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
  PyErr_SetObject(errtype, obj);
  Py_DECREF(obj);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

SWIGINTERN void 
SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK;
  PyErr_SetString(errtype, (char *) msg);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

#define SWIG_Python_Raise(obj, type, desc)  SWIG_Python_SetErrorObj(SWIG_Python_ExceptionType(desc), obj)

/* Set a constant value */

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   
  PyDict_SetItemString(d, (char*) name, obj);
  Py_DECREF(obj);                            
}

/* Append a value to the result obj */

SWIGINTERN PyObject*
SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {
#if !defined(SWIG_PYTHON_OUTPUT_TUPLE)
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyList_Check(result)) {
      PyObject *o2 = result;
      result = PyList_New(1);
      PyList_SetItem(result, 0, o2);
    }
    PyList_Append(result,obj);
    Py_DECREF(obj);
  }
  return result;
#else
  PyObject*   o2;
  PyObject*   o3;
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyTuple_Check(result)) {
      o2 = result;
      result = PyTuple_New(1);
      PyTuple_SET_ITEM(result, 0, o2);
    }
    o3 = PyTuple_New(1);
    PyTuple_SET_ITEM(o3, 0, obj);
    o2 = result;
    result = PySequence_Concat(o2, o3);
    Py_DECREF(o2);
    Py_DECREF(o3);
  }
  return result;
#endif
}

/* Unpack the argument tuple */

SWIGINTERN int
SWIG_Python_UnpackTuple(PyObject *args, const char *name, int min, int max, PyObject **objs)
{
  if (!args) {
    if (!min && !max) {
      return 1;
    } else {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got none", 
		   name, (min == max ? "" : "at least "), min);
      return 0;
    }
  }  
  if (!PyTuple_Check(args)) {
    PyErr_SetString(PyExc_SystemError, "UnpackTuple() argument list is not a tuple");
    return 0;
  } else {
    register int l = PyTuple_GET_SIZE(args);
    if (l < min) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at least "), min, l);
      return 0;
    } else if (l > max) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at most "), max, l);
      return 0;
    } else {
      register int i;
      for (i = 0; i < l; ++i) {
	objs[i] = PyTuple_GET_ITEM(args, i);
      }
      for (; l < max; ++l) {
	objs[l] = 0;
      }
      return i + 1;
    }    
  }
}

/* A functor is a function object with one single object argument */
#if PY_VERSION_HEX >= 0x02020000
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunctionObjArgs(functor, obj, NULL);
#else
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunction(functor, "O", obj);
#endif

/*
  Helper for static pointer initialization for both C and C++ code, for example
  static PyObject *SWIG_STATIC_POINTER(MyVar) = NewSomething(...);
*/
#ifdef __cplusplus
#define SWIG_STATIC_POINTER(var)  var
#else
#define SWIG_STATIC_POINTER(var)  var = 0; if (!var) var
#endif

/* -----------------------------------------------------------------------------
 * Pointer declarations
 * ----------------------------------------------------------------------------- */

/* Flags for new pointer objects */
#define SWIG_POINTER_NOSHADOW       (SWIG_POINTER_OWN      << 1)
#define SWIG_POINTER_NEW            (SWIG_POINTER_NOSHADOW | SWIG_POINTER_OWN)

#define SWIG_POINTER_IMPLICIT_CONV  (SWIG_POINTER_DISOWN   << 1)

#ifdef __cplusplus
extern "C" {
#if 0
} /* cc-mode */
#endif
#endif

/*  How to access Py_None */
#if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#  ifndef SWIG_PYTHON_NO_BUILD_NONE
#    ifndef SWIG_PYTHON_BUILD_NONE
#      define SWIG_PYTHON_BUILD_NONE
#    endif
#  endif
#endif

#ifdef SWIG_PYTHON_BUILD_NONE
#  ifdef Py_None
#   undef Py_None
#   define Py_None SWIG_Py_None()
#  endif
SWIGRUNTIMEINLINE PyObject * 
_SWIG_Py_None(void)
{
  PyObject *none = Py_BuildValue("");
  Py_DECREF(none);
  return none;
}
SWIGRUNTIME PyObject * 
SWIG_Py_None(void)
{
  static PyObject *SWIG_STATIC_POINTER(none) = _SWIG_Py_None();
  return none;
}
#endif

/* The python void return value */

SWIGRUNTIMEINLINE PyObject * 
SWIG_Py_Void(void)
{
  PyObject *none = Py_None;
  Py_INCREF(none);
  return none;
}

/* PySwigClientData */

typedef struct {
  PyObject *klass;
  PyObject *newraw;
  PyObject *newargs;
  PyObject *destroy;
  int delargs;
  int implicitconv;
} PySwigClientData;

SWIGRUNTIMEINLINE int 
SWIG_Python_CheckImplicit(swig_type_info *ty)
{
  PySwigClientData *data = (PySwigClientData *)ty->clientdata;
  return data ? data->implicitconv : 0;
}

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_ExceptionType(swig_type_info *desc) {
  PySwigClientData *data = desc ? (PySwigClientData *) desc->clientdata : 0;
  PyObject *klass = data ? data->klass : 0;
  return (klass ? klass : PyExc_RuntimeError);
}


SWIGRUNTIME PySwigClientData * 
PySwigClientData_New(PyObject* obj)
{
  if (!obj) {
    return 0;
  } else {
    PySwigClientData *data = (PySwigClientData *)malloc(sizeof(PySwigClientData));
    /* the klass element */
    data->klass = obj;
    Py_INCREF(data->klass);
    /* the newraw method and newargs arguments used to create a new raw instance */
    if (PyClass_Check(obj)) {
      data->newraw = 0;
      data->newargs = obj;
      Py_INCREF(obj);
    } else {
#if (PY_VERSION_HEX < 0x02020000)
      data->newraw = 0;
#else
      data->newraw = PyObject_GetAttrString(data->klass, (char *)"__new__");
#endif
      if (data->newraw) {
	Py_INCREF(data->newraw);
	data->newargs = PyTuple_New(1);
	PyTuple_SetItem(data->newargs, 0, obj);
      } else {
	data->newargs = obj;
      }
      Py_INCREF(data->newargs);
    }
    /* the destroy method, aka as the C++ delete method */
    data->destroy = PyObject_GetAttrString(data->klass, (char *)"__swig_destroy__");
    if (PyErr_Occurred()) {
      PyErr_Clear();
      data->destroy = 0;
    }
    if (data->destroy) {
      int flags;
      Py_INCREF(data->destroy);
      flags = PyCFunction_GET_FLAGS(data->destroy);
#ifdef METH_O
      data->delargs = !(flags & (METH_O));
#else
      data->delargs = 0;
#endif
    } else {
      data->delargs = 0;
    }
    data->implicitconv = 0;
    return data;
  }
}

SWIGRUNTIME void 
PySwigClientData_Del(PySwigClientData* data)
{
  Py_XDECREF(data->newraw);
  Py_XDECREF(data->newargs);
  Py_XDECREF(data->destroy);
}

/* =============== PySwigObject =====================*/

typedef struct {
  PyObject_HEAD
  void *ptr;
  swig_type_info *ty;
  int own;
  PyObject *next;
} PySwigObject;

SWIGRUNTIME PyObject *
PySwigObject_long(PySwigObject *v)
{
  return PyLong_FromVoidPtr(v->ptr);
}

SWIGRUNTIME PyObject *
PySwigObject_format(const char* fmt, PySwigObject *v)
{
  PyObject *res = NULL;
  PyObject *args = PyTuple_New(1);
  if (args) {
    if (PyTuple_SetItem(args, 0, PySwigObject_long(v)) == 0) {
      PyObject *ofmt = PyString_FromString(fmt);
      if (ofmt) {
	res = PyString_Format(ofmt,args);
	Py_DECREF(ofmt);
      }
      Py_DECREF(args);
    }
  }
  return res;
}

SWIGRUNTIME PyObject *
PySwigObject_oct(PySwigObject *v)
{
  return PySwigObject_format("%o",v);
}

SWIGRUNTIME PyObject *
PySwigObject_hex(PySwigObject *v)
{
  return PySwigObject_format("%x",v);
}

SWIGRUNTIME PyObject *
#ifdef METH_NOARGS
PySwigObject_repr(PySwigObject *v)
#else
PySwigObject_repr(PySwigObject *v, PyObject *args)
#endif
{
  const char *name = SWIG_TypePrettyName(v->ty);
  PyObject *hex = PySwigObject_hex(v);    
  PyObject *repr = PyString_FromFormat("<Swig Object of type '%s' at 0x%s>", name, PyString_AsString(hex));
  Py_DECREF(hex);
  if (v->next) {
#ifdef METH_NOARGS
    PyObject *nrep = PySwigObject_repr((PySwigObject *)v->next);
#else
    PyObject *nrep = PySwigObject_repr((PySwigObject *)v->next, args);
#endif
    PyString_ConcatAndDel(&repr,nrep);
  }
  return repr;  
}

SWIGRUNTIME int
PySwigObject_print(PySwigObject *v, FILE *fp, int SWIGUNUSEDPARM(flags))
{
#ifdef METH_NOARGS
  PyObject *repr = PySwigObject_repr(v);
#else
  PyObject *repr = PySwigObject_repr(v, NULL);
#endif
  if (repr) {
    fputs(PyString_AsString(repr), fp);
    Py_DECREF(repr);
    return 0; 
  } else {
    return 1; 
  }
}

SWIGRUNTIME PyObject *
PySwigObject_str(PySwigObject *v)
{
  char result[SWIG_BUFFER_SIZE];
  return SWIG_PackVoidPtr(result, v->ptr, v->ty->name, sizeof(result)) ?
    PyString_FromString(result) : 0;
}

SWIGRUNTIME int
PySwigObject_compare(PySwigObject *v, PySwigObject *w)
{
  void *i = v->ptr;
  void *j = w->ptr;
  return (i < j) ? -1 : ((i > j) ? 1 : 0);
}

SWIGRUNTIME PyTypeObject* _PySwigObject_type(void);

SWIGRUNTIME PyTypeObject*
PySwigObject_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = _PySwigObject_type();
  return type;
}

SWIGRUNTIMEINLINE int
PySwigObject_Check(PyObject *op) {
  return ((op)->ob_type == PySwigObject_type())
    || (strcmp((op)->ob_type->tp_name,"PySwigObject") == 0);
}

SWIGRUNTIME PyObject *
PySwigObject_New(void *ptr, swig_type_info *ty, int own);

SWIGRUNTIME void
PySwigObject_dealloc(PyObject *v)
{
  PySwigObject *sobj = (PySwigObject *) v;
  PyObject *next = sobj->next;
  if (sobj->own) {
    swig_type_info *ty = sobj->ty;
    PySwigClientData *data = ty ? (PySwigClientData *) ty->clientdata : 0;
    PyObject *destroy = data ? data->destroy : 0;
    if (destroy) {
      /* destroy is always a VARARGS method */
      PyObject *res;
      if (data->delargs) {
	/* we need to create a temporal object to carry the destroy operation */
	PyObject *tmp = PySwigObject_New(sobj->ptr, ty, 0);
	res = SWIG_Python_CallFunctor(destroy, tmp);
	Py_DECREF(tmp);
      } else {
	PyCFunction meth = PyCFunction_GET_FUNCTION(destroy);
	PyObject *mself = PyCFunction_GET_SELF(destroy);
	res = ((*meth)(mself, v));
      }
      Py_XDECREF(res);
    } else {
      const char *name = SWIG_TypePrettyName(ty);
#if !defined(SWIG_PYTHON_SILENT_MEMLEAK)
      printf("swig/python detected a memory leak of type '%s', no destructor found.\n", name);
#endif
    }
  } 
  Py_XDECREF(next);
  PyObject_DEL(v);
}

SWIGRUNTIME PyObject* 
PySwigObject_append(PyObject* v, PyObject* next)
{
  PySwigObject *sobj = (PySwigObject *) v;
#ifndef METH_O
  PyObject *tmp = 0;
  if (!PyArg_ParseTuple(next,(char *)"O:append", &tmp)) return NULL;
  next = tmp;
#endif
  if (!PySwigObject_Check(next)) {
    return NULL;
  }
  sobj->next = next;
  Py_INCREF(next);
  return SWIG_Py_Void();
}

SWIGRUNTIME PyObject* 
#ifdef METH_NOARGS
PySwigObject_next(PyObject* v)
#else
PySwigObject_next(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  PySwigObject *sobj = (PySwigObject *) v;
  if (sobj->next) {    
    Py_INCREF(sobj->next);
    return sobj->next;
  } else {
    return SWIG_Py_Void();
  }
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
PySwigObject_disown(PyObject *v)
#else
PySwigObject_disown(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  PySwigObject *sobj = (PySwigObject *)v;
  sobj->own = 0;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
PySwigObject_acquire(PyObject *v)
#else
PySwigObject_acquire(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  PySwigObject *sobj = (PySwigObject *)v;
  sobj->own = SWIG_POINTER_OWN;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
PySwigObject_own(PyObject *v, PyObject *args)
{
  PyObject *val = 0;
#if (PY_VERSION_HEX < 0x02020000)
  if (!PyArg_ParseTuple(args,(char *)"|O:own",&val))
#else
  if (!PyArg_UnpackTuple(args, (char *)"own", 0, 1, &val)) 
#endif
    {
      return NULL;
    } 
  else
    {
      PySwigObject *sobj = (PySwigObject *)v;
      PyObject *obj = PyBool_FromLong(sobj->own);
      if (val) {
#ifdef METH_NOARGS
	if (PyObject_IsTrue(val)) {
	  PySwigObject_acquire(v);
	} else {
	  PySwigObject_disown(v);
	}
#else
	if (PyObject_IsTrue(val)) {
	  PySwigObject_acquire(v,args);
	} else {
	  PySwigObject_disown(v,args);
	}
#endif
      } 
      return obj;
    }
}

#ifdef METH_O
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)PySwigObject_disown,  METH_NOARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)PySwigObject_acquire, METH_NOARGS,  (char *)"aquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)PySwigObject_own,     METH_VARARGS, (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)PySwigObject_append,  METH_O,       (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)PySwigObject_next,    METH_NOARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)PySwigObject_repr,    METH_NOARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#else
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)PySwigObject_disown,  METH_VARARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)PySwigObject_acquire, METH_VARARGS,  (char *)"aquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)PySwigObject_own,     METH_VARARGS,  (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)PySwigObject_append,  METH_VARARGS,  (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)PySwigObject_next,    METH_VARARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)PySwigObject_repr,   METH_VARARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#endif

#if PY_VERSION_HEX < 0x02020000
SWIGINTERN PyObject *
PySwigObject_getattr(PySwigObject *sobj,char *name)
{
  return Py_FindMethod(swigobject_methods, (PyObject *)sobj, name);
}
#endif

SWIGRUNTIME PyTypeObject*
_PySwigObject_type(void) {
  static char swigobject_doc[] = "Swig object carries a C/C++ instance pointer";
  
  static PyNumberMethods PySwigObject_as_number = {
    (binaryfunc)0, /*nb_add*/
    (binaryfunc)0, /*nb_subtract*/
    (binaryfunc)0, /*nb_multiply*/
    (binaryfunc)0, /*nb_divide*/
    (binaryfunc)0, /*nb_remainder*/
    (binaryfunc)0, /*nb_divmod*/
    (ternaryfunc)0,/*nb_power*/
    (unaryfunc)0,  /*nb_negative*/
    (unaryfunc)0,  /*nb_positive*/
    (unaryfunc)0,  /*nb_absolute*/
    (inquiry)0,    /*nb_nonzero*/
    0,		   /*nb_invert*/
    0,		   /*nb_lshift*/
    0,		   /*nb_rshift*/
    0,		   /*nb_and*/
    0,		   /*nb_xor*/
    0,		   /*nb_or*/
    (coercion)0,   /*nb_coerce*/
    (unaryfunc)PySwigObject_long, /*nb_int*/
    (unaryfunc)PySwigObject_long, /*nb_long*/
    (unaryfunc)0,                 /*nb_float*/
    (unaryfunc)PySwigObject_oct,  /*nb_oct*/
    (unaryfunc)PySwigObject_hex,  /*nb_hex*/
#if PY_VERSION_HEX >= 0x02020000
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_true_divide */ 
#elif PY_VERSION_HEX >= 0x02000000
    0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_or */
#endif
  };

  static PyTypeObject pyswigobject_type;  
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp
      = {
	PyObject_HEAD_INIT(NULL)
	0,				    /* ob_size */
	(char *)"PySwigObject",		    /* tp_name */
	sizeof(PySwigObject),		    /* tp_basicsize */
	0,			            /* tp_itemsize */
	(destructor)PySwigObject_dealloc,   /* tp_dealloc */
	(printfunc)PySwigObject_print,	    /* tp_print */
#if PY_VERSION_HEX < 0x02020000
	(getattrfunc)PySwigObject_getattr,  /* tp_getattr */ 
#else
	(getattrfunc)0,			    /* tp_getattr */ 
#endif
	(setattrfunc)0,			    /* tp_setattr */ 
	(cmpfunc)PySwigObject_compare,	    /* tp_compare */ 
	(reprfunc)PySwigObject_repr,	    /* tp_repr */    
	&PySwigObject_as_number,	    /* tp_as_number */
	0,				    /* tp_as_sequence */
	0,				    /* tp_as_mapping */
	(hashfunc)0,			    /* tp_hash */
	(ternaryfunc)0,			    /* tp_call */
	(reprfunc)PySwigObject_str,	    /* tp_str */
	PyObject_GenericGetAttr,            /* tp_getattro */
	0,				    /* tp_setattro */
	0,		                    /* tp_as_buffer */
	Py_TPFLAGS_DEFAULT,	            /* tp_flags */
	swigobject_doc, 	            /* tp_doc */        
	0,                                  /* tp_traverse */
	0,                                  /* tp_clear */
	0,                                  /* tp_richcompare */
	0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
	0,                                  /* tp_iter */
	0,                                  /* tp_iternext */
	swigobject_methods,		    /* tp_methods */ 
	0,			            /* tp_members */
	0,				    /* tp_getset */	    	
	0,			            /* tp_base */	        
	0,				    /* tp_dict */	    	
	0,				    /* tp_descr_get */  	
	0,				    /* tp_descr_set */  	
	0,				    /* tp_dictoffset */ 	
	0,				    /* tp_init */	    	
	0,				    /* tp_alloc */	    	
	0,			            /* tp_new */	    	
	0,	                            /* tp_free */	   
        0,                                  /* tp_is_gc */  
	0,				    /* tp_bases */   
	0,				    /* tp_mro */
	0,				    /* tp_cache */   
 	0,				    /* tp_subclasses */
	0,				    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
	0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
	0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
    pyswigobject_type = tmp;
    pyswigobject_type.ob_type = &PyType_Type;
    type_init = 1;
  }
  return &pyswigobject_type;
}

SWIGRUNTIME PyObject *
PySwigObject_New(void *ptr, swig_type_info *ty, int own)
{
  PySwigObject *sobj = PyObject_NEW(PySwigObject, PySwigObject_type());
  if (sobj) {
    sobj->ptr  = ptr;
    sobj->ty   = ty;
    sobj->own  = own;
    sobj->next = 0;
  }
  return (PyObject *)sobj;
}

/* -----------------------------------------------------------------------------
 * Implements a simple Swig Packed type, and use it instead of string
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *pack;
  swig_type_info *ty;
  size_t size;
} PySwigPacked;

SWIGRUNTIME int
PySwigPacked_print(PySwigPacked *v, FILE *fp, int SWIGUNUSEDPARM(flags))
{
  char result[SWIG_BUFFER_SIZE];
  fputs("<Swig Packed ", fp); 
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    fputs("at ", fp); 
    fputs(result, fp); 
  }
  fputs(v->ty->name,fp); 
  fputs(">", fp);
  return 0; 
}
  
SWIGRUNTIME PyObject *
PySwigPacked_repr(PySwigPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    return PyString_FromFormat("<Swig Packed at %s%s>", result, v->ty->name);
  } else {
    return PyString_FromFormat("<Swig Packed %s>", v->ty->name);
  }  
}

SWIGRUNTIME PyObject *
PySwigPacked_str(PySwigPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))){
    return PyString_FromFormat("%s%s", result, v->ty->name);
  } else {
    return PyString_FromString(v->ty->name);
  }  
}

SWIGRUNTIME int
PySwigPacked_compare(PySwigPacked *v, PySwigPacked *w)
{
  size_t i = v->size;
  size_t j = w->size;
  int s = (i < j) ? -1 : ((i > j) ? 1 : 0);
  return s ? s : strncmp((char *)v->pack, (char *)w->pack, 2*v->size);
}

SWIGRUNTIME PyTypeObject* _PySwigPacked_type(void);

SWIGRUNTIME PyTypeObject*
PySwigPacked_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = _PySwigPacked_type();
  return type;
}

SWIGRUNTIMEINLINE int
PySwigPacked_Check(PyObject *op) {
  return ((op)->ob_type == _PySwigPacked_type()) 
    || (strcmp((op)->ob_type->tp_name,"PySwigPacked") == 0);
}

SWIGRUNTIME void
PySwigPacked_dealloc(PyObject *v)
{
  if (PySwigPacked_Check(v)) {
    PySwigPacked *sobj = (PySwigPacked *) v;
    free(sobj->pack);
  }
  PyObject_DEL(v);
}

SWIGRUNTIME PyTypeObject*
_PySwigPacked_type(void) {
  static char swigpacked_doc[] = "Swig object carries a C/C++ instance pointer";
  static PyTypeObject pyswigpacked_type;
  static int type_init = 0;  
  if (!type_init) {
    const PyTypeObject tmp
      = {
	PyObject_HEAD_INIT(NULL)
	0,				    /* ob_size */	
	(char *)"PySwigPacked",		    /* tp_name */	
	sizeof(PySwigPacked),		    /* tp_basicsize */	
	0,				    /* tp_itemsize */	
	(destructor)PySwigPacked_dealloc,   /* tp_dealloc */	
	(printfunc)PySwigPacked_print,	    /* tp_print */   	
	(getattrfunc)0,			    /* tp_getattr */ 	
	(setattrfunc)0,			    /* tp_setattr */ 	
	(cmpfunc)PySwigPacked_compare,	    /* tp_compare */ 	
	(reprfunc)PySwigPacked_repr,	    /* tp_repr */    	
	0,	                            /* tp_as_number */	
	0,				    /* tp_as_sequence */
	0,				    /* tp_as_mapping */	
	(hashfunc)0,			    /* tp_hash */	
	(ternaryfunc)0,			    /* tp_call */	
	(reprfunc)PySwigPacked_str,	    /* tp_str */	
	PyObject_GenericGetAttr,            /* tp_getattro */
	0,				    /* tp_setattro */
	0,		                    /* tp_as_buffer */
	Py_TPFLAGS_DEFAULT,	            /* tp_flags */
	swigpacked_doc, 	            /* tp_doc */
	0,                                  /* tp_traverse */
	0,                                  /* tp_clear */
	0,                                  /* tp_richcompare */
	0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
	0,                                  /* tp_iter */
	0,                                  /* tp_iternext */
	0,		                    /* tp_methods */ 
	0,			            /* tp_members */
	0,				    /* tp_getset */	    	
	0,			            /* tp_base */	        
	0,				    /* tp_dict */	    	
	0,				    /* tp_descr_get */  	
	0,				    /* tp_descr_set */  	
	0,				    /* tp_dictoffset */ 	
	0,				    /* tp_init */	    	
	0,				    /* tp_alloc */	    	
	0,			            /* tp_new */	    	
	0, 	                            /* tp_free */	   
        0,                                  /* tp_is_gc */  
	0,				    /* tp_bases */   
	0,				    /* tp_mro */
	0,				    /* tp_cache */   
 	0,				    /* tp_subclasses */
	0,				    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
	0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
	0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
    pyswigpacked_type = tmp;
    pyswigpacked_type.ob_type = &PyType_Type;
    type_init = 1;
  }
  return &pyswigpacked_type;
}

SWIGRUNTIME PyObject *
PySwigPacked_New(void *ptr, size_t size, swig_type_info *ty)
{
  PySwigPacked *sobj = PyObject_NEW(PySwigPacked, PySwigPacked_type());
  if (sobj) {
    void *pack = malloc(size);
    if (pack) {
      memcpy(pack, ptr, size);
      sobj->pack = pack;
      sobj->ty   = ty;
      sobj->size = size;
    } else {
      PyObject_DEL((PyObject *) sobj);
      sobj = 0;
    }
  }
  return (PyObject *) sobj;
}

SWIGRUNTIME swig_type_info *
PySwigPacked_UnpackData(PyObject *obj, void *ptr, size_t size)
{
  if (PySwigPacked_Check(obj)) {
    PySwigPacked *sobj = (PySwigPacked *)obj;
    if (sobj->size != size) return 0;
    memcpy(ptr, sobj->pack, size);
    return sobj->ty;
  } else {
    return 0;
  }
}

/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIMEINLINE PyObject *
_SWIG_This(void)
{
  return PyString_FromString("this");
}

SWIGRUNTIME PyObject *
SWIG_This(void)
{
  static PyObject *SWIG_STATIC_POINTER(swig_this) = _SWIG_This();
  return swig_this;
}

/* #define SWIG_PYTHON_SLOW_GETSET_THIS */

SWIGRUNTIME PySwigObject *
SWIG_Python_GetSwigThis(PyObject *pyobj) 
{
  if (PySwigObject_Check(pyobj)) {
    return (PySwigObject *) pyobj;
  } else {
    PyObject *obj = 0;
#if (!defined(SWIG_PYTHON_SLOW_GETSET_THIS) && (PY_VERSION_HEX >= 0x02030000))
    if (PyInstance_Check(pyobj)) {
      obj = _PyInstance_Lookup(pyobj, SWIG_This());      
    } else {
      PyObject **dictptr = _PyObject_GetDictPtr(pyobj);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	obj = dict ? PyDict_GetItem(dict, SWIG_This()) : 0;
      } else {
#ifdef PyWeakref_CheckProxy
	if (PyWeakref_CheckProxy(pyobj)) {
	  PyObject *wobj = PyWeakref_GET_OBJECT(pyobj);
	  return wobj ? SWIG_Python_GetSwigThis(wobj) : 0;
	}
#endif
	obj = PyObject_GetAttr(pyobj,SWIG_This());
	if (obj) {
	  Py_DECREF(obj);
	} else {
	  if (PyErr_Occurred()) PyErr_Clear();
	  return 0;
	}
      }
    }
#else
    obj = PyObject_GetAttr(pyobj,SWIG_This());
    if (obj) {
      Py_DECREF(obj);
    } else {
      if (PyErr_Occurred()) PyErr_Clear();
      return 0;
    }
#endif
    if (obj && !PySwigObject_Check(obj)) {
      /* a PyObject is called 'this', try to get the 'real this'
	 PySwigObject from it */ 
      return SWIG_Python_GetSwigThis(obj);
    }
    return (PySwigObject *)obj;
  }
}

/* Acquire a pointer value */

SWIGRUNTIME int
SWIG_Python_AcquirePtr(PyObject *obj, int own) {
  if (own) {
    PySwigObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (sobj) {
      int oldown = sobj->own;
      sobj->own = own;
      return oldown;
    }
  }
  return 0;
}

/* Convert a pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {
  if (!obj) return SWIG_ERROR;
  if (obj == Py_None) {
    if (ptr) *ptr = 0;
    return SWIG_OK;
  } else {
    PySwigObject *sobj = SWIG_Python_GetSwigThis(obj);
    while (sobj) {
      void *vptr = sobj->ptr;
      if (ty) {
	swig_type_info *to = sobj->ty;
	if (to == ty) {
	  /* no type cast needed */
	  if (ptr) *ptr = vptr;
	  break;
	} else {
	  swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
	  if (!tc) {
	    sobj = (PySwigObject *)sobj->next;
	  } else {
	    if (ptr) *ptr = SWIG_TypeCast(tc,vptr);
	    break;
	  }
	}
      } else {
	if (ptr) *ptr = vptr;
	break;
      }
    }
    if (sobj) {
      if (own) *own = sobj->own;
      if (flags & SWIG_POINTER_DISOWN) {
	sobj->own = 0;
      }
      return SWIG_OK;
    } else {
      int res = SWIG_ERROR;
      if (flags & SWIG_POINTER_IMPLICIT_CONV) {
	PySwigClientData *data = ty ? (PySwigClientData *) ty->clientdata : 0;
	if (data && !data->implicitconv) {
	  PyObject *klass = data->klass;
	  if (klass) {
	    PyObject *impconv;
	    data->implicitconv = 1; /* avoid recursion and call 'explicit' constructors*/
	    impconv = SWIG_Python_CallFunctor(klass, obj);
	    data->implicitconv = 0;
	    if (PyErr_Occurred()) {
	      PyErr_Clear();
	      impconv = 0;
	    }
	    if (impconv) {
	      PySwigObject *iobj = SWIG_Python_GetSwigThis(impconv);
	      if (iobj) {
		void *vptr;
		res = SWIG_Python_ConvertPtrAndOwn((PyObject*)iobj, &vptr, ty, 0, 0);
		if (SWIG_IsOK(res)) {
		  if (ptr) {
		    *ptr = vptr;
		    /* transfer the ownership to 'ptr' */
		    iobj->own = 0;
		    res = SWIG_AddCast(res);
		    res = SWIG_AddNewMask(res);
		  } else {
		    res = SWIG_AddCast(res);		    
		  }
		}
	      }
	      Py_DECREF(impconv);
	    }
	  }
	}
      }
      return res;
    }
  }
}

/* Convert a function ptr value */

SWIGRUNTIME int
SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {
  if (!PyCFunction_Check(obj)) {
    return SWIG_ConvertPtr(obj, ptr, ty, 0);
  } else {
    void *vptr = 0;
    
    /* here we get the method pointer for callbacks */
    const char *doc = (((PyCFunctionObject *)obj) -> m_ml -> ml_doc);
    const char *desc = doc ? strstr(doc, "swig_ptr: ") : 0;
    if (desc) {
      desc = ty ? SWIG_UnpackVoidPtr(desc + 10, &vptr, ty->name) : 0;
      if (!desc) return SWIG_ERROR;
    }
    if (ty) {
      swig_cast_info *tc = SWIG_TypeCheck(desc,ty);
      if (!tc) return SWIG_ERROR;
      *ptr = SWIG_TypeCast(tc,vptr);
    } else {
      *ptr = vptr;
    }
    return SWIG_OK;
  }
}

/* Convert a packed value value */

SWIGRUNTIME int
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {
  swig_type_info *to = PySwigPacked_UnpackData(obj, ptr, sz);
  if (!to) return SWIG_ERROR;
  if (ty) {
    if (to != ty) {
      /* check type cast? */
      swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
      if (!tc) return SWIG_ERROR;
    }
  }
  return SWIG_OK;
}  

/* -----------------------------------------------------------------------------
 * Create a new pointer object
 * ----------------------------------------------------------------------------- */

/*
  Create a new instance object, whitout calling __init__, and set the
  'this' attribute.
*/

SWIGRUNTIME PyObject* 
SWIG_Python_NewShadowInstance(PySwigClientData *data, PyObject *swig_this)
{
#if (PY_VERSION_HEX >= 0x02020000)
  PyObject *inst = 0;
  PyObject *newraw = data->newraw;
  if (newraw) {
    inst = PyObject_Call(newraw, data->newargs, NULL);
    if (inst) {
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
      PyObject **dictptr = _PyObject_GetDictPtr(inst);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	if (dict == NULL) {
	  dict = PyDict_New();
	  *dictptr = dict;
	  PyDict_SetItem(dict, SWIG_This(), swig_this);
	}
      }
#else
      PyObject *key = SWIG_This();
      PyObject_SetAttr(inst, key, swig_this);
#endif
    }
  } else {
    PyObject *dict = PyDict_New();
    PyDict_SetItem(dict, SWIG_This(), swig_this);
    inst = PyInstance_NewRaw(data->newargs, dict);
    Py_DECREF(dict);
  }
  return inst;
#else
#if (PY_VERSION_HEX >= 0x02010000)
  PyObject *inst;
  PyObject *dict = PyDict_New();
  PyDict_SetItem(dict, SWIG_This(), swig_this);
  inst = PyInstance_NewRaw(data->newargs, dict);
  Py_DECREF(dict);
  return (PyObject *) inst;
#else
  PyInstanceObject *inst = PyObject_NEW(PyInstanceObject, &PyInstance_Type);
  if (inst == NULL) {
    return NULL;
  }
  inst->in_class = (PyClassObject *)data->newargs;
  Py_INCREF(inst->in_class);
  inst->in_dict = PyDict_New();
  if (inst->in_dict == NULL) {
    Py_DECREF(inst);
    return NULL;
  }
#ifdef Py_TPFLAGS_HAVE_WEAKREFS
  inst->in_weakreflist = NULL;
#endif
#ifdef Py_TPFLAGS_GC
  PyObject_GC_Init(inst);
#endif
  PyDict_SetItem(inst->in_dict, SWIG_This(), swig_this);
  return (PyObject *) inst;
#endif
#endif
}

SWIGRUNTIME void
SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)
{
 PyObject *dict;
#if (PY_VERSION_HEX >= 0x02020000) && !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
 PyObject **dictptr = _PyObject_GetDictPtr(inst);
 if (dictptr != NULL) {
   dict = *dictptr;
   if (dict == NULL) {
     dict = PyDict_New();
     *dictptr = dict;
   }
   PyDict_SetItem(dict, SWIG_This(), swig_this);
   return;
 }
#endif
 dict = PyObject_GetAttrString(inst, "__dict__");
 PyDict_SetItem(dict, SWIG_This(), swig_this);
 Py_DECREF(dict);
} 


SWIGINTERN PyObject *
SWIG_Python_InitShadowInstance(PyObject *args) {
  PyObject *obj[2];
  if (!SWIG_Python_UnpackTuple(args,(char*)"swiginit", 2, 2, obj)) {
    return NULL;
  } else {
    PySwigObject *sthis = SWIG_Python_GetSwigThis(obj[0]);
    if (sthis) {
      PySwigObject_append((PyObject*) sthis, obj[1]);
    } else {
      SWIG_Python_SetSwigThis(obj[0], obj[1]);
    }
    return SWIG_Py_Void();
  }
}

/* Create a new pointer object */

SWIGRUNTIME PyObject *
SWIG_Python_NewPointerObj(void *ptr, swig_type_info *type, int flags) {
  if (!ptr) {
    return SWIG_Py_Void();
  } else {
    int own = (flags & SWIG_POINTER_OWN) ? SWIG_POINTER_OWN : 0;
    PyObject *robj = PySwigObject_New(ptr, type, own);
    PySwigClientData *clientdata = type ? (PySwigClientData *)(type->clientdata) : 0;
    if (clientdata && !(flags & SWIG_POINTER_NOSHADOW)) {
      PyObject *inst = SWIG_Python_NewShadowInstance(clientdata, robj);
      if (inst) {
	Py_DECREF(robj);
	robj = inst;
      }
    }
    return robj;
  }
}

/* Create a new packed object */

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {
  return ptr ? PySwigPacked_New((void *) ptr, sz, type) : SWIG_Py_Void();
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

#ifdef SWIG_LINK_RUNTIME
void *SWIG_ReturnGlobalTypeList(void *);
#endif

SWIGRUNTIME swig_module_info *
SWIG_Python_GetModule(void) {
  static void *type_pointer = (void *)0;
  /* first check if module already created */
  if (!type_pointer) {
#ifdef SWIG_LINK_RUNTIME
    type_pointer = SWIG_ReturnGlobalTypeList((void *)0);
#else
    type_pointer = PyCObject_Import((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				    (char*)"type_pointer" SWIG_TYPE_TABLE_NAME);
    if (PyErr_Occurred()) {
      PyErr_Clear();
      type_pointer = (void *)0;
    }
#endif
  }
  return (swig_module_info *) type_pointer;
}

#if PY_MAJOR_VERSION < 2
/* PyModule_AddObject function was introduced in Python 2.0.  The following function
   is copied out of Python/modsupport.c in python version 2.3.4 */
SWIGINTERN int
PyModule_AddObject(PyObject *m, char *name, PyObject *o)
{
  PyObject *dict;
  if (!PyModule_Check(m)) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs module as first arg");
    return SWIG_ERROR;
  }
  if (!o) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs non-NULL value");
    return SWIG_ERROR;
  }
  
  dict = PyModule_GetDict(m);
  if (dict == NULL) {
    /* Internal error -- modules must have a dict! */
    PyErr_Format(PyExc_SystemError, "module '%s' has no __dict__",
		 PyModule_GetName(m));
    return SWIG_ERROR;
  }
  if (PyDict_SetItemString(dict, name, o))
    return SWIG_ERROR;
  Py_DECREF(o);
  return SWIG_OK;
}
#endif

SWIGRUNTIME void
SWIG_Python_DestroyModule(void *vptr)
{
  swig_module_info *swig_module = (swig_module_info *) vptr;
  swig_type_info **types = swig_module->types;
  size_t i;
  for (i =0; i < swig_module->size; ++i) {
    swig_type_info *ty = types[i];
    if (ty->owndata) {
      PySwigClientData *data = (PySwigClientData *) ty->clientdata;
      if (data) PySwigClientData_Del(data);
    }
  }
  Py_DECREF(SWIG_This());
}

SWIGRUNTIME void
SWIG_Python_SetModule(swig_module_info *swig_module) {
  static PyMethodDef swig_empty_runtime_method_table[] = { {NULL, NULL, 0, NULL} };/* Sentinel */

  PyObject *module = Py_InitModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				   swig_empty_runtime_method_table);
  PyObject *pointer = PyCObject_FromVoidPtr((void *) swig_module, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
}

/* The python cached type query */
SWIGRUNTIME PyObject *
SWIG_Python_TypeCache() {
  static PyObject *SWIG_STATIC_POINTER(cache) = PyDict_New();
  return cache;
}

SWIGRUNTIME swig_type_info *
SWIG_Python_TypeQuery(const char *type)
{
  PyObject *cache = SWIG_Python_TypeCache();
  PyObject *key = PyString_FromString(type); 
  PyObject *obj = PyDict_GetItem(cache, key);
  swig_type_info *descriptor;
  if (obj) {
    descriptor = (swig_type_info *) PyCObject_AsVoidPtr(obj);
  } else {
    swig_module_info *swig_module = SWIG_Python_GetModule();
    descriptor = SWIG_TypeQueryModule(swig_module, swig_module, type);
    if (descriptor) {
      obj = PyCObject_FromVoidPtr(descriptor, NULL);
      PyDict_SetItem(cache, key, obj);
      Py_DECREF(obj);
    }
  }
  Py_DECREF(key);
  return descriptor;
}

/* 
   For backward compatibility only
*/
#define SWIG_POINTER_EXCEPTION  0
#define SWIG_arg_fail(arg)      SWIG_Python_ArgFail(arg)
#define SWIG_MustGetPtr(p, type, argnum, flags)  SWIG_Python_MustGetPtr(p, type, argnum, flags)

SWIGRUNTIME int
SWIG_Python_AddErrMesg(const char* mesg, int infront)
{
  if (PyErr_Occurred()) {
    PyObject *type = 0;
    PyObject *value = 0;
    PyObject *traceback = 0;
    PyErr_Fetch(&type, &value, &traceback);
    if (value) {
      PyObject *old_str = PyObject_Str(value);
      Py_XINCREF(type);
      PyErr_Clear();
      if (infront) {
	PyErr_Format(type, "%s %s", mesg, PyString_AsString(old_str));
      } else {
	PyErr_Format(type, "%s %s", PyString_AsString(old_str), mesg);
      }
      Py_DECREF(old_str);
    }
    return 1;
  } else {
    return 0;
  }
}
  
SWIGRUNTIME int
SWIG_Python_ArgFail(int argnum)
{
  if (PyErr_Occurred()) {
    /* add information about failing argument */
    char mesg[256];
    PyOS_snprintf(mesg, sizeof(mesg), "argument number %d:", argnum);
    return SWIG_Python_AddErrMesg(mesg, 1);
  } else {
    return 0;
  }
}

SWIGRUNTIMEINLINE const char *
PySwigObject_GetDesc(PyObject *self)
{
  PySwigObject *v = (PySwigObject *)self;
  swig_type_info *ty = v ? v->ty : 0;
  return ty ? ty->str : (char*)"";
}

SWIGRUNTIME void
SWIG_Python_TypeError(const char *type, PyObject *obj)
{
  if (type) {
#if defined(SWIG_COBJECT_TYPES)
    if (obj && PySwigObject_Check(obj)) {
      const char *otype = (const char *) PySwigObject_GetDesc(obj);
      if (otype) {
	PyErr_Format(PyExc_TypeError, "a '%s' is expected, 'PySwigObject(%s)' is received",
		     type, otype);
	return;
      }
    } else 
#endif      
    {
      const char *otype = (obj ? obj->ob_type->tp_name : 0); 
      if (otype) {
	PyObject *str = PyObject_Str(obj);
	const char *cstr = str ? PyString_AsString(str) : 0;
	if (cstr) {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s(%s)' is received",
		       type, otype, cstr);
	} else {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s' is received",
		       type, otype);
	}
	Py_XDECREF(str);
	return;
      }
    }   
    PyErr_Format(PyExc_TypeError, "a '%s' is expected", type);
  } else {
    PyErr_Format(PyExc_TypeError, "unexpected type is received");
  }
}


/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME void *
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int argnum, int flags) {
  void *result;
  if (SWIG_Python_ConvertPtr(obj, &result, ty, flags) == -1) {
    PyErr_Clear();
    if (flags & SWIG_POINTER_EXCEPTION) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
      SWIG_Python_ArgFail(argnum);
    }
  }
  return result;
}


#ifdef __cplusplus
#if 0
{ /* cc-mode */
#endif
}
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } else 



/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_FlagType swig_types[0]
#define SWIGTYPE_p_PyArrayStringProperty swig_types[1]
#define SWIGTYPE_p_PyChoiceEditor swig_types[2]
#define SWIGTYPE_p_PyColourProperty swig_types[3]
#define SWIGTYPE_p_PyComboBoxEditor swig_types[4]
#define SWIGTYPE_p_PyEditEnumProperty swig_types[5]
#define SWIGTYPE_p_PyEditor swig_types[6]
#define SWIGTYPE_p_PyEditorDialogAdapter swig_types[7]
#define SWIGTYPE_p_PyEnumProperty swig_types[8]
#define SWIGTYPE_p_PyFileDialogAdapter swig_types[9]
#define SWIGTYPE_p_PyFileProperty swig_types[10]
#define SWIGTYPE_p_PyFlagsProperty swig_types[11]
#define SWIGTYPE_p_PyFloatProperty swig_types[12]
#define SWIGTYPE_p_PyFontProperty swig_types[13]
#define SWIGTYPE_p_PyIntProperty swig_types[14]
#define SWIGTYPE_p_PyLongStringDialogAdapter swig_types[15]
#define SWIGTYPE_p_PyLongStringProperty swig_types[16]
#define SWIGTYPE_p_PyProperty swig_types[17]
#define SWIGTYPE_p_PyStringProperty swig_types[18]
#define SWIGTYPE_p_PySystemColourProperty swig_types[19]
#define SWIGTYPE_p_PyTextCtrlEditor swig_types[20]
#define SWIGTYPE_p_PyUIntProperty swig_types[21]
#define SWIGTYPE_p_ValArrItem swig_types[22]
#define SWIGTYPE_p_char swig_types[23]
#define SWIGTYPE_p_double swig_types[24]
#define SWIGTYPE_p_f_p_wxPropertyGrid_p_wxPGProperty_p_wxPGProperty__int swig_types[25]
#define SWIGTYPE_p_int swig_types[26]
#define SWIGTYPE_p_long swig_types[27]
#define SWIGTYPE_p_p_wxBookCtrlBase swig_types[28]
#define SWIGTYPE_p_p_wxChar swig_types[29]
#define SWIGTYPE_p_p_wxColourDialog swig_types[30]
#define SWIGTYPE_p_p_wxControl swig_types[31]
#define SWIGTYPE_p_p_wxControlWithItems swig_types[32]
#define SWIGTYPE_p_p_wxDialog swig_types[33]
#define SWIGTYPE_p_p_wxDirDialog swig_types[34]
#define SWIGTYPE_p_p_wxFileDialog swig_types[35]
#define SWIGTYPE_p_p_wxFindReplaceDialog swig_types[36]
#define SWIGTYPE_p_p_wxFontDialog swig_types[37]
#define SWIGTYPE_p_p_wxFrame swig_types[38]
#define SWIGTYPE_p_p_wxGenericProgressDialog swig_types[39]
#define SWIGTYPE_p_p_wxMDIChildFrame swig_types[40]
#define SWIGTYPE_p_p_wxMDIClientWindow swig_types[41]
#define SWIGTYPE_p_p_wxMDIParentFrame swig_types[42]
#define SWIGTYPE_p_p_wxMenuBar swig_types[43]
#define SWIGTYPE_p_p_wxMessageDialog swig_types[44]
#define SWIGTYPE_p_p_wxMiniFrame swig_types[45]
#define SWIGTYPE_p_p_wxMultiChoiceDialog swig_types[46]
#define SWIGTYPE_p_p_wxNumberEntryDialog swig_types[47]
#define SWIGTYPE_p_p_wxPGArrayEditorDialog swig_types[48]
#define SWIGTYPE_p_p_wxPGArrayStringEditorDialog swig_types[49]
#define SWIGTYPE_p_p_wxPGMultiButton swig_types[50]
#define SWIGTYPE_p_p_wxPanel swig_types[51]
#define SWIGTYPE_p_p_wxPasswordEntryDialog swig_types[52]
#define SWIGTYPE_p_p_wxPopupWindow swig_types[53]
#define SWIGTYPE_p_p_wxPreviewCanvas swig_types[54]
#define SWIGTYPE_p_p_wxPreviewControlBar swig_types[55]
#define SWIGTYPE_p_p_wxPreviewFrame swig_types[56]
#define SWIGTYPE_p_p_wxProgressDialog swig_types[57]
#define SWIGTYPE_p_p_wxPropertyGrid swig_types[58]
#define SWIGTYPE_p_p_wxPropertyGridManager swig_types[59]
#define SWIGTYPE_p_p_wxPyHScrolledWindow swig_types[60]
#define SWIGTYPE_p_p_wxPyHVScrolledWindow swig_types[61]
#define SWIGTYPE_p_p_wxPyHtmlListBox swig_types[62]
#define SWIGTYPE_p_p_wxPyPanel swig_types[63]
#define SWIGTYPE_p_p_wxPyPopupTransientWindow swig_types[64]
#define SWIGTYPE_p_p_wxPyPreviewControlBar swig_types[65]
#define SWIGTYPE_p_p_wxPyPreviewFrame swig_types[66]
#define SWIGTYPE_p_p_wxPyScrolledWindow swig_types[67]
#define SWIGTYPE_p_p_wxPyVListBox swig_types[68]
#define SWIGTYPE_p_p_wxPyVScrolledWindow swig_types[69]
#define SWIGTYPE_p_p_wxPyWindow swig_types[70]
#define SWIGTYPE_p_p_wxSashLayoutWindow swig_types[71]
#define SWIGTYPE_p_p_wxSashWindow swig_types[72]
#define SWIGTYPE_p_p_wxScrolledWindow swig_types[73]
#define SWIGTYPE_p_p_wxSimpleHtmlListBox swig_types[74]
#define SWIGTYPE_p_p_wxSingleChoiceDialog swig_types[75]
#define SWIGTYPE_p_p_wxSplashScreen swig_types[76]
#define SWIGTYPE_p_p_wxSplashScreenWindow swig_types[77]
#define SWIGTYPE_p_p_wxSplitterWindow swig_types[78]
#define SWIGTYPE_p_p_wxStatusBar swig_types[79]
#define SWIGTYPE_p_p_wxTextCtrlBase swig_types[80]
#define SWIGTYPE_p_p_wxTextEntryDialog swig_types[81]
#define SWIGTYPE_p_p_wxTipWindow swig_types[82]
#define SWIGTYPE_p_p_wxTopLevelWindow swig_types[83]
#define SWIGTYPE_p_p_wxWindow swig_types[84]
#define SWIGTYPE_p_unsigned_char swig_types[85]
#define SWIGTYPE_p_unsigned_int swig_types[86]
#define SWIGTYPE_p_unsigned_long swig_types[87]
#define SWIGTYPE_p_void swig_types[88]
#define SWIGTYPE_p_wxANIHandler swig_types[89]
#define SWIGTYPE_p_wxAcceleratorTable swig_types[90]
#define SWIGTYPE_p_wxActivateEvent swig_types[91]
#define SWIGTYPE_p_wxArrayInt swig_types[92]
#define SWIGTYPE_p_wxArrayPGProperty swig_types[93]
#define SWIGTYPE_p_wxArrayString swig_types[94]
#define SWIGTYPE_p_wxArrayStringProperty swig_types[95]
#define SWIGTYPE_p_wxBMPHandler swig_types[96]
#define SWIGTYPE_p_wxBitmap swig_types[97]
#define SWIGTYPE_p_wxBookCtrlBase swig_types[98]
#define SWIGTYPE_p_wxBookCtrlEvent swig_types[99]
#define SWIGTYPE_p_wxBoolProperty swig_types[100]
#define SWIGTYPE_p_wxBoxSizer swig_types[101]
#define SWIGTYPE_p_wxCURHandler swig_types[102]
#define SWIGTYPE_p_wxCalculateLayoutEvent swig_types[103]
#define SWIGTYPE_p_wxChar swig_types[104]
#define SWIGTYPE_p_wxChildFocusEvent swig_types[105]
#define SWIGTYPE_p_wxClipboardTextEvent swig_types[106]
#define SWIGTYPE_p_wxCloseEvent swig_types[107]
#define SWIGTYPE_p_wxColour swig_types[108]
#define SWIGTYPE_p_wxColourData swig_types[109]
#define SWIGTYPE_p_wxColourDialog swig_types[110]
#define SWIGTYPE_p_wxColourProperty swig_types[111]
#define SWIGTYPE_p_wxColourPropertyValue swig_types[112]
#define SWIGTYPE_p_wxCommandEvent swig_types[113]
#define SWIGTYPE_p_wxContextMenuEvent swig_types[114]
#define SWIGTYPE_p_wxControl swig_types[115]
#define SWIGTYPE_p_wxControlWithItems swig_types[116]
#define SWIGTYPE_p_wxCursorProperty swig_types[117]
#define SWIGTYPE_p_wxDC swig_types[118]
#define SWIGTYPE_p_wxDateEvent swig_types[119]
#define SWIGTYPE_p_wxDateTime swig_types[120]
#define SWIGTYPE_p_wxDialog swig_types[121]
#define SWIGTYPE_p_wxDialogLayoutAdapter swig_types[122]
#define SWIGTYPE_p_wxDirDialog swig_types[123]
#define SWIGTYPE_p_wxDirProperty swig_types[124]
#define SWIGTYPE_p_wxDisplayChangedEvent swig_types[125]
#define SWIGTYPE_p_wxDropFilesEvent swig_types[126]
#define SWIGTYPE_p_wxDuplexMode swig_types[127]
#define SWIGTYPE_p_wxEditEnumProperty swig_types[128]
#define SWIGTYPE_p_wxEnumProperty swig_types[129]
#define SWIGTYPE_p_wxEraseEvent swig_types[130]
#define SWIGTYPE_p_wxEvent swig_types[131]
#define SWIGTYPE_p_wxEventBlocker swig_types[132]
#define SWIGTYPE_p_wxEvtHandler swig_types[133]
#define SWIGTYPE_p_wxFSFile swig_types[134]
#define SWIGTYPE_p_wxFileDialog swig_types[135]
#define SWIGTYPE_p_wxFileName swig_types[136]
#define SWIGTYPE_p_wxFileProperty swig_types[137]
#define SWIGTYPE_p_wxFileSystem swig_types[138]
#define SWIGTYPE_p_wxFindDialogEvent swig_types[139]
#define SWIGTYPE_p_wxFindReplaceData swig_types[140]
#define SWIGTYPE_p_wxFindReplaceDialog swig_types[141]
#define SWIGTYPE_p_wxFlagsProperty swig_types[142]
#define SWIGTYPE_p_wxFlexGridSizer swig_types[143]
#define SWIGTYPE_p_wxFloatProperty swig_types[144]
#define SWIGTYPE_p_wxFocusEvent swig_types[145]
#define SWIGTYPE_p_wxFont swig_types[146]
#define SWIGTYPE_p_wxFontData swig_types[147]
#define SWIGTYPE_p_wxFontDialog swig_types[148]
#define SWIGTYPE_p_wxFontProperty swig_types[149]
#define SWIGTYPE_p_wxFrame swig_types[150]
#define SWIGTYPE_p_wxGBSizerItem swig_types[151]
#define SWIGTYPE_p_wxGIFHandler swig_types[152]
#define SWIGTYPE_p_wxGenericProgressDialog swig_types[153]
#define SWIGTYPE_p_wxGridBagSizer swig_types[154]
#define SWIGTYPE_p_wxGridSizer swig_types[155]
#define SWIGTYPE_p_wxICOHandler swig_types[156]
#define SWIGTYPE_p_wxIconizeEvent swig_types[157]
#define SWIGTYPE_p_wxIdleEvent swig_types[158]
#define SWIGTYPE_p_wxImage swig_types[159]
#define SWIGTYPE_p_wxImageFileProperty swig_types[160]
#define SWIGTYPE_p_wxImageHandler swig_types[161]
#define SWIGTYPE_p_wxIndividualLayoutConstraint swig_types[162]
#define SWIGTYPE_p_wxInitDialogEvent swig_types[163]
#define SWIGTYPE_p_wxIntProperty swig_types[164]
#define SWIGTYPE_p_wxJPEGHandler swig_types[165]
#define SWIGTYPE_p_wxKeyEvent swig_types[166]
#define SWIGTYPE_p_wxLayoutAlgorithm swig_types[167]
#define SWIGTYPE_p_wxLayoutConstraints swig_types[168]
#define SWIGTYPE_p_wxListEvent swig_types[169]
#define SWIGTYPE_p_wxLongLong swig_types[170]
#define SWIGTYPE_p_wxLongLong_t swig_types[171]
#define SWIGTYPE_p_wxLongStringProperty swig_types[172]
#define SWIGTYPE_p_wxMDIChildFrame swig_types[173]
#define SWIGTYPE_p_wxMDIClientWindow swig_types[174]
#define SWIGTYPE_p_wxMDIParentFrame swig_types[175]
#define SWIGTYPE_p_wxMaximizeEvent swig_types[176]
#define SWIGTYPE_p_wxMenu swig_types[177]
#define SWIGTYPE_p_wxMenuBar swig_types[178]
#define SWIGTYPE_p_wxMenuEvent swig_types[179]
#define SWIGTYPE_p_wxMenuItem swig_types[180]
#define SWIGTYPE_p_wxMessageDialog swig_types[181]
#define SWIGTYPE_p_wxMiniFrame swig_types[182]
#define SWIGTYPE_p_wxMouseCaptureChangedEvent swig_types[183]
#define SWIGTYPE_p_wxMouseCaptureLostEvent swig_types[184]
#define SWIGTYPE_p_wxMouseEvent swig_types[185]
#define SWIGTYPE_p_wxMoveEvent swig_types[186]
#define SWIGTYPE_p_wxMultiChoiceDialog swig_types[187]
#define SWIGTYPE_p_wxNavigationKeyEvent swig_types[188]
#define SWIGTYPE_p_wxNcPaintEvent swig_types[189]
#define SWIGTYPE_p_wxNotifyEvent swig_types[190]
#define SWIGTYPE_p_wxNumberEntryDialog swig_types[191]
#define SWIGTYPE_p_wxNumericPropertyValidator swig_types[192]
#define SWIGTYPE_p_wxObject swig_types[193]
#define SWIGTYPE_p_wxPCXHandler swig_types[194]
#define SWIGTYPE_p_wxPGArrayEditorDialog swig_types[195]
#define SWIGTYPE_p_wxPGArrayStringEditorDialog swig_types[196]
#define SWIGTYPE_p_wxPGAttributeStorage swig_types[197]
#define SWIGTYPE_p_wxPGCell swig_types[198]
#define SWIGTYPE_p_wxPGCellData swig_types[199]
#define SWIGTYPE_p_wxPGCellRenderer swig_types[200]
#define SWIGTYPE_p_wxPGCheckBoxEditor swig_types[201]
#define SWIGTYPE_p_wxPGChoiceAndButtonEditor swig_types[202]
#define SWIGTYPE_p_wxPGChoiceEditor swig_types[203]
#define SWIGTYPE_p_wxPGChoiceEntry swig_types[204]
#define SWIGTYPE_p_wxPGChoices swig_types[205]
#define SWIGTYPE_p_wxPGChoicesData swig_types[206]
#define SWIGTYPE_p_wxPGComboBoxEditor swig_types[207]
#define SWIGTYPE_p_wxPGCommonValue swig_types[208]
#define SWIGTYPE_p_wxPGDefaultRenderer swig_types[209]
#define SWIGTYPE_p_wxPGEditor swig_types[210]
#define SWIGTYPE_p_wxPGEditorDialogAdapter swig_types[211]
#define SWIGTYPE_p_wxPGFileDialogAdapter swig_types[212]
#define SWIGTYPE_p_wxPGLongStringDialogAdapter swig_types[213]
#define SWIGTYPE_p_wxPGMultiButton swig_types[214]
#define SWIGTYPE_p_wxPGPaintData swig_types[215]
#define SWIGTYPE_p_wxPGPropArgCls swig_types[216]
#define SWIGTYPE_p_wxPGProperty swig_types[217]
#define SWIGTYPE_p_wxPGRootProperty swig_types[218]
#define SWIGTYPE_p_wxPGSpinCtrlEditor swig_types[219]
#define SWIGTYPE_p_wxPGTextCtrlAndButtonEditor swig_types[220]
#define SWIGTYPE_p_wxPGTextCtrlEditor swig_types[221]
#define SWIGTYPE_p_wxPGVIterator swig_types[222]
#define SWIGTYPE_p_wxPGVIteratorBase swig_types[223]
#define SWIGTYPE_p_wxPGValidationInfo swig_types[224]
#define SWIGTYPE_p_wxPGWindowList swig_types[225]
#define SWIGTYPE_p_wxPNGHandler swig_types[226]
#define SWIGTYPE_p_wxPNMHandler swig_types[227]
#define SWIGTYPE_p_wxPageSetupDialog swig_types[228]
#define SWIGTYPE_p_wxPageSetupDialogData swig_types[229]
#define SWIGTYPE_p_wxPaintEvent swig_types[230]
#define SWIGTYPE_p_wxPaletteChangedEvent swig_types[231]
#define SWIGTYPE_p_wxPanel swig_types[232]
#define SWIGTYPE_p_wxPaperSize swig_types[233]
#define SWIGTYPE_p_wxPasswordEntryDialog swig_types[234]
#define SWIGTYPE_p_wxPoint swig_types[235]
#define SWIGTYPE_p_wxPopupWindow swig_types[236]
#define SWIGTYPE_p_wxPreviewCanvas swig_types[237]
#define SWIGTYPE_p_wxPreviewControlBar swig_types[238]
#define SWIGTYPE_p_wxPreviewFrame swig_types[239]
#define SWIGTYPE_p_wxPrintData swig_types[240]
#define SWIGTYPE_p_wxPrintDialog swig_types[241]
#define SWIGTYPE_p_wxPrintDialogData swig_types[242]
#define SWIGTYPE_p_wxPrintPreview swig_types[243]
#define SWIGTYPE_p_wxPrinter swig_types[244]
#define SWIGTYPE_p_wxProgressDialog swig_types[245]
#define SWIGTYPE_p_wxPropertyCategory swig_types[246]
#define SWIGTYPE_p_wxPropertyGrid swig_types[247]
#define SWIGTYPE_p_wxPropertyGridConstIterator swig_types[248]
#define SWIGTYPE_p_wxPropertyGridEvent swig_types[249]
#define SWIGTYPE_p_wxPropertyGridHitTestResult swig_types[250]
#define SWIGTYPE_p_wxPropertyGridInterface swig_types[251]
#define SWIGTYPE_p_wxPropertyGridIterator swig_types[252]
#define SWIGTYPE_p_wxPropertyGridIteratorBase swig_types[253]
#define SWIGTYPE_p_wxPropertyGridManager swig_types[254]
#define SWIGTYPE_p_wxPropertyGridPage swig_types[255]
#define SWIGTYPE_p_wxPropertyGridPageState swig_types[256]
#define SWIGTYPE_p_wxPropertyGridPopulator swig_types[257]
#define SWIGTYPE_p_wxPyApp swig_types[258]
#define SWIGTYPE_p_wxPyCommandEvent swig_types[259]
#define SWIGTYPE_p_wxPyEvent swig_types[260]
#define SWIGTYPE_p_wxPyEvtHandler swig_types[261]
#define SWIGTYPE_p_wxPyHScrolledWindow swig_types[262]
#define SWIGTYPE_p_wxPyHVScrolledWindow swig_types[263]
#define SWIGTYPE_p_wxPyHtmlListBox swig_types[264]
#define SWIGTYPE_p_wxPyImageHandler swig_types[265]
#define SWIGTYPE_p_wxPyPanel swig_types[266]
#define SWIGTYPE_p_wxPyPopupTransientWindow swig_types[267]
#define SWIGTYPE_p_wxPyPreviewControlBar swig_types[268]
#define SWIGTYPE_p_wxPyPreviewFrame swig_types[269]
#define SWIGTYPE_p_wxPyPrintPreview swig_types[270]
#define SWIGTYPE_p_wxPyPrintout swig_types[271]
#define SWIGTYPE_p_wxPyScrolledWindow swig_types[272]
#define SWIGTYPE_p_wxPySizer swig_types[273]
#define SWIGTYPE_p_wxPyTaskBarIcon swig_types[274]
#define SWIGTYPE_p_wxPyVListBox swig_types[275]
#define SWIGTYPE_p_wxPyVScrolledWindow swig_types[276]
#define SWIGTYPE_p_wxPyValidator swig_types[277]
#define SWIGTYPE_p_wxPyWindow swig_types[278]
#define SWIGTYPE_p_wxQueryLayoutInfoEvent swig_types[279]
#define SWIGTYPE_p_wxQueryNewPaletteEvent swig_types[280]
#define SWIGTYPE_p_wxRect swig_types[281]
#define SWIGTYPE_p_wxRefCounter swig_types[282]
#define SWIGTYPE_p_wxSashEvent swig_types[283]
#define SWIGTYPE_p_wxSashLayoutWindow swig_types[284]
#define SWIGTYPE_p_wxSashWindow swig_types[285]
#define SWIGTYPE_p_wxScrollEvent swig_types[286]
#define SWIGTYPE_p_wxScrollHelper swig_types[287]
#define SWIGTYPE_p_wxScrollWinEvent swig_types[288]
#define SWIGTYPE_p_wxScrolledWindow swig_types[289]
#define SWIGTYPE_p_wxSetCursorEvent swig_types[290]
#define SWIGTYPE_p_wxShowEvent swig_types[291]
#define SWIGTYPE_p_wxSimpleHtmlListBox swig_types[292]
#define SWIGTYPE_p_wxSingleChoiceDialog swig_types[293]
#define SWIGTYPE_p_wxSize swig_types[294]
#define SWIGTYPE_p_wxSizeEvent swig_types[295]
#define SWIGTYPE_p_wxSizer swig_types[296]
#define SWIGTYPE_p_wxSizerItem swig_types[297]
#define SWIGTYPE_p_wxSplashScreen swig_types[298]
#define SWIGTYPE_p_wxSplashScreenWindow swig_types[299]
#define SWIGTYPE_p_wxSplitterEvent swig_types[300]
#define SWIGTYPE_p_wxSplitterWindow swig_types[301]
#define SWIGTYPE_p_wxStandardDialogLayoutAdapter swig_types[302]
#define SWIGTYPE_p_wxStaticBoxSizer swig_types[303]
#define SWIGTYPE_p_wxStatusBar swig_types[304]
#define SWIGTYPE_p_wxStdDialogButtonSizer swig_types[305]
#define SWIGTYPE_p_wxString swig_types[306]
#define SWIGTYPE_p_wxStringProperty swig_types[307]
#define SWIGTYPE_p_wxSysColourChangedEvent swig_types[308]
#define SWIGTYPE_p_wxSystemColourProperty swig_types[309]
#define SWIGTYPE_p_wxTGAHandler swig_types[310]
#define SWIGTYPE_p_wxTIFFHandler swig_types[311]
#define SWIGTYPE_p_wxTaskBarIconEvent swig_types[312]
#define SWIGTYPE_p_wxTextCtrlBase swig_types[313]
#define SWIGTYPE_p_wxTextEntryDialog swig_types[314]
#define SWIGTYPE_p_wxThreadEvent swig_types[315]
#define SWIGTYPE_p_wxTipWindow swig_types[316]
#define SWIGTYPE_p_wxTopLevelWindow swig_types[317]
#define SWIGTYPE_p_wxUIntProperty swig_types[318]
#define SWIGTYPE_p_wxULongLong swig_types[319]
#define SWIGTYPE_p_wxUniChar swig_types[320]
#define SWIGTYPE_p_wxUpdateUIEvent swig_types[321]
#define SWIGTYPE_p_wxValidator swig_types[322]
#define SWIGTYPE_p_wxVariant swig_types[323]
#define SWIGTYPE_p_wxWindow swig_types[324]
#define SWIGTYPE_p_wxWindowBase swig_types[325]
#define SWIGTYPE_p_wxWindowCreateEvent swig_types[326]
#define SWIGTYPE_p_wxWindowDestroyEvent swig_types[327]
#define SWIGTYPE_p_wxWindowModalDialogEvent swig_types[328]
#define SWIGTYPE_p_wxWrapSizer swig_types[329]
#define SWIGTYPE_p_wxXPMHandler swig_types[330]
static swig_type_info *swig_types[332];
static swig_module_info swig_module = {swig_types, 331, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#if (PY_VERSION_HEX <= 0x02000000)
# if !defined(SWIG_PYTHON_CLASSIC)
#  error "This python version requires to use swig with the '-classic' option"
# endif
#endif
#if (PY_VERSION_HEX <= 0x02020000)
# error "This python version requires to use swig with the '-nomodern' option"
#endif
#if (PY_VERSION_HEX <= 0x02020000)
# error "This python version requires to use swig with the '-nomodernargs' option"
#endif
#ifndef METH_O
# error "This python version requires to use swig with the '-nofastunpack' option"
#endif

/*-----------------------------------------------
              @(target):= _propgrid.so
  ------------------------------------------------*/
#define SWIG_init    init_propgrid

#define SWIG_name    "_propgrid"

#define SWIGVERSION 0x010329 


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>


namespace swig {
  class PyObject_ptr {
  protected:
    PyObject *_obj;

  public:
    PyObject_ptr() :_obj(0)
    {
    }

    PyObject_ptr(const PyObject_ptr& item) : _obj(item._obj)
    {
      Py_XINCREF(_obj);      
    }
    
    PyObject_ptr(PyObject *obj, bool initial_ref = true) :_obj(obj)
    {
      if (initial_ref) Py_XINCREF(_obj);
    }
    
    PyObject_ptr & operator=(const PyObject_ptr& item) 
    {
      Py_XINCREF(item._obj);
      Py_XDECREF(_obj);
      _obj = item._obj;
      return *this;      
    }
    
    ~PyObject_ptr() 
    {
      Py_XDECREF(_obj);
    }
    
    operator PyObject *() const
    {
      return _obj;
    }

    PyObject *operator->() const
    {
      return _obj;
    }
  };
}


namespace swig {
  struct PyObject_var : PyObject_ptr {
    PyObject_var(PyObject* obj = 0) : PyObject_ptr(obj, false) { }
    
    PyObject_var & operator = (PyObject* obj)
    {
      Py_XDECREF(_obj);
      _obj = obj;
      return *this;      
    }
  };
}



#include "wx/wxPython/wxPython.h"
#include "wx/wxPython/pyclasses.h"

#include <wx/propgrid/propgriddefs.h>
#include <wx/propgrid/property.h>
#include <wx/propgrid/props.h>
#include <wx/propgrid/propgridiface.h>
#include <wx/propgrid/propgrid.h>
#include <wx/propgrid/advprops.h>
#include <wx/propgrid/manager.h>
#include <wx/propgrid/editors.h>

#include <wx/editlbox.h>
#include <wx/listctrl.h>

#if !defined(__WXMSW__) && !defined(OutputDebugString)
  #define OutputDebugString(A)
#endif

// Change to '#if 1' inorder to add debug messages from build
#if 0
  #define MySWIGOutputDebugString OutputDebugString
#else
  #define MySWIGOutputDebugString(A)
#endif

#ifndef Py_RETURN_NONE
    #define Py_RETURN_NONE return Py_INCREF(Py_None), Py_None
#endif

//
// wxVariant PyObject container

class wxPGVariantDataPyObject : public wxVariantData
{
protected:
    PyObject* m_value;
public:
    wxPGVariantDataPyObject()
    {
        m_value = NULL;
    }
    wxPGVariantDataPyObject( PyObject* value )
    {
        if (!value) value = Py_None;
        Py_INCREF(value);
        m_value = value;
    }
    virtual ~wxPGVariantDataPyObject()
    {
        // Avoid crashing on program exit
        if ( _PyThreadState_Current != NULL && m_value )
            Py_DECREF(m_value);
    }
    inline PyObject* GetValue() const { return m_value; }
    inline PyObject* GetValueRef() const { return m_value; }
    inline void SetValue(PyObject* value)
    {
        if (m_value)
            Py_DECREF(m_value);
        if (!value) value = Py_None;
        Py_INCREF(value);
        m_value = value;
    }
    // TODO
    virtual bool Eq(wxVariantData&) const { return false; }
    virtual wxString GetType() const { return wxS("PyObject*"); }
    virtual wxVariantData* Clone() { return new wxPGVariantDataPyObject(); }
    virtual bool Read(wxString &) { return false; }
    virtual bool Write(wxString &) const { return true; }
    virtual wxVariant GetDefaultValue() const
    {
        return wxVariant( new wxPGVariantDataPyObject(NULL) );
    }
public:
    virtual void* GetValuePtr() { return (void*)m_value; }
};

PyObject* operator <<( PyObject* value, const wxVariant &variant )
{
	wxPGVariantDataPyObject *data =
        wxDynamicCastVariantData( variant.GetData(), wxPGVariantDataPyObject );
    wxASSERT( data );
    value = data->GetValue();
    Py_INCREF(value);
    return value;
}

wxVariant& operator <<( wxVariant &variant, PyObject* value )
{
    wxPGVariantDataPyObject *data = new wxPGVariantDataPyObject( value );
    variant.SetData( data );
    return variant;
}

PyObject* PyObjectPtrFromVariant( const wxVariant& v )
{
	wxPGVariantDataPyObject *data =
        wxDynamicCastVariantData( v.GetData(), wxPGVariantDataPyObject );
    if ( !data )
        return NULL;
    PyObject* retval = data->GetValue();
    Py_INCREF(retval);
    return retval;
}

wxVariant PyObjectToVariant( PyObject* value )
{
    wxVariant variant( new wxPGVariantDataPyObject( value ) );
    return variant;
}


wxPGProperty* NewPropertyCategory( const wxString& label,
                                   const wxString& name )
{
    return new wxPropertyCategory( label, name );
}

wxPGProperty* NewStringProperty( const wxString& label, const wxString& name,
                                 const wxString& value )
{
    return new wxStringProperty( label, name, value );
}

wxPGProperty* NewIntProperty( const wxString& label, const wxString& name,
                              long value )
{
    return new wxIntProperty( label, name, value );
}

wxPGProperty* NewUIntProperty( const wxString& label, const wxString& name,
                               unsigned long value )
{
    return new wxUIntProperty( label, name, value );
}

wxPGProperty* NewFloatProperty( const wxString& label, const wxString& name,
                                double value )
{
    return new wxFloatProperty( label, name, value );
}

wxPGProperty* NewBoolProperty( const wxString& label, const wxString& name,
                               bool value )
{
    return new wxBoolProperty( label, name, value );
}

wxPGProperty* NewEnumProperty( const wxString& label, const wxString& name,
        const wxArrayString& labels, const wxArrayInt& values,
        int value )
{
    return new wxEnumProperty( label, name, labels, values, value );
}

wxPGProperty* NewEditEnumProperty( const wxString& label, const wxString& name,
        const wxArrayString& labels, const wxArrayInt& values,
        const wxString& value )
{
    return new wxEditEnumProperty( label, name, labels, values, value );
}

wxPGProperty* NewFlagsProperty( const wxString& label, const wxString& name,
        const wxArrayString& labels, const wxArrayInt& values,
        int value )
{
    return new wxFlagsProperty( label, name, labels, values, value );
}

wxPGProperty* NewFileProperty( const wxString& label, const wxString& name,
                               const wxString& value )
{
    return new wxFileProperty( label, name, value );
}

wxPGProperty* NewLongStringProperty( const wxString& label,
                                     const wxString& name,
                                     const wxString& value )
{
    return new wxLongStringProperty( label, name, value );
}

wxPGProperty* NewDirProperty( const wxString& label, const wxString& name,
                              const wxString& value )
{
    return new wxDirProperty( label, name, value );
}

wxPGProperty* NewArrayStringProperty( const wxString& label,
                                      const wxString& name,
                                      const wxArrayString& value )
{
    return new wxArrayStringProperty( label, name, value );
}

wxPGProperty* NewFontProperty( const wxString& label, const wxString& name,
                               const wxFont& value )
{
    return new wxFontProperty( label, name, value );
}

wxPGProperty* NewSystemColourProperty( const wxString& label,
                            const wxString& name,
                            const wxColourPropertyValue& value )
{
    return new wxSystemColourProperty( label, name, value );
}

wxPGProperty* NewColourProperty( const wxString& label,
                            const wxString& name,
                            const wxColour& value )
{
    return new wxColourProperty( label, name, value );
}

wxPGProperty* NewCursorProperty( const wxString& label,
                      const wxString& name,
                      int value )
{
    return new wxCursorProperty( label, name, value );
}

wxPGProperty* NewImageFileProperty( const wxString& label,
                         const wxString& name,
                         const wxString& value )
{
    return new wxImageFileProperty( label, name, value );
}

wxPGProperty* NewMultiChoiceProperty( const wxString& label,
                           const wxString& name,
                           const wxArrayString& choices,
                           const wxArrayString& value )
{
    return new wxMultiChoiceProperty( label, name, choices, value );
}

wxPGProperty* NewDateProperty( const wxString& label,
                    const wxString& name,
                    const wxDateTime& value )
{
    return new wxDateProperty( label, name, value );
}
#if 0
wxPGProperty* NewFontDataProperty( const wxString& label,
                    const wxString& name,
                    const wxFontData& value )
{
    return new wxFontDataProperty( label, name, value );
}

wxPGProperty* NewSizeProperty( const wxString& label, const wxString& name,
                    const wxSize& value )
{
    return new wxSizeProperty( label, name, value );
}

wxPGProperty* NewPointProperty( const wxString& label, const wxString& name,
                 const wxPoint& value )
{
    return new wxPointProperty( label, name, value );
}

wxPGProperty* NewDirsProperty( const wxString& label, const wxString& name,
                               const wxArrayString& value )
{
    return new wxDirsProperty( label, name, value );
}

wxPGProperty* NewArrayDoubleProperty( const wxString& label,
                           const wxString& name,
                           const wxArrayDouble& value )
{
    return new wxArrayDoubleProperty( label, name, value );
}
#endif

void RegisterEditor( wxPGEditor* editor, const wxString& editorName )
{
    wxPropertyGrid::DoRegisterEditorClass(editor, editorName);
}

#include <datetime.h>

bool PyObject_to_wxVariant( PyObject* input, wxVariant* v )
{
    PyDateTime_IMPORT;

    if ( input == Py_None )
    {
        v->MakeNull();
        return true;
    }
    else if ( PyBool_Check(input) )
    {
        *v = (bool) PyInt_AsLong(input);
        return true;
    }
    else if ( PyInt_Check(input) )
    {
        *v = (long) PyInt_AsLong(input);
        return true;
    }
    else if ( PyString_Check(input) || PyUnicode_Check(input) )
    {
        wxString* sptr = wxString_in_helper(input);
        if (sptr == NULL) return false;
        *v = *sptr;
        delete sptr;
        return true;
    }
    else if ( PyFloat_Check(input) )
    {
        *v = PyFloat_AsDouble(input);
        return true;
    }
    else if ( PyDate_Check(input) )
    {
        // Both date and datetime have these
        int year = PyDateTime_GET_YEAR(input);
        // Month is enumeration, make sure to match its first entry
        int month = PyDateTime_GET_MONTH(input) - 1 + (int) wxDateTime::Jan;
        int day = PyDateTime_GET_DAY(input);

        // Only datetime.datetime has the following
        int hour = 0;
        int minute = 0;
        int second = 0;
        int microsecond = 0;
        if ( PyDateTime_Check(input) )
        {
            hour = PyDateTime_DATE_GET_HOUR(input);
            minute = PyDateTime_DATE_GET_MINUTE(input);
            second = PyDateTime_DATE_GET_SECOND(input);
            microsecond = PyDateTime_DATE_GET_MICROSECOND(input);
        }

        wxDateTime wx_dateTime(day, (wxDateTime::Month)month, year,
                               hour, minute, second,
                               microsecond/1000);  // wx uses milliseconds
        *v = wx_dateTime;
        return true;
    }
    else if ( PyTuple_CheckExact(input) || PyList_CheckExact(input) )
    {
        int len = PySequence_Length(input);

        if ( len )
        {
            int i;
            PyObject* item = PySequence_GetItem(input, 0);
            bool failed = false;
            if ( PyString_CheckExact(item) || PyUnicode_CheckExact(item) )
            {
                wxArrayString arr;
                for (i=0; i<len; i++)
                {
                    item = PySequence_GetItem(input, i);
                    wxString* s = wxString_in_helper(item);
                    if ( PyErr_Occurred() )
                    {
                        delete s;
                        failed = true;
                        break;
                    }
                    arr.Add(*s);
                    delete s;
                    Py_DECREF(item);
                }

                if ( !failed )
                {
                    *v = arr;
                    return true;
                }
            }
            else if ( PyInt_CheckExact(item) || PyLong_CheckExact(item) )
            {
                wxArrayInt arr;
                for (i=0; i<len; i++)
                {
                    item = PySequence_GetItem(input, i);
                    long val;
                    if ( PyInt_CheckExact(item) )
                    {
                        val = PyInt_AS_LONG(item);
                    }
                    else if ( PyLong_CheckExact(item) )
                    {
                        val = PyLong_AsLong(item);
                    }
                    else
                    {
                        failed = true;
                        break;
                    }
                    arr.Add(val);
                    Py_DECREF(item);
                }

                if ( !failed )
                {
                    *v = WXVARIANT(arr);
                    return true;
                }
            }
        }
        else
        {
            *v = wxArrayString();
            return true;
        }
    }
    else if ( wxPySwigInstance_Check(input) )
    {
        // First try if it is a wxColour
        wxColour* col_ptr;
        if ( wxPyConvertSwigPtr(input, (void **)&col_ptr, wxS("wxColour")))
        {
            *v << *col_ptr;
            return true;
        }

        // Then wxPoint
        wxPoint* pt_ptr;
        if ( wxPyConvertSwigPtr(input, (void **)&pt_ptr, wxS("wxPoint")))
        {
            *v << *pt_ptr;
            return true;
        }

        // Then wxSize
        wxSize* sz_ptr;
        if ( wxPyConvertSwigPtr(input, (void **)&sz_ptr, wxS("wxSize")))
        {
            *v << *sz_ptr;
            return true;
        }

        // Then wxFont
        wxFont* font_ptr;
        if ( wxPyConvertSwigPtr(input, (void **)&font_ptr, wxS("wxFont")))
        {
            *v << *font_ptr;
            return true;
        }

        // Then wxColourPropertyValue
        wxColourPropertyValue* cpv_ptr;
        if ( wxPyConvertSwigPtr(input, (void **)&cpv_ptr,
                                wxS("wxColourPropertyValue")))
        {
            *v << *cpv_ptr;
            return true;
        }
    }

    //Py_TrackObject(input);
    // Last ditch - let's convert it to a wxVariant containing an arbitrary
    // PyObject
    wxVariant tempVariant = PyObjectToVariant(input);
    wxVariantData* vd = tempVariant.GetData();
    vd->IncRef();
    v->SetData(vd);

    return true;
}

PyObject* wxVariant_to_PyObject( const wxVariant* v )
{
    if ( !v || v->IsNull() )
        Py_RETURN_NONE;

    wxString variantType = v->GetType();
    //printf("%s\n", variantType.c_str());
    //OutputDebugString(variantType.c_str());
    if ( variantType == wxS("long") )
    {
        return PyInt_FromLong(v->GetLong());
    }
    else if ( variantType == wxS("string") )
    {
        wxString _wxvar_str = v->GetString();
#if wxUSE_UNICODE
        return PyUnicode_FromWideChar(_wxvar_str.c_str(), _wxvar_str.Len());
#else
        return PyString_FromStringAndSize(_wxvar_str.c_str(), _wxvar_str.Len());
#endif
    }
    else if ( variantType == wxS("double") )
    {
        return PyFloat_FromDouble(v->GetDouble());
    }
    else if ( variantType == wxS("bool") )
    {
        return PyBool_FromLong((long)v->GetBool());
    }
    else if ( variantType == wxS("arrstring") )
    {
        wxArrayString arr = v->GetArrayString();
        PyObject* list = PyList_New(arr.GetCount());
        unsigned int i;

        for ( i=0; i<arr.GetCount(); i++ )
        {
            const wxString& str = arr.Item(i);
    #if wxUSE_UNICODE
            PyObject* item = PyUnicode_FromWideChar
            (str.c_str(), str.Len());
    #else
            PyObject* item = PyString_FromStringAndSize(str.c_str(), str.Len());
    #endif

            // PyList_SetItem steals reference, so absence of Py_DECREF is ok
            PyList_SetItem(list, i, item);
        }

        return list;
    }
    else if ( variantType == wxS("wxArrayInt") )
    {
        const wxArrayInt& arr = wxArrayIntRefFromVariant(*v);
        PyObject* list = PyList_New(arr.GetCount());
        unsigned int i;

        for ( i=0; i<arr.GetCount(); i++ )
        {
            PyObject* item = PyInt_FromLong((long)arr.Item(i));
            // PyList_SetItem steals reference, so absence of Py_DECREF is ok
            PyList_SetItem(list, i, item);
        }

        return list;
    }
    else if ( variantType == wxS("datetime") )
    {
        wxDateTime dt = v->GetDateTime();
        int year = dt.GetYear();
        // Month is enumeration, make sure to match its first entry
        int month = dt.GetMonth() + 1 - (int) wxDateTime::Jan;
        int day = dt.GetDay();
        int hour = dt.GetHour();
        int minute = dt.GetMinute();
        int second = dt.GetSecond();
        int millisecond = dt.GetMillisecond();
        return PyDateTime_FromDateAndTime(year, month, day,
                                          hour, minute, second,
                                          millisecond*1000);
    }
    else if ( variantType == wxS("wxColour") )
    {
        wxColour col;
        col << *v;
        return SWIG_NewPointerObj(SWIG_as_voidptr(new wxColour(col)),
                                  SWIGTYPE_p_wxColour,
                                  SWIG_POINTER_OWN | 0 );
    }
    else if ( variantType == wxS("wxPoint") )
    {
        const wxPoint& point = wxPointRefFromVariant(*v);
        return SWIG_NewPointerObj(SWIG_as_voidptr(new wxPoint(point)),
                                  SWIGTYPE_p_wxPoint,
                                  SWIG_POINTER_OWN | 0 );
    }
    else if ( variantType == wxS("wxSize") )
    {
        const wxSize& size = wxSizeRefFromVariant(*v);
        return SWIG_NewPointerObj(SWIG_as_voidptr(new wxSize(size)),
                                  SWIGTYPE_p_wxSize,
                                  SWIG_POINTER_OWN | 0 );
    }
    else if ( variantType == wxS("PyObject*") )
    {
        // PyObjectPtrFromVariant already increments the reference count
        PyObject* o = PyObjectPtrFromVariant(*v);
        //Py_TrackObject(o);
        if ( !o )
            Py_RETURN_NONE;
        return o;
    }
    else if ( variantType == wxS("wxFont") )
    {
        wxFont font;
        font << *v;
        return SWIG_NewPointerObj(SWIG_as_voidptr(new wxFont(font)),
                                  SWIGTYPE_p_wxFont,
                                  SWIG_POINTER_OWN | 0 );
    }
    else if ( variantType == wxS("wxColourPropertyValue") )
    {
        wxColourPropertyValue cpv;
        cpv << *v;
        return
            SWIG_NewPointerObj(SWIG_as_voidptr(new wxColourPropertyValue(cpv)),
                               SWIGTYPE_p_wxColourPropertyValue,
                               SWIG_POINTER_OWN | 0 );
    }
    else
    {
        // TODO: Allow converting arbitrary wxObject-based variant datas,
        // including old-school wxObjectPtr (see wxPG 1.4), and new-style
        // variant data classes generated using DECLARE_VARIANT_OBJECT().
    }

    return NULL;
}

//
// wxPGVariantAndBool
//
// Helper class that wraps wxVariant and bool. Need to use this class
// instead of "writeback" arguments in some virtual methods of custom
// property classes (for some reason I couldn't get SWIG INOUT working.
// Actually, even trivial int* OUTPUT failed).
//
class wxPGVariantAndBool
{
public:

    wxPGVariantAndBool()
    {
        m_valueValid = false;
        m_result = false;
    }

    wxPGVariantAndBool( bool result, const wxVariant& variant )
    {
        m_valueValid = true;
        m_result = result;
        m_value = variant;
    }

    wxPGVariantAndBool( const wxVariant& variant )
    {
        m_valueValid = true;
        m_result = true;
        m_value = variant;
    }

    wxPGVariantAndBool( bool result )
    {
        Init(result);
    }

    ~wxPGVariantAndBool() { }

    void Init( bool result = false )
    {
        m_valueValid = false;
        m_result = result;
    }

    const wxVariant& GetValue() const
    {
        wxASSERT(m_valueValid);
        return m_value;
    }

public:
    wxVariant m_value;
    bool      m_valueValid;
    bool      m_result;
};

PyObject* wxPGVariantAndBool_to_PyObject( const wxPGVariantAndBool& vab )
{
    PyObject* tuple = PyTuple_New(2);

    PyObject* value;
    if ( vab.m_valueValid )
    {
        value = wxVariant_to_PyObject(&vab.m_value);
    }
    else
    {
        Py_INCREF(Py_None);
        value = Py_None;
    }

    PyTuple_SetItem(tuple, 0, PyInt_FromLong((long)vab.m_result));
    PyTuple_SetItem(tuple, 1, value);

    return tuple;
}

bool PyObject_to_wxPGVariantAndBool( PyObject* input,
                                     wxPGVariantAndBool& vab )
{
    PyObject* resObj = NULL;
    PyObject* valueObj = NULL;

    if ( PySequence_Check(input) && PySequence_Length(input) == 2 )
    {
        resObj = PySequence_GetItem(input, 0);
        if (PyErr_Occurred()) return false;
        valueObj = PySequence_GetItem(input, 1);
        if (PyErr_Occurred()) return false;
    }
    else
    {
        resObj = input;
    }

    // Also checks for bool, which is subclass of int
    if ( PyInt_Check(resObj) )
    {
        vab.Init((bool) PyInt_AsLong(resObj));
    }
    else if ( PyLong_Check(resObj) )
    {
        vab.Init((bool) PyLong_AsLong(resObj));
    }
    else
    {
        return false;
    }

    if ( valueObj )
    {
        // If valueObj is valid, then we can assume resObj was acquired from
        // sequence and must be decref'ed.
        Py_DECREF(resObj);

        if ( PyObject_to_wxVariant(valueObj, &vab.m_value) )
            vab.m_valueValid = true;
        else
            return false;

        Py_DECREF(valueObj);
    }

    return true;
}

bool PyObject_to_wxPGPropArgCls( PyObject* input, wxPGPropArgCls** v )
{
    if ( PyString_Check(input) || PyUnicode_Check(input) )
    {
        wxString* sptr = wxString_in_helper(input);
        if (sptr == NULL) return false;
        *v = new wxPGPropArgCls(sptr, true);
    }
    else if ( input == Py_None )
    {
        *v = new wxPGPropArgCls(reinterpret_cast< wxPGProperty * >(NULL));
    }
    else
    {
        void* valp;
        int res = SWIG_ConvertPtr(input, &valp,
                                  SWIGTYPE_p_wxPGProperty,
                                  0  | 0);
        if ( !SWIG_IsOK(res) ) return false;
        *v = new wxPGPropArgCls(reinterpret_cast< wxPGProperty * >(valp));
    }

    return true;
}

PyObject* wxPGPropArgCls_to_PyObject( const wxPGPropArgCls& v )
{
    if ( v.HasName() )
    {
        const wxString& _wxvar_str = v.GetName();
#if wxUSE_UNICODE
        return PyUnicode_FromWideChar(_wxvar_str.c_str(), _wxvar_str.Len());
#else
        return PyString_FromStringAndSize(_wxvar_str.c_str(), _wxvar_str.Len());
#endif
    }

    wxPGProperty* p = v.GetPtr();

    if ( !p )
        Py_RETURN_NONE;

    return SWIG_NewPointerObj(SWIG_as_voidptr(p),
                              SWIGTYPE_p_wxPGProperty,
                              0 |  0 );
}

PyObject* wxPGAttributeStorage_to_PyObject( const wxPGAttributeStorage* attrs )
{
    wxPGAttributeStorage::const_iterator it = attrs->StartIteration();
    wxVariant v;

    PyObject* dict = PyDict_New();
    if ( !dict ) return dict;

    while ( attrs->GetNext( it, v ) )
    {
        const wxString& name = v.GetName();
#if wxUSE_UNICODE
        PyObject* pyStr = PyUnicode_FromWideChar(name.c_str(), name.Len());
#else
        PyObject* pyStr = PyString_FromStringAndSize(name.c_str(), name.Len());
#endif
        PyObject* pyVal = wxVariant_to_PyObject(&v);
        int res = PyDict_SetItem( dict, pyStr, pyVal );
    }

    return dict;
}

PyObject* wxPoint_to_PyObject( const wxPoint* p )
{
    if ( p->x == -1 || p->y == -1 )
        Py_RETURN_NONE;

    PyObject* tuple = PyTuple_New(2);
    // PyTuple_SetItem steals reference, so absence of Py_DECREF is ok
    PyTuple_SetItem(tuple, 0, PyInt_FromLong(p->x));
    PyTuple_SetItem(tuple, 1, PyInt_FromLong(p->y));
    return tuple;
}

PyObject* wxSize_to_PyObject( const wxSize* p )
{
    if ( p->x == -1 || p->y == -1 )
        Py_RETURN_NONE;

    PyObject* tuple = PyTuple_New(2);
    // PyTuple_SetItem steals reference, so absence of Py_DECREF is ok
    PyTuple_SetItem(tuple, 0, PyInt_FromLong(p->x));
    PyTuple_SetItem(tuple, 1, PyInt_FromLong(p->y));
    return tuple;
}

PyObject* wxPGWindowList_to_PyObject( const wxPGWindowList* p )
{
    PyObject* o1 = NULL;
    PyObject* o2 = NULL;

    if ( p->m_primary )
        o1 = wxPyMake_wxObject(p->m_primary, false);

    if ( p->m_secondary )
        o2 = wxPyMake_wxObject(p->m_secondary, false);

    if ( o1 )
    {
        if ( o2 )
        {
            PyObject* tuple = PyTuple_New(2);
            // PyTuple_SetItem steals reference, so absence of Py_DECREF is ok
            PyTuple_SetItem(tuple, 0, o1);
            PyTuple_SetItem(tuple, 1, o2);
            return tuple;
        }
        else
        {
            return o1;
        }
    }

    Py_RETURN_NONE;
}

bool PyObject_to_wxPGWindowList( PyObject* o, wxPGWindowList* p )
{
    if ( PySequence_Check(o) )
    {
        if ( PySequence_Size(o) != 2 )
            return false;

        bool res;

        PyObject* m1 = PySequence_GetItem(o, 0);
        res = wxPyConvertSwigPtr(m1, (void **)&p->m_primary, wxS("wxWindow"));
        Py_DECREF(m1);
        if ( !res )
            return false;

        PyObject* m2 = PySequence_GetItem(o, 1);
        res = wxPyConvertSwigPtr(m2, (void **)&p->m_secondary,
                                 wxS("wxWindow"));
        Py_DECREF(m2);
        if ( !res )
            return false;

        return true;
    }

    p->m_secondary = NULL;

    if ( !wxPyConvertSwigPtr(o, (void **)&p->m_primary, wxS("wxWindow")) )
        return false;

    return true;
}



// We need these proxies or SWIG will fail (it has somewhat incomplete
// C++ syntax support, it seems).
static wxString& wxString_wxPG_LABEL = *((wxString*)NULL);
#define wxColour_BLACK          *wxBLACK
#define wxBitmap_NULL           wxNullBitmap


    PyObject* wxArrayPGPropertyToPyObject(const wxArrayPGProperty* arr)
    {
        PyObject* pyArr = PyList_New(arr->size());
        for (  int i=0; i< ( int) arr->size(); i++ )
        {
            PyObject* pyItem = SWIG_NewPointerObj((void*)(*arr)[i],
                                                  SWIGTYPE_p_wxPGProperty,
                                                  0);
            if ( !pyItem )
                return NULL;
            PyList_SetItem(pyArr, i, pyItem);
        }
        return pyArr;
    }
    bool PyObjectTowxArrayPGProperty(PyObject* pyArr, wxArrayPGProperty* arr)
    {
        if (! PySequence_Check(pyArr)) {
            PyErr_SetString(PyExc_TypeError, "Sequence expected.");
            return false;
        }
        int i, len = PySequence_Length(pyArr);
        for ( i=0; i<len; i++ )
        {
            PyObject* item = PySequence_GetItem(pyArr, i);
            int res1;
            void* voidPtr;
            res1 = SWIG_ConvertPtr(item, &voidPtr,
                                   SWIGTYPE_p_wxPGProperty, 0 |  0 );
            if ( !SWIG_IsOK(res1) ) return false;
            wxPGProperty* itemPtr = reinterpret_cast<wxPGProperty*>(voidPtr);
            if ( PyErr_Occurred() ) return false;
            arr->push_back(itemPtr);
            Py_DECREF(item);
        }
        return true;
    }
    

  #define SWIG_From_long   PyInt_FromLong 


SWIGINTERNINLINE PyObject *
SWIG_From_int  (int value)
{    
  return SWIG_From_long  (value);
}


#include <limits.h>
#ifndef LLONG_MIN
# define LLONG_MIN	LONG_LONG_MIN
#endif
#ifndef LLONG_MAX
# define LLONG_MAX	LONG_LONG_MAX
#endif
#ifndef ULLONG_MAX
# define ULLONG_MAX	ULONG_LONG_MAX
#endif


SWIGINTERN int
SWIG_AsVal_long (PyObject* obj, long* val)
{
    if (PyNumber_Check(obj)) {
        if (val) *val = PyInt_AsLong(obj);
        return SWIG_OK;
    }
    return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_int (PyObject * obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< int >(v);
    }
  }  
  return res;
}


SWIGINTERN int 
SWIG_AsVal_unsigned_SS_long (PyObject* obj, unsigned long* val)
{
    long v = 0;
    int res = SWIG_AsVal_long(obj, &v);
    if (SWIG_IsOK(res)) {
        if ( v < 0) {
            return SWIG_ValueError;
        }
        else if (val)
            *val = (unsigned long)v;
    }
    return res;
}


SWIGINTERNINLINE int
SWIG_AsVal_size_t (PyObject * obj, size_t *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, val ? &v : 0);
  if (SWIG_IsOK(res) && val) *val = static_cast< size_t >(v);
  return res;
}


SWIGINTERN int
SWIG_AsVal_bool (PyObject *obj, bool *val)
{
  if (obj == Py_True) {
    if (val) *val = true;
    return SWIG_OK;
  } else if (obj == Py_False) {
    if (val) *val = false;
    return SWIG_OK;
  } else {
    long v = 0;
    int res = SWIG_AddCast(SWIG_AsVal_long (obj, val ? &v : 0));
    if (SWIG_IsOK(res) && val) *val = v ? true : false;
    return res;
  }
}


SWIGINTERN int
SWIG_AsVal_double (PyObject *obj, double* val)
{
    if (PyNumber_Check(obj)) {
        if (val) *val = PyFloat_AsDouble(obj);
        return SWIG_OK;
    }
    return SWIG_TypeError;
}


  #define SWIG_From_double   PyFloat_FromDouble 

SWIGINTERN bool wxPGProperty_SetPyChoices__SWIG_0(wxPGProperty *self,wxPGChoices const &chs){
            return self->SetChoices(chs);
        }
SWIGINTERN bool wxPGProperty_SetPyChoices__SWIG_1(wxPGProperty *self,wxArrayString const &labels,wxArrayInt const &values=wxArrayInt()){
            wxPGChoices chs(labels, values);
            return self->SetChoices(chs);
        }
SWIGINTERN wxPGVariantAndBool wxPGProperty_PyBase_StringToValue(wxPGProperty *self,wxString const &text,int argFlags=0){
            wxVariant variant = self->GetValuePlain();
            bool res = self->StringToValue(variant, text, argFlags);
            return wxPGVariantAndBool(res, variant);
        }
SWIGINTERN wxPGVariantAndBool wxPGProperty_PyBase_IntToValue(wxPGProperty const *self,wxVariant &value,int number,int argFlags=0){
            wxVariant variant = self->GetValuePlain();
            bool res = self->IntToValue(variant, number, argFlags);
            return wxPGVariantAndBool(res, variant);
        }
SWIGINTERN PyObject *wxPGProperty_GetPyClientData(wxPGProperty *self){
            wxPyClientData* data = (wxPyClientData*)self->GetClientObject();
            if (data) {
                Py_INCREF(data->m_obj);
                return data->m_obj;
            } else {
                Py_INCREF(Py_None);
                return Py_None;
            }
        }
SWIGINTERN void wxPGProperty_SetPyClientData(wxPGProperty *self,PyObject *clientData){
            wxPyClientData* data = new wxPyClientData(clientData);
            self->SetClientObject(data);
        }

SWIGINTERN swig_type_info*
SWIG_pchar_descriptor()
{
  static int init = 0;
  static swig_type_info* info = 0;
  if (!init) {
    info = SWIG_TypeQuery("_p_char");
    init = 1;
  }
  return info;
}


SWIGINTERNINLINE PyObject *
SWIG_FromCharPtrAndSize(const char* carray, size_t size)
{
  if (carray) {
    if (size > INT_MAX) {
      swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
      return pchar_descriptor ? 
	SWIG_NewPointerObj(const_cast< char * >(carray), pchar_descriptor, 0) : SWIG_Py_Void();
    } else {
      return PyString_FromStringAndSize(carray, static_cast< int >(size));
    }
  } else {
    return SWIG_Py_Void();
  }
}


SWIGINTERNINLINE PyObject *
SWIG_From_char  (char c) 
{ 
  return SWIG_FromCharPtrAndSize(&c,1);
}


SWIGINTERN int
SWIG_AsCharPtrAndSize(PyObject *obj, char** cptr, size_t* psize, int *alloc)
{
  if (PyString_Check(obj)) {
    char *cstr; Py_ssize_t len;
    PyString_AsStringAndSize(obj, &cstr, &len);
    if (cptr)  {
      if (alloc) {
	/* 
	   In python the user should not be able to modify the inner
	   string representation. To warranty that, if you define
	   SWIG_PYTHON_SAFE_CSTRINGS, a new/copy of the python string
	   buffer is always returned.

	   The default behavior is just to return the pointer value,
	   so, be careful.
	*/ 
#if defined(SWIG_PYTHON_SAFE_CSTRINGS)
	if (*alloc != SWIG_OLDOBJ) 
#else
	if (*alloc == SWIG_NEWOBJ) 
#endif
	  {
	    *cptr = reinterpret_cast< char* >(memcpy((new char[len + 1]), cstr, sizeof(char)*(len + 1)));
	    *alloc = SWIG_NEWOBJ;
	  }
	else {
	  *cptr = cstr;
	  *alloc = SWIG_OLDOBJ;
	}
      } else {
	*cptr = PyString_AsString(obj);
      }
    }
    if (psize) *psize = len + 1;
    return SWIG_OK;
  } else {
    swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
    if (pchar_descriptor) {
      void* vptr = 0;
      if (SWIG_ConvertPtr(obj, &vptr, pchar_descriptor, 0) == SWIG_OK) {
	if (cptr) *cptr = (char *) vptr;
	if (psize) *psize = vptr ? (strlen((char *)vptr) + 1) : 0;
	if (alloc) *alloc = SWIG_OLDOBJ;
	return SWIG_OK;
      }
    }
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsCharArray(PyObject * obj, char *val, size_t size)
{ 
  char* cptr = 0; size_t csize = 0; int alloc = SWIG_OLDOBJ;
  int res = SWIG_AsCharPtrAndSize(obj, &cptr, &csize, &alloc);
  if (SWIG_IsOK(res)) {
    if ((csize == size + 1) && cptr && !(cptr[csize-1])) --csize;
    if (csize <= size) {
      if (val) {
	if (csize) memcpy(val, cptr, csize*sizeof(char));
	if (csize < size) memset(val + csize, 0, (size - csize)*sizeof(char));
      }
      if (alloc == SWIG_NEWOBJ) {
	delete[] cptr;
	res = SWIG_DelNewMask(res);
      }      
      return res;
    }
    if (alloc == SWIG_NEWOBJ) delete[] cptr;
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_char (PyObject * obj, char *val)
{    
  int res = SWIG_AsCharArray(obj, val, 1);
  if (!SWIG_IsOK(res)) {
    long v;
    res = SWIG_AddCast(SWIG_AsVal_long (obj, &v));
    if (SWIG_IsOK(res)) {
      if ((CHAR_MIN <= v) && (v <= CHAR_MAX)) {
	if (val) *val = static_cast< char >(v);
      } else {
	res = SWIG_OverflowError;
      }
    }
  }
  return res;
}

SWIGINTERN void wxPGMultiButton_AddBitmapButton(wxPGMultiButton *self,wxBitmap const &bitmap,int id=-2){
        return self->Add(bitmap, id);
    }

SWIGINTERNINLINE PyObject* 
SWIG_From_unsigned_SS_long  (unsigned long value)
{
  return (value > LONG_MAX) ?
    PyLong_FromUnsignedLong(value) : PyInt_FromLong(static_cast< long >(value)); 
}


SWIGINTERNINLINE PyObject *
SWIG_From_size_t  (size_t value)
{    
  return SWIG_From_unsigned_SS_long  (static_cast< unsigned long >(value));
}



// THIS FILE HAS BEEN AUTO-GENERATED BY CREATE_VCW

#ifndef SWIG_IsOK
    #define SWIG_IsOK(r)               (r >= 0)
#endif

#ifndef Py_RETURN_NONE
    #define Py_RETURN_NONE return Py_INCREF(Py_None), Py_None
#endif

void _deleteOwningObject(void* obj)
{
    // Crashes sometimes (on app exit, it seems), so we need to disable it
    /*if ( Py_IsInitialized() )
    {
        wxPyBlock_t blocked = wxPyBeginBlockThreads();
        Py_XDECREF((PyObject*)obj);
        wxPyEndBlockThreads(blocked);
    }*/
}
    

static bool gs_funcNamesInitialized = false;
static PyObject* gs___class___Name = NULL;
static PyObject* gs___dict___Name = NULL;
static PyObject* gs__super_call_Name = NULL;
static PyObject* gs_CanContainCustomImage_Name = NULL;
static PyObject* gs_ChildChanged_Name = NULL;
static PyObject* gs_ColourToString_Name = NULL;
static PyObject* gs_ConvertArrayToString_Name = NULL;
static PyObject* gs_CreateControls_Name = NULL;
static PyObject* gs_CreateEditorDialog_Name = NULL;
static PyObject* gs_DeleteItem_Name = NULL;
static PyObject* gs_DoGetAttribute_Name = NULL;
static PyObject* gs_DoGetValidator_Name = NULL;
static PyObject* gs_DoGetValue_Name = NULL;
static PyObject* gs_DoSetAttribute_Name = NULL;
static PyObject* gs_DoShowDialog_Name = NULL;
static PyObject* gs_DoTranslateVal_Name = NULL;
static PyObject* gs_DrawValue_Name = NULL;
static PyObject* gs_GenerateValueAsString_Name = NULL;
static PyObject* gs_GetCellRenderer_Name = NULL;
static PyObject* gs_GetChoiceSelection_Name = NULL;
static PyObject* gs_GetColour_Name = NULL;
static PyObject* gs_GetCustomColourIndex_Name = NULL;
static PyObject* gs_GetEditor_Name = NULL;
static PyObject* gs_GetEditorDialog_Name = NULL;
static PyObject* gs_GetIndexForValue_Name = NULL;
static PyObject* gs_GetName_Name = NULL;
static PyObject* gs_GetValueAsString_Name = NULL;
static PyObject* gs_GetValueFromControl_Name = NULL;
static PyObject* gs_InsertItem_Name = NULL;
static PyObject* gs_IntToValue_Name = NULL;
static PyObject* gs_OnButtonClick_Name = NULL;
static PyObject* gs_OnCustomPaint_Name = NULL;
static PyObject* gs_OnCustomStringEdit_Name = NULL;
static PyObject* gs_OnEvent_Name = NULL;
static PyObject* gs_OnFocus_Name = NULL;
static PyObject* gs_OnMeasureImage_Name = NULL;
static PyObject* gs_OnSetValue_Name = NULL;
static PyObject* gs_OnValidationFailure_Name = NULL;
static PyObject* gs_RefreshChildren_Name = NULL;
static PyObject* gs_SetControlAppearance_Name = NULL;
static PyObject* gs_SetControlIntValue_Name = NULL;
static PyObject* gs_SetControlStringValue_Name = NULL;
static PyObject* gs_SetValueToUnspecified_Name = NULL;
static PyObject* gs_StringToValue_Name = NULL;
static PyObject* gs_UpdateControl_Name = NULL;
static PyObject* gs_ValidateValue_Name = NULL;
static PyObject* gs_ValueToString_Name = NULL;

static void _InitFuncNames()
{
    gs___dict___Name = PyString_FromString("__dict__");
    gs___class___Name = PyString_FromString("__class__");
    gs__super_call_Name = PyString_FromString("_super_call");
    gs_CanContainCustomImage_Name = PyString_FromString("CanContainCustomImage_t_");
    gs_ChildChanged_Name = PyString_FromString("ChildChanged_t_");
    gs_ColourToString_Name = PyString_FromString("ColourToString_t_");
    gs_ConvertArrayToString_Name = PyString_FromString("ConvertArrayToString_t_");
    gs_CreateControls_Name = PyString_FromString("CreateControls_t_");
    gs_CreateEditorDialog_Name = PyString_FromString("CreateEditorDialog_t_");
    gs_DeleteItem_Name = PyString_FromString("DeleteItem_t_");
    gs_DoGetAttribute_Name = PyString_FromString("DoGetAttribute_t_");
    gs_DoGetValidator_Name = PyString_FromString("DoGetValidator_t_");
    gs_DoGetValue_Name = PyString_FromString("DoGetValue_t_");
    gs_DoSetAttribute_Name = PyString_FromString("DoSetAttribute_t_");
    gs_DoShowDialog_Name = PyString_FromString("DoShowDialog_t_");
    gs_DoTranslateVal_Name = PyString_FromString("DoTranslateVal_t_");
    gs_DrawValue_Name = PyString_FromString("DrawValue_t_");
    gs_GenerateValueAsString_Name = PyString_FromString("GenerateValueAsString_t_");
    gs_GetCellRenderer_Name = PyString_FromString("GetCellRenderer_t_");
    gs_GetChoiceSelection_Name = PyString_FromString("GetChoiceSelection_t_");
    gs_GetColour_Name = PyString_FromString("GetColour_t_");
    gs_GetCustomColourIndex_Name = PyString_FromString("GetCustomColourIndex_t_");
    gs_GetEditor_Name = PyString_FromString("GetEditor_t_");
    gs_GetEditorDialog_Name = PyString_FromString("GetEditorDialog_t_");
    gs_GetIndexForValue_Name = PyString_FromString("GetIndexForValue_t_");
    gs_GetName_Name = PyString_FromString("GetName_t_");
    gs_GetValueAsString_Name = PyString_FromString("GetValueAsString_t_");
    gs_GetValueFromControl_Name = PyString_FromString("GetValueFromControl_t_");
    gs_InsertItem_Name = PyString_FromString("InsertItem_t_");
    gs_IntToValue_Name = PyString_FromString("IntToValue_t_");
    gs_OnButtonClick_Name = PyString_FromString("OnButtonClick_t_");
    gs_OnCustomPaint_Name = PyString_FromString("OnCustomPaint_t_");
    gs_OnCustomStringEdit_Name = PyString_FromString("OnCustomStringEdit_t_");
    gs_OnEvent_Name = PyString_FromString("OnEvent_t_");
    gs_OnFocus_Name = PyString_FromString("OnFocus_t_");
    gs_OnMeasureImage_Name = PyString_FromString("OnMeasureImage_t_");
    gs_OnSetValue_Name = PyString_FromString("OnSetValue_t_");
    gs_OnValidationFailure_Name = PyString_FromString("OnValidationFailure_t_");
    gs_RefreshChildren_Name = PyString_FromString("RefreshChildren_t_");
    gs_SetControlAppearance_Name = PyString_FromString("SetControlAppearance_t_");
    gs_SetControlIntValue_Name = PyString_FromString("SetControlIntValue_t_");
    gs_SetControlStringValue_Name = PyString_FromString("SetControlStringValue_t_");
    gs_SetValueToUnspecified_Name = PyString_FromString("SetValueToUnspecified_t_");
    gs_StringToValue_Name = PyString_FromString("StringToValue_t_");
    gs_UpdateControl_Name = PyString_FromString("UpdateControl_t_");
    gs_ValidateValue_Name = PyString_FromString("ValidateValue_t_");
    gs_ValueToString_Name = PyString_FromString("ValueToString_t_");
    gs_funcNamesInitialized = true;
}


void _CommonCallback28(wxPyBlock_t blocked, PyObject* self, PyObject* funcobj, wxDC& dc, const wxRect& rect, wxPGProperty* property, const wxString& text)
{
    PyObject* res;
    PyObject* py_dc;
    py_dc = SWIG_NewPointerObj((void*)&dc, SWIGTYPE_p_wxDC, 0);
    PyObject* py_rect;
    py_rect = SWIG_NewPointerObj((void*)&rect, SWIGTYPE_p_wxRect, 0);
    PyObject* py_property;
    py_property = SWIG_NewPointerObj((void*)property, SWIGTYPE_p_wxPGProperty, 0);
    PyObject* py_text;
    #if wxUSE_UNICODE
        py_text = PyUnicode_FromWideChar((&text)->c_str(), (&text)->Len());
    #else
        py_text = PyString_FromStringAndSize((&text)->c_str(), (&text)->Len());
    #endif

    res = PyObject_CallFunctionObjArgs(funcobj, self, py_dc, py_rect, py_property, py_text, NULL);
    Py_DECREF(funcobj);
    Py_DECREF(py_text);
    Py_DECREF(py_property);
    Py_DECREF(py_rect);
    Py_DECREF(py_dc);
    if (PyErr_Occurred()) SWIG_fail;
    {
    Py_DECREF(res);
    }
  fail:
    wxPyEndBlockThreads(blocked);
}

wxString _CommonCallback36(wxPyBlock_t blocked, PyObject* self, PyObject* funcobj, const wxColour& col, int index)
{
    PyObject* res;
    PyObject* py_col;
    py_col = SWIG_NewPointerObj((void*)&col, SWIGTYPE_p_wxColour, 0);
    PyObject* py_index;
    py_index = PyInt_FromLong((long)index);

    res = PyObject_CallFunctionObjArgs(funcobj, self, py_col, py_index, NULL);
    Py_DECREF(funcobj);
    Py_DECREF(py_index);
    Py_DECREF(py_col);
    if (PyErr_Occurred()) SWIG_fail;
    {
    wxString retval;
    wxString* sptr = wxString_in_helper(res);
        if (sptr == NULL) SWIG_fail;
        retval = *sptr;
        delete sptr;
    Py_DECREF(res);
    wxPyEndBlockThreads(blocked);
    return retval;
    }
  fail:
    if ( PyErr_Occurred() ) PyErr_Print();
    wxPyEndBlockThreads(blocked);
    return wxEmptyString;
}

wxSize _CommonCallback11(wxPyBlock_t blocked, PyObject* self, PyObject* funcobj, int item)
{
    PyObject* res;
    PyObject* py_item;
    py_item = PyInt_FromLong((long)item);

    res = PyObject_CallFunctionObjArgs(funcobj, self, py_item, NULL);
    Py_DECREF(funcobj);
    Py_DECREF(py_item);
    if (PyErr_Occurred()) SWIG_fail;
    {
    wxSize retval;
    wxSize temp;    wxSize* _tptr_0 = &retval;
        if ( ! wxSize_helper(res, &_tptr_0)) SWIG_fail;
    Py_DECREF(res);
    wxPyEndBlockThreads(blocked);
    return retval;
    }
  fail:
    if ( PyErr_Occurred() ) PyErr_Print();
    wxPyEndBlockThreads(blocked);
    return wxSize();
}

void _CommonCallback34(wxPyBlock_t blocked, PyObject* self, PyObject* funcobj, wxPGProperty* property, wxWindow* ctrl, int value)
{
    PyObject* res;
    PyObject* py_property;
    py_property = SWIG_NewPointerObj((void*)property, SWIGTYPE_p_wxPGProperty, 0);
    PyObject* py_ctrl;
    py_ctrl = wxPyMake_wxObject(ctrl, (bool)0);

    PyObject* py_value;
    py_value = PyInt_FromLong((long)value);

    res = PyObject_CallFunctionObjArgs(funcobj, self, py_property, py_ctrl, py_value, NULL);
    Py_DECREF(funcobj);
    Py_DECREF(py_value);
    Py_DECREF(py_ctrl);
    Py_DECREF(py_property);
    if (PyErr_Occurred()) SWIG_fail;
    {
    Py_DECREF(res);
    }
  fail:
    wxPyEndBlockThreads(blocked);
}

int _CommonCallback6(wxPyBlock_t blocked, PyObject* self, PyObject* funcobj)
{
    PyObject* res;
    res = PyObject_CallFunctionObjArgs(funcobj, self, NULL);
    Py_DECREF(funcobj);
    if (PyErr_Occurred()) SWIG_fail;
    {
    int retval;
    retval = (int)PyInt_AS_LONG(res);
    Py_DECREF(res);
    wxPyEndBlockThreads(blocked);
    return retval;
    }
  fail:
    if ( PyErr_Occurred() ) PyErr_Print();
    wxPyEndBlockThreads(blocked);
    return 0;
}

wxValidator* _CommonCallback2(wxPyBlock_t blocked, PyObject* self, PyObject* funcobj)
{
    PyObject* res;
    res = PyObject_CallFunctionObjArgs(funcobj, self, NULL);
    Py_DECREF(funcobj);
    if (PyErr_Occurred()) SWIG_fail;
    {
    wxValidator* retval;
    if ( !SWIG_IsOK(SWIG_ConvertPtr(res, (void**)&(retval), SWIGTYPE_p_wxValidator, 0)) ) {
        PyErr_SetString(PyExc_TypeError,"expected wxValidator");
        SWIG_fail;
    }
    PyObject_SetAttrString(res, "thisown", Py_False);
    Py_DECREF(res);
    wxPyEndBlockThreads(blocked);
    return retval;
    }
  fail:
    if ( PyErr_Occurred() ) PyErr_Print();
    wxPyEndBlockThreads(blocked);
    return NULL;
}

wxPGVariantAndBool _CommonCallback15(wxPyBlock_t blocked, PyObject* self, PyObject* funcobj, int number, int argFlags)
{
    PyObject* res;
    PyObject* py_number;
    py_number = PyInt_FromLong((long)number);

    PyObject* py_argFlags;
    py_argFlags = PyInt_FromLong((long)argFlags);

    res = PyObject_CallFunctionObjArgs(funcobj, self, py_number, py_argFlags, NULL);
    Py_DECREF(funcobj);
    Py_DECREF(py_argFlags);
    Py_DECREF(py_number);
    if (PyErr_Occurred()) SWIG_fail;
    {
    wxPGVariantAndBool retval;
    if ( !PyObject_to_wxPGVariantAndBool(res, retval) ) {
            PyErr_SetString(PyExc_TypeError,
                "this Python type cannot be converted to wxPGVariantAndBool");
            SWIG_fail;
        }
    Py_DECREF(res);
    wxPyEndBlockThreads(blocked);
    return retval;
    }
  fail:
    if ( PyErr_Occurred() ) PyErr_Print();
    wxPyEndBlockThreads(blocked);
    return wxPGVariantAndBool();
}

wxColour _CommonCallback38(wxPyBlock_t blocked, PyObject* self, PyObject* funcobj, int index)
{
    PyObject* res;
    PyObject* py_index;
    py_index = PyInt_FromLong((long)index);

    res = PyObject_CallFunctionObjArgs(funcobj, self, py_index, NULL);
    Py_DECREF(funcobj);
    Py_DECREF(py_index);
    if (PyErr_Occurred()) SWIG_fail;
    {
    wxColour retval;
    wxColour temp;    wxColour* _tptr_0 = &retval;
        if ( ! wxColour_helper(res, &_tptr_0)) SWIG_fail;
    Py_DECREF(res);
    wxPyEndBlockThreads(blocked);
    return retval;
    }
  fail:
    if ( PyErr_Occurred() ) PyErr_Print();
    wxPyEndBlockThreads(blocked);
    return wxColour();
}

void _CommonCallback33(wxPyBlock_t blocked, PyObject* self, PyObject* funcobj, wxPropertyGrid* pg, wxPGProperty* property, wxWindow* ctrl, const wxPGCell& appearance, const wxPGCell& oldAppearance, bool unspecified)
{
    PyObject* res;
    PyObject* py_pg;
    py_pg = SWIG_NewPointerObj((void*)pg, SWIGTYPE_p_wxPropertyGrid, 0);
    PyObject* py_property;
    py_property = SWIG_NewPointerObj((void*)property, SWIGTYPE_p_wxPGProperty, 0);
    PyObject* py_ctrl;
    py_ctrl = wxPyMake_wxObject(ctrl, (bool)0);

    PyObject* py_appearance;
    py_appearance = SWIG_NewPointerObj((void*)&appearance, SWIGTYPE_p_wxPGCell, 0);
    PyObject* py_oldAppearance;
    py_oldAppearance = SWIG_NewPointerObj((void*)&oldAppearance, SWIGTYPE_p_wxPGCell, 0);
    PyObject* py_unspecified;
    py_unspecified = PyBool_FromLong((long)unspecified);

    res = PyObject_CallFunctionObjArgs(funcobj, self, py_pg, py_property, py_ctrl, py_appearance, py_oldAppearance, py_unspecified, NULL);
    Py_DECREF(funcobj);
    Py_DECREF(py_unspecified);
    Py_DECREF(py_oldAppearance);
    Py_DECREF(py_appearance);
    Py_DECREF(py_ctrl);
    Py_DECREF(py_property);
    Py_DECREF(py_pg);
    if (PyErr_Occurred()) SWIG_fail;
    {
    Py_DECREF(res);
    }
  fail:
    wxPyEndBlockThreads(blocked);
}

wxVariant _CommonCallback3(wxPyBlock_t blocked, PyObject* self, PyObject* funcobj)
{
    PyObject* res;
    res = PyObject_CallFunctionObjArgs(funcobj, self, NULL);
    Py_DECREF(funcobj);
    if (PyErr_Occurred()) SWIG_fail;
    {
    wxVariant retval;
    if ( !PyObject_to_wxVariant(res, &retval) ) {
            PyErr_SetString(PyExc_TypeError,
                            "this Python type cannot be converted to wxVariant");
            SWIG_fail;
        }
    Py_DECREF(res);
    wxPyEndBlockThreads(blocked);
    return retval;
    }
  fail:
    if ( PyErr_Occurred() ) PyErr_Print();
    wxPyEndBlockThreads(blocked);
    return wxVariant();
}

wxPGWindowList _CommonCallback26(wxPyBlock_t blocked, PyObject* self, PyObject* funcobj, wxPropertyGrid* propgrid, wxPGProperty* property, const wxPoint& pos, const wxSize& size)
{
    PyObject* res;
    PyObject* py_propgrid;
    py_propgrid = SWIG_NewPointerObj((void*)propgrid, SWIGTYPE_p_wxPropertyGrid, 0);
    PyObject* py_property;
    py_property = SWIG_NewPointerObj((void*)property, SWIGTYPE_p_wxPGProperty, 0);
    PyObject* py_pos;
    py_pos = wxPoint_to_PyObject((&pos));

    PyObject* py_size;
    py_size = wxSize_to_PyObject((&size));

    res = PyObject_CallFunctionObjArgs(funcobj, self, py_propgrid, py_property, py_pos, py_size, NULL);
    Py_DECREF(funcobj);
    Py_DECREF(py_size);
    Py_DECREF(py_pos);
    Py_DECREF(py_property);
    Py_DECREF(py_propgrid);
    if (PyErr_Occurred()) SWIG_fail;
    {
    wxPGWindowList retval;
    if ( !PyObject_to_wxPGWindowList(res, &retval) ) {
            PyErr_SetString(PyExc_TypeError,
                "expected wxWindow or tuple of two wxWindows");
            SWIG_fail;
        }
    Py_DECREF(res);
    wxPyEndBlockThreads(blocked);
    return retval;
    }
  fail:
    if ( PyErr_Occurred() ) PyErr_Print();
    wxPyEndBlockThreads(blocked);
    return wxPGWindowList();
}

wxString _CommonCallback18(wxPyBlock_t blocked, PyObject* self, PyObject* funcobj, wxVariant& value, int argFlags)
{
    PyObject* res;
    PyObject* py_value;
    py_value = wxVariant_to_PyObject((&value));
        if ( !py_value ) {
            PyErr_SetString(PyExc_TypeError,
                "this wxVariant type cannot be converted to Python object");
            SWIG_fail;
        }

    PyObject* py_argFlags;
    py_argFlags = PyInt_FromLong((long)argFlags);

    res = PyObject_CallFunctionObjArgs(funcobj, self, py_value, py_argFlags, NULL);
    Py_DECREF(funcobj);
    Py_DECREF(py_argFlags);
    Py_DECREF(py_value);
    if (PyErr_Occurred()) SWIG_fail;
    {
    wxString retval;
    wxString* sptr = wxString_in_helper(res);
        if (sptr == NULL) SWIG_fail;
        retval = *sptr;
        delete sptr;
    Py_DECREF(res);
    wxPyEndBlockThreads(blocked);
    return retval;
    }
  fail:
    if ( PyErr_Occurred() ) PyErr_Print();
    wxPyEndBlockThreads(blocked);
    return wxEmptyString;
}

bool _CommonCallback30(wxPyBlock_t blocked, PyObject* self, PyObject* funcobj, wxPropertyGrid* propgrid, wxPGProperty* property, wxWindow* ctrl, wxEvent& event)
{
    PyObject* res;
    PyObject* py_propgrid;
    py_propgrid = SWIG_NewPointerObj((void*)propgrid, SWIGTYPE_p_wxPropertyGrid, 0);
    PyObject* py_property;
    py_property = SWIG_NewPointerObj((void*)property, SWIGTYPE_p_wxPGProperty, 0);
    PyObject* py_ctrl;
    py_ctrl = wxPyMake_wxObject(ctrl, (bool)0);

    PyObject* py_event;
    py_event = SWIG_NewPointerObj((void*)&event, SWIGTYPE_p_wxEvent, 0);
    res = PyObject_CallFunctionObjArgs(funcobj, self, py_propgrid, py_property, py_ctrl, py_event, NULL);
    Py_DECREF(funcobj);
    Py_DECREF(py_event);
    Py_DECREF(py_ctrl);
    Py_DECREF(py_property);
    Py_DECREF(py_propgrid);
    if (PyErr_Occurred()) SWIG_fail;
    {
    bool retval;
        if ( !SWIG_IsOK(SWIG_AsVal_bool(res, &retval)) ) {
        PyErr_SetString(PyExc_TypeError,"expected bool");
        SWIG_fail;
    }
    Py_DECREF(res);
    wxPyEndBlockThreads(blocked);
    return retval;
    }
  fail:
    if ( PyErr_Occurred() ) PyErr_Print();
    wxPyEndBlockThreads(blocked);
    return false;
}

bool _CommonCallback10(wxPyBlock_t blocked, PyObject* self, PyObject* funcobj, wxPropertyGrid* propgrid, wxWindow* wnd_primary, wxEvent& event)
{
    PyObject* res;
    PyObject* py_propgrid;
    py_propgrid = SWIG_NewPointerObj((void*)propgrid, SWIGTYPE_p_wxPropertyGrid, 0);
    PyObject* py_wnd_primary;
    py_wnd_primary = wxPyMake_wxObject(wnd_primary, (bool)0);

    PyObject* py_event;
    py_event = SWIG_NewPointerObj((void*)&event, SWIGTYPE_p_wxEvent, 0);
    res = PyObject_CallFunctionObjArgs(funcobj, self, py_propgrid, py_wnd_primary, py_event, NULL);
    Py_DECREF(funcobj);
    Py_DECREF(py_event);
    Py_DECREF(py_wnd_primary);
    Py_DECREF(py_propgrid);
    if (PyErr_Occurred()) SWIG_fail;
    {
    bool retval;
        if ( !SWIG_IsOK(SWIG_AsVal_bool(res, &retval)) ) {
        PyErr_SetString(PyExc_TypeError,"expected bool");
        SWIG_fail;
    }
    Py_DECREF(res);
    wxPyEndBlockThreads(blocked);
    return retval;
    }
  fail:
    if ( PyErr_Occurred() ) PyErr_Print();
    wxPyEndBlockThreads(blocked);
    return false;
}

wxPGVariantAndBool _CommonCallback32(wxPyBlock_t blocked, PyObject* self, PyObject* funcobj, wxPGProperty* property, wxWindow* ctrl)
{
    PyObject* res;
    PyObject* py_property;
    py_property = SWIG_NewPointerObj((void*)property, SWIGTYPE_p_wxPGProperty, 0);
    PyObject* py_ctrl;
    py_ctrl = wxPyMake_wxObject(ctrl, (bool)0);

    res = PyObject_CallFunctionObjArgs(funcobj, self, py_property, py_ctrl, NULL);
    Py_DECREF(funcobj);
    Py_DECREF(py_ctrl);
    Py_DECREF(py_property);
    if (PyErr_Occurred()) SWIG_fail;
    {
    wxPGVariantAndBool retval;
    if ( !PyObject_to_wxPGVariantAndBool(res, retval) ) {
            PyErr_SetString(PyExc_TypeError,
                "this Python type cannot be converted to wxPGVariantAndBool");
            SWIG_fail;
        }
    Py_DECREF(res);
    wxPyEndBlockThreads(blocked);
    return retval;
    }
  fail:
    if ( PyErr_Occurred() ) PyErr_Print();
    wxPyEndBlockThreads(blocked);
    return wxPGVariantAndBool();
}

wxPGVariantAndBool _CommonCallback16(wxPyBlock_t blocked, PyObject* self, PyObject* funcobj, const wxString& text, int argFlags)
{
    PyObject* res;
    PyObject* py_text;
    #if wxUSE_UNICODE
        py_text = PyUnicode_FromWideChar((&text)->c_str(), (&text)->Len());
    #else
        py_text = PyString_FromStringAndSize((&text)->c_str(), (&text)->Len());
    #endif

    PyObject* py_argFlags;
    py_argFlags = PyInt_FromLong((long)argFlags);

    res = PyObject_CallFunctionObjArgs(funcobj, self, py_text, py_argFlags, NULL);
    Py_DECREF(funcobj);
    Py_DECREF(py_argFlags);
    Py_DECREF(py_text);
    if (PyErr_Occurred()) SWIG_fail;
    {
    wxPGVariantAndBool retval;
    if ( !PyObject_to_wxPGVariantAndBool(res, retval) ) {
            PyErr_SetString(PyExc_TypeError,
                "this Python type cannot be converted to wxPGVariantAndBool");
            SWIG_fail;
        }
    Py_DECREF(res);
    wxPyEndBlockThreads(blocked);
    return retval;
    }
  fail:
    if ( PyErr_Occurred() ) PyErr_Print();
    wxPyEndBlockThreads(blocked);
    return wxPGVariantAndBool();
}

bool _CommonCallback25(wxPyBlock_t blocked, PyObject* self, PyObject* funcobj)
{
    PyObject* res;
    res = PyObject_CallFunctionObjArgs(funcobj, self, NULL);
    Py_DECREF(funcobj);
    if (PyErr_Occurred()) SWIG_fail;
    {
    bool retval;
        if ( !SWIG_IsOK(SWIG_AsVal_bool(res, &retval)) ) {
        PyErr_SetString(PyExc_TypeError,"expected bool");
        SWIG_fail;
    }
    Py_DECREF(res);
    wxPyEndBlockThreads(blocked);
    return retval;
    }
  fail:
    if ( PyErr_Occurred() ) PyErr_Print();
    wxPyEndBlockThreads(blocked);
    return false;
}

void _CommonCallback35(wxPyBlock_t blocked, PyObject* self, PyObject* funcobj, wxPGProperty* property, wxWindow* ctrl, const wxString& txt)
{
    PyObject* res;
    PyObject* py_property;
    py_property = SWIG_NewPointerObj((void*)property, SWIGTYPE_p_wxPGProperty, 0);
    PyObject* py_ctrl;
    py_ctrl = wxPyMake_wxObject(ctrl, (bool)0);

    PyObject* py_txt;
    #if wxUSE_UNICODE
        py_txt = PyUnicode_FromWideChar((&txt)->c_str(), (&txt)->Len());
    #else
        py_txt = PyString_FromStringAndSize((&txt)->c_str(), (&txt)->Len());
    #endif

    res = PyObject_CallFunctionObjArgs(funcobj, self, py_property, py_ctrl, py_txt, NULL);
    Py_DECREF(funcobj);
    Py_DECREF(py_txt);
    Py_DECREF(py_ctrl);
    Py_DECREF(py_property);
    if (PyErr_Occurred()) SWIG_fail;
    {
    Py_DECREF(res);
    }
  fail:
    wxPyEndBlockThreads(blocked);
}

bool _CommonCallback4(wxPyBlock_t blocked, PyObject* self, PyObject* funcobj, const wxString& name, wxVariant& value)
{
    PyObject* res;
    PyObject* py_name;
    #if wxUSE_UNICODE
        py_name = PyUnicode_FromWideChar((&name)->c_str(), (&name)->Len());
    #else
        py_name = PyString_FromStringAndSize((&name)->c_str(), (&name)->Len());
    #endif

    PyObject* py_value;
    py_value = wxVariant_to_PyObject((&value));
        if ( !py_value ) {
            PyErr_SetString(PyExc_TypeError,
                "this wxVariant type cannot be converted to Python object");
            SWIG_fail;
        }

    res = PyObject_CallFunctionObjArgs(funcobj, self, py_name, py_value, NULL);
    Py_DECREF(funcobj);
    Py_DECREF(py_value);
    Py_DECREF(py_name);
    if (PyErr_Occurred()) SWIG_fail;
    {
    bool retval;
        if ( !SWIG_IsOK(SWIG_AsVal_bool(res, &retval)) ) {
        PyErr_SetString(PyExc_TypeError,"expected bool");
        SWIG_fail;
    }
    Py_DECREF(res);
    wxPyEndBlockThreads(blocked);
    return retval;
    }
  fail:
    if ( PyErr_Occurred() ) PyErr_Print();
    wxPyEndBlockThreads(blocked);
    return false;
}

void _CommonCallback31(wxPyBlock_t blocked, PyObject* self, PyObject* funcobj, wxPGProperty* property, wxWindow* wnd)
{
    PyObject* res;
    PyObject* py_property;
    py_property = SWIG_NewPointerObj((void*)property, SWIGTYPE_p_wxPGProperty, 0);
    PyObject* py_wnd;
    py_wnd = wxPyMake_wxObject(wnd, (bool)0);

    res = PyObject_CallFunctionObjArgs(funcobj, self, py_property, py_wnd, NULL);
    Py_DECREF(funcobj);
    Py_DECREF(py_wnd);
    Py_DECREF(py_property);
    if (PyErr_Occurred()) SWIG_fail;
    {
    Py_DECREF(res);
    }
  fail:
    wxPyEndBlockThreads(blocked);
}

wxString _CommonCallback14(wxPyBlock_t blocked, PyObject* self, PyObject* funcobj)
{
    PyObject* res;
    res = PyObject_CallFunctionObjArgs(funcobj, self, NULL);
    Py_DECREF(funcobj);
    if (PyErr_Occurred()) SWIG_fail;
    {
    wxString retval;
    wxString* sptr = wxString_in_helper(res);
        if (sptr == NULL) SWIG_fail;
        retval = *sptr;
        delete sptr;
    Py_DECREF(res);
    wxPyEndBlockThreads(blocked);
    return retval;
    }
  fail:
    if ( PyErr_Occurred() ) PyErr_Print();
    wxPyEndBlockThreads(blocked);
    return wxEmptyString;
}

wxVariant _CommonCallback0(wxPyBlock_t blocked, PyObject* self, PyObject* funcobj, wxVariant& thisValue, int childIndex, wxVariant& childValue)
{
    PyObject* res;
    PyObject* py_thisValue;
    py_thisValue = wxVariant_to_PyObject((&thisValue));
        if ( !py_thisValue ) {
            PyErr_SetString(PyExc_TypeError,
                "this wxVariant type cannot be converted to Python object");
            SWIG_fail;
        }

    PyObject* py_childIndex;
    py_childIndex = PyInt_FromLong((long)childIndex);

    PyObject* py_childValue;
    py_childValue = wxVariant_to_PyObject((&childValue));
        if ( !py_childValue ) {
            PyErr_SetString(PyExc_TypeError,
                "this wxVariant type cannot be converted to Python object");
            SWIG_fail;
        }

    res = PyObject_CallFunctionObjArgs(funcobj, self, py_thisValue, py_childIndex, py_childValue, NULL);
    Py_DECREF(funcobj);
    Py_DECREF(py_childValue);
    Py_DECREF(py_childIndex);
    Py_DECREF(py_thisValue);
    if (PyErr_Occurred()) SWIG_fail;
    {
    wxVariant retval;
    if ( !PyObject_to_wxVariant(res, &retval) ) {
            PyErr_SetString(PyExc_TypeError,
                            "this Python type cannot be converted to wxVariant");
            SWIG_fail;
        }
    Py_DECREF(res);
    wxPyEndBlockThreads(blocked);
    return retval;
    }
  fail:
    if ( PyErr_Occurred() ) PyErr_Print();
    wxPyEndBlockThreads(blocked);
    return wxVariant();
}

void _CommonCallback12(wxPyBlock_t blocked, PyObject* self, PyObject* funcobj)
{
    PyObject* res;
    res = PyObject_CallFunctionObjArgs(funcobj, self, NULL);
    Py_DECREF(funcobj);
    if (PyErr_Occurred()) SWIG_fail;
    {
    Py_DECREF(res);
    }
  fail:
    wxPyEndBlockThreads(blocked);
}

wxVariant _CommonCallback1(wxPyBlock_t blocked, PyObject* self, PyObject* funcobj, const wxString& name)
{
    PyObject* res;
    PyObject* py_name;
    #if wxUSE_UNICODE
        py_name = PyUnicode_FromWideChar((&name)->c_str(), (&name)->Len());
    #else
        py_name = PyString_FromStringAndSize((&name)->c_str(), (&name)->Len());
    #endif

    res = PyObject_CallFunctionObjArgs(funcobj, self, py_name, NULL);
    Py_DECREF(funcobj);
    Py_DECREF(py_name);
    if (PyErr_Occurred()) SWIG_fail;
    {
    wxVariant retval;
    if ( !PyObject_to_wxVariant(res, &retval) ) {
            PyErr_SetString(PyExc_TypeError,
                            "this Python type cannot be converted to wxVariant");
            SWIG_fail;
        }
    Py_DECREF(res);
    wxPyEndBlockThreads(blocked);
    return retval;
    }
  fail:
    if ( PyErr_Occurred() ) PyErr_Print();
    wxPyEndBlockThreads(blocked);
    return wxVariant();
}

wxPGCellRenderer* _CommonCallback5(wxPyBlock_t blocked, PyObject* self, PyObject* funcobj, int column)
{
    PyObject* res;
    PyObject* py_column;
    py_column = PyInt_FromLong((long)column);

    res = PyObject_CallFunctionObjArgs(funcobj, self, py_column, NULL);
    Py_DECREF(funcobj);
    Py_DECREF(py_column);
    if (PyErr_Occurred()) SWIG_fail;
    {
    wxPGCellRenderer* retval;
    if ( !SWIG_IsOK(SWIG_ConvertPtr(res, (void**)&(retval), SWIGTYPE_p_wxPGCellRenderer, 0)) ) {
        PyErr_SetString(PyExc_TypeError,"expected wxPGCellRenderer");
        SWIG_fail;
    }
    PyObject_SetAttrString(res, "thisown", Py_False);
    Py_DECREF(res);
    wxPyEndBlockThreads(blocked);
    return retval;
    }
  fail:
    if ( PyErr_Occurred() ) PyErr_Print();
    wxPyEndBlockThreads(blocked);
    return NULL;
}

bool _CommonCallback19(wxPyBlock_t blocked, PyObject* self, PyObject* funcobj, wxPropertyGrid* propGrid, wxPGProperty* property)
{
    PyObject* res;
    PyObject* py_propGrid;
    py_propGrid = SWIG_NewPointerObj((void*)propGrid, SWIGTYPE_p_wxPropertyGrid, 0);
    PyObject* py_property;
    py_property = SWIG_NewPointerObj((void*)property, SWIGTYPE_p_wxPGProperty, 0);
    res = PyObject_CallFunctionObjArgs(funcobj, self, py_propGrid, py_property, NULL);
    Py_DECREF(funcobj);
    Py_DECREF(py_property);
    Py_DECREF(py_propGrid);
    if (PyErr_Occurred()) SWIG_fail;
    {
    bool retval;
        if ( !SWIG_IsOK(SWIG_AsVal_bool(res, &retval)) ) {
        PyErr_SetString(PyExc_TypeError,"expected bool");
        SWIG_fail;
    }
    Py_DECREF(res);
    wxPyEndBlockThreads(blocked);
    return retval;
    }
  fail:
    if ( PyErr_Occurred() ) PyErr_Print();
    wxPyEndBlockThreads(blocked);
    return false;
}

int _CommonCallback20(wxPyBlock_t blocked, PyObject* self, PyObject* funcobj, int value)
{
    PyObject* res;
    PyObject* py_value;
    py_value = PyInt_FromLong((long)value);

    res = PyObject_CallFunctionObjArgs(funcobj, self, py_value, NULL);
    Py_DECREF(funcobj);
    Py_DECREF(py_value);
    if (PyErr_Occurred()) SWIG_fail;
    {
    int retval;
    retval = (int)PyInt_AS_LONG(res);
    Py_DECREF(res);
    wxPyEndBlockThreads(blocked);
    return retval;
    }
  fail:
    if ( PyErr_Occurred() ) PyErr_Print();
    wxPyEndBlockThreads(blocked);
    return 0;
}

wxVariant _CommonCallback37(wxPyBlock_t blocked, PyObject* self, PyObject* funcobj, wxColourPropertyValue& v)
{
    PyObject* res;
    PyObject* py_v;
    py_v = SWIG_NewPointerObj((void*)&v, SWIGTYPE_p_wxColourPropertyValue, 0);
    res = PyObject_CallFunctionObjArgs(funcobj, self, py_v, NULL);
    Py_DECREF(funcobj);
    Py_DECREF(py_v);
    if (PyErr_Occurred()) SWIG_fail;
    {
    wxVariant retval;
    if ( !PyObject_to_wxVariant(res, &retval) ) {
            PyErr_SetString(PyExc_TypeError,
                            "this Python type cannot be converted to wxVariant");
            SWIG_fail;
        }
    Py_DECREF(res);
    wxPyEndBlockThreads(blocked);
    return retval;
    }
  fail:
    if ( PyErr_Occurred() ) PyErr_Print();
    wxPyEndBlockThreads(blocked);
    return wxVariant();
}

wxString _CommonCallback8(wxPyBlock_t blocked, PyObject* self, PyObject* funcobj, int argFlags)
{
    PyObject* res;
    PyObject* py_argFlags;
    py_argFlags = PyInt_FromLong((long)argFlags);

    res = PyObject_CallFunctionObjArgs(funcobj, self, py_argFlags, NULL);
    Py_DECREF(funcobj);
    Py_DECREF(py_argFlags);
    if (PyErr_Occurred()) SWIG_fail;
    {
    wxString retval;
    wxString* sptr = wxString_in_helper(res);
        if (sptr == NULL) SWIG_fail;
        retval = *sptr;
        delete sptr;
    Py_DECREF(res);
    wxPyEndBlockThreads(blocked);
    return retval;
    }
  fail:
    if ( PyErr_Occurred() ) PyErr_Print();
    wxPyEndBlockThreads(blocked);
    return wxEmptyString;
}

wxPGEditorDialogAdapter* _CommonCallback7(wxPyBlock_t blocked, PyObject* self, PyObject* funcobj)
{
    PyObject* res;
    res = PyObject_CallFunctionObjArgs(funcobj, self, NULL);
    Py_DECREF(funcobj);
    if (PyErr_Occurred()) SWIG_fail;
    {
    wxPGEditorDialogAdapter* retval;
    if ( !SWIG_IsOK(SWIG_ConvertPtr(res, (void**)&(retval), SWIGTYPE_p_wxPGEditorDialogAdapter, 0)) ) {
        PyErr_SetString(PyExc_TypeError,"expected wxPGEditorDialogAdapter");
        SWIG_fail;
    }
    PyObject_SetAttrString(res, "thisown", Py_False);
    Py_DECREF(res);
    wxPyEndBlockThreads(blocked);
    return retval;
    }
  fail:
    if ( PyErr_Occurred() ) PyErr_Print();
    wxPyEndBlockThreads(blocked);
    return NULL;
}

void _CommonCallback13(wxPyBlock_t blocked, PyObject* self, PyObject* funcobj, wxVariant& pendingValue)
{
    PyObject* res;
    PyObject* py_pendingValue;
    py_pendingValue = wxVariant_to_PyObject((&pendingValue));
        if ( !py_pendingValue ) {
            PyErr_SetString(PyExc_TypeError,
                "this wxVariant type cannot be converted to Python object");
            SWIG_fail;
        }

    res = PyObject_CallFunctionObjArgs(funcobj, self, py_pendingValue, NULL);
    Py_DECREF(funcobj);
    Py_DECREF(py_pendingValue);
    if (PyErr_Occurred()) SWIG_fail;
    {
    Py_DECREF(res);
    }
  fail:
    wxPyEndBlockThreads(blocked);
}

void _CommonCallback27(wxPyBlock_t blocked, PyObject* self, PyObject* funcobj, wxWindow* ctrl, int index)
{
    PyObject* res;
    PyObject* py_ctrl;
    py_ctrl = wxPyMake_wxObject(ctrl, (bool)0);

    PyObject* py_index;
    py_index = PyInt_FromLong((long)index);

    res = PyObject_CallFunctionObjArgs(funcobj, self, py_ctrl, py_index, NULL);
    Py_DECREF(funcobj);
    Py_DECREF(py_index);
    Py_DECREF(py_ctrl);
    if (PyErr_Occurred()) SWIG_fail;
    {
    Py_DECREF(res);
    }
  fail:
    wxPyEndBlockThreads(blocked);
}

void _CommonCallback9(wxPyBlock_t blocked, PyObject* self, PyObject* funcobj, wxDC& dc, const wxRect& rect, wxPGPaintData& paintdata)
{
    PyObject* res;
    PyObject* py_dc;
    py_dc = SWIG_NewPointerObj((void*)&dc, SWIGTYPE_p_wxDC, 0);
    PyObject* py_rect;
    py_rect = SWIG_NewPointerObj((void*)&rect, SWIGTYPE_p_wxRect, 0);
    PyObject* py_paintdata;
    py_paintdata = SWIG_NewPointerObj((void*)&paintdata, SWIGTYPE_p_wxPGPaintData, 0);
    res = PyObject_CallFunctionObjArgs(funcobj, self, py_dc, py_rect, py_paintdata, NULL);
    Py_DECREF(funcobj);
    Py_DECREF(py_paintdata);
    Py_DECREF(py_rect);
    Py_DECREF(py_dc);
    if (PyErr_Occurred()) SWIG_fail;
    {
    Py_DECREF(res);
    }
  fail:
    wxPyEndBlockThreads(blocked);
}

wxPGVariantAndBool _CommonCallback17(wxPyBlock_t blocked, PyObject* self, PyObject* funcobj, const wxVariant& value, wxPGValidationInfo& validationInfo)
{
    PyObject* res;
    PyObject* py_value;
    py_value = wxVariant_to_PyObject((&value));
        if ( !py_value ) {
            PyErr_SetString(PyExc_TypeError,
                "this wxVariant type cannot be converted to Python object");
            SWIG_fail;
        }

    PyObject* py_validationInfo;
    py_validationInfo = SWIG_NewPointerObj((void*)&validationInfo, SWIGTYPE_p_wxPGValidationInfo, 0);
    res = PyObject_CallFunctionObjArgs(funcobj, self, py_value, py_validationInfo, NULL);
    Py_DECREF(funcobj);
    Py_DECREF(py_validationInfo);
    Py_DECREF(py_value);
    if (PyErr_Occurred()) SWIG_fail;
    {
    wxPGVariantAndBool retval;
    if ( !PyObject_to_wxPGVariantAndBool(res, retval) ) {
            PyErr_SetString(PyExc_TypeError,
                "this Python type cannot be converted to wxPGVariantAndBool");
            SWIG_fail;
        }
    Py_DECREF(res);
    wxPyEndBlockThreads(blocked);
    return retval;
    }
  fail:
    if ( PyErr_Occurred() ) PyErr_Print();
    wxPyEndBlockThreads(blocked);
    return wxPGVariantAndBool();
}

int _CommonCallback29(wxPyBlock_t blocked, PyObject* self, PyObject* funcobj, wxWindow* ctrl, const wxString& label, int index)
{
    PyObject* res;
    PyObject* py_ctrl;
    py_ctrl = wxPyMake_wxObject(ctrl, (bool)0);

    PyObject* py_label;
    #if wxUSE_UNICODE
        py_label = PyUnicode_FromWideChar((&label)->c_str(), (&label)->Len());
    #else
        py_label = PyString_FromStringAndSize((&label)->c_str(), (&label)->Len());
    #endif

    PyObject* py_index;
    py_index = PyInt_FromLong((long)index);

    res = PyObject_CallFunctionObjArgs(funcobj, self, py_ctrl, py_label, py_index, NULL);
    Py_DECREF(funcobj);
    Py_DECREF(py_index);
    Py_DECREF(py_label);
    Py_DECREF(py_ctrl);
    if (PyErr_Occurred()) SWIG_fail;
    {
    int retval;
    retval = (int)PyInt_AS_LONG(res);
    Py_DECREF(res);
    wxPyEndBlockThreads(blocked);
    return retval;
    }
  fail:
    if ( PyErr_Occurred() ) PyErr_Print();
    wxPyEndBlockThreads(blocked);
    return 0;
}

class PyFloatProperty : public wxFloatProperty {
public:
        PyFloatProperty( const wxString& label = (*wxPGProperty::sm_wxPG_LABEL),
                     const wxString& name = (*wxPGProperty::sm_wxPG_LABEL),
                     double value = 0.0 );
    virtual ~PyFloatProperty();
    void _SetSelf(PyObject *self);
    virtual const wxPGEditor* DoGetEditorClass() const;
    virtual bool ValidateValue(wxVariant& value, wxPGValidationInfo& validationInfo) const;
    virtual bool StringToValue(wxVariant& variant, const wxString& text, int argFlags) const;
    virtual bool IntToValue(wxVariant& variant, int number, int argFlags) const;
    virtual wxVariant ChildChanged( wxVariant& thisValue,
                                    int childIndex,
                                    wxVariant& childValue ) const;
    virtual wxVariant DoGetAttribute( const wxString& name ) const;
    virtual wxValidator* DoGetValidator () const;
    virtual wxVariant DoGetValue() const;
    virtual bool DoSetAttribute( const wxString& name, wxVariant& value );
    virtual wxPGCellRenderer* GetCellRenderer( int column ) const;
    virtual int GetChoiceSelection() const;
    virtual wxPGEditorDialogAdapter* GetEditorDialog() const;
    virtual wxString GetValueAsString( int argFlags = 0 ) const;
    virtual void OnCustomPaint( wxDC& dc,
                                const wxRect& rect,
                                wxPGPaintData& paintdata );
    virtual bool OnEvent( wxPropertyGrid* propgrid,
                          wxWindow* wnd_primary,
                          wxEvent& event );
    virtual wxSize OnMeasureImage( int item = -1 ) const;
    virtual void OnSetValue();
    virtual void OnValidationFailure( wxVariant& pendingValue );
    virtual wxString PyGetEditor() const;
    virtual wxPGVariantAndBool PyIntToValue( int number, int argFlags ) const;
    virtual wxPGVariantAndBool PyStringToValue( const wxString& text, int argFlags ) const;
    virtual wxPGVariantAndBool PyValidateValue( const wxVariant& value, wxPGValidationInfo& validationInfo ) const;
    virtual void RefreshChildren();
    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
private:
    void Init() { if ( !gs_funcNamesInitialized ) _InitFuncNames(); }
};

static PyObject* gs_PyFloatProperty_pyClass = NULL;


PyFloatProperty::PyFloatProperty(const wxString& label, const wxString& name, double value)
    : wxFloatProperty(label, name, value)
{
    Init();
}

PyFloatProperty::~PyFloatProperty()
{
    if (m_clientData) { _deleteOwningObject(m_clientData); m_clientData = NULL; }
}

void PyFloatProperty::_SetSelf(PyObject *self)
{
    if ( !gs_PyFloatProperty_pyClass )
    {
        gs_PyFloatProperty_pyClass = PyObject_GetAttr(self, gs___class___Name);
        Py_DECREF(gs_PyFloatProperty_pyClass);
    }
    if ( !m_clientData ) {
        m_clientData = self;
        Py_INCREF(self);
    }
}

const wxPGEditor* PyFloatProperty::DoGetEditorClass() const
{
    return wxPropertyGridInterface::GetEditorByName(PyGetEditor());
}

bool PyFloatProperty::ValidateValue(wxVariant& value, wxPGValidationInfo& validationInfo) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyValidateValue(value, validationInfo);
        if ( vab.m_valueValid )
            value = vab.m_value;
        return vab.m_result;
    }
    return wxFloatProperty::ValidateValue(value, validationInfo);
}

bool PyFloatProperty::StringToValue(wxVariant& variant, const wxString& text, int argFlags) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyStringToValue(text, argFlags);
        if ( vab.m_valueValid )
            variant = vab.m_value;
        return vab.m_result;
    }
    return wxFloatProperty::StringToValue(variant, text, argFlags);
}

bool PyFloatProperty::IntToValue(wxVariant& variant, int number, int argFlags) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyIntToValue(number, argFlags);
        if ( vab.m_valueValid )
            variant = vab.m_value;
        return vab.m_result;
    }
    return wxFloatProperty::IntToValue(variant, number, argFlags);
}


wxVariant PyFloatProperty::ChildChanged(wxVariant& thisValue, int childIndex, wxVariant& childValue) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ChildChanged_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ChildChanged_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFloatProperty::ChildChanged(thisValue, childIndex, childValue);
    }
    return _CommonCallback0(blocked, (PyObject*)m_clientData, funcobj, thisValue, childIndex, childValue);
}


wxVariant PyFloatProperty::DoGetAttribute(const wxString& name) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetAttribute_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetAttribute_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFloatProperty::DoGetAttribute(name);
    }
    return _CommonCallback1(blocked, (PyObject*)m_clientData, funcobj, name);
}


wxValidator* PyFloatProperty::DoGetValidator() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetValidator_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetValidator_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFloatProperty::DoGetValidator();
    }
    return _CommonCallback2(blocked, (PyObject*)m_clientData, funcobj);
}


wxVariant PyFloatProperty::DoGetValue() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFloatProperty::DoGetValue();
    }
    return _CommonCallback3(blocked, (PyObject*)m_clientData, funcobj);
}


bool PyFloatProperty::DoSetAttribute(const wxString& name, wxVariant& value)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoSetAttribute_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoSetAttribute_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFloatProperty::DoSetAttribute(name, value);
    }
    return _CommonCallback4(blocked, (PyObject*)m_clientData, funcobj, name, value);
}


wxPGCellRenderer* PyFloatProperty::GetCellRenderer(int column) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetCellRenderer_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetCellRenderer_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFloatProperty::GetCellRenderer(column);
    }
    return _CommonCallback5(blocked, (PyObject*)m_clientData, funcobj, column);
}


int PyFloatProperty::GetChoiceSelection() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetChoiceSelection_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetChoiceSelection_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFloatProperty::GetChoiceSelection();
    }
    return _CommonCallback6(blocked, (PyObject*)m_clientData, funcobj);
}


wxPGEditorDialogAdapter* PyFloatProperty::GetEditorDialog() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetEditorDialog_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetEditorDialog_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFloatProperty::GetEditorDialog();
    }
    return _CommonCallback7(blocked, (PyObject*)m_clientData, funcobj);
}


wxString PyFloatProperty::GetValueAsString(int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetValueAsString_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetValueAsString_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFloatProperty::GetValueAsString(argFlags);
    }
    return _CommonCallback8(blocked, (PyObject*)m_clientData, funcobj, argFlags);
}


void PyFloatProperty::OnCustomPaint(wxDC& dc, const wxRect& rect, wxPGPaintData& paintdata)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnCustomPaint_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnCustomPaint_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxFloatProperty::OnCustomPaint(dc, rect, paintdata);
        return;
    }
    _CommonCallback9(blocked, (PyObject*)m_clientData, funcobj, dc, rect, paintdata);
}


bool PyFloatProperty::OnEvent(wxPropertyGrid* propgrid, wxWindow* wnd_primary, wxEvent& event)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnEvent_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnEvent_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFloatProperty::OnEvent(propgrid, wnd_primary, event);
    }
    return _CommonCallback10(blocked, (PyObject*)m_clientData, funcobj, propgrid, wnd_primary, event);
}


wxSize PyFloatProperty::OnMeasureImage(int item) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnMeasureImage_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnMeasureImage_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFloatProperty::OnMeasureImage(item);
    }
    return _CommonCallback11(blocked, (PyObject*)m_clientData, funcobj, item);
}


void PyFloatProperty::OnSetValue()
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnSetValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnSetValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxFloatProperty::OnSetValue();
        return;
    }
    _CommonCallback12(blocked, (PyObject*)m_clientData, funcobj);
}


void PyFloatProperty::OnValidationFailure(wxVariant& pendingValue)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnValidationFailure_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnValidationFailure_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxFloatProperty::OnValidationFailure(pendingValue);
        return;
    }
    _CommonCallback13(blocked, (PyObject*)m_clientData, funcobj, pendingValue);
}


wxString PyFloatProperty::PyGetEditor() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetEditor_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetEditor_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            return wxT("TextCtrl");
        }
    }
    return _CommonCallback14(blocked, (PyObject*)m_clientData, funcobj);
}


wxPGVariantAndBool PyFloatProperty::PyIntToValue(int number, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_IntToValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_IntToValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_result = wxFloatProperty::IntToValue(vab.m_value, number, argFlags);
            if ( vab.m_result )
                vab.m_valueValid = true;
            return vab;
        }
    }
    return _CommonCallback15(blocked, (PyObject*)m_clientData, funcobj, number, argFlags);
}


wxPGVariantAndBool PyFloatProperty::PyStringToValue(const wxString& text, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_StringToValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_StringToValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_result = wxFloatProperty::StringToValue(vab.m_value, text, argFlags);
            if ( vab.m_result )
                vab.m_valueValid = true;
            return vab;
        }
    }
    return _CommonCallback16(blocked, (PyObject*)m_clientData, funcobj, text, argFlags);
}


wxPGVariantAndBool PyFloatProperty::PyValidateValue(const wxVariant& value, wxPGValidationInfo& validationInfo) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ValidateValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ValidateValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_value = value;
            vab.m_valueValid = true;
            vab.m_result = wxFloatProperty::ValidateValue(vab.m_value, validationInfo);
            return vab;
        }
    }
    return _CommonCallback17(blocked, (PyObject*)m_clientData, funcobj, value, validationInfo);
}


void PyFloatProperty::RefreshChildren()
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_RefreshChildren_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_RefreshChildren_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxFloatProperty::RefreshChildren();
        return;
    }
    _CommonCallback12(blocked, (PyObject*)m_clientData, funcobj);
}


wxString PyFloatProperty::ValueToString(wxVariant& value, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ValueToString_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ValueToString_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFloatProperty::ValueToString(value, argFlags);
    }
    return _CommonCallback18(blocked, (PyObject*)m_clientData, funcobj, value, argFlags);
}


class PyEditorDialogAdapter : public wxPGEditorDialogAdapter {
public:
        PyEditorDialogAdapter();
    virtual ~PyEditorDialogAdapter();
    void _SetSelf(PyObject *self);
    virtual bool DoShowDialog( wxPropertyGrid* propGrid,
                               wxPGProperty* property );
private:
    void Init() { if ( !gs_funcNamesInitialized ) _InitFuncNames(); }
};

static PyObject* gs_PyEditorDialogAdapter_pyClass = NULL;


PyEditorDialogAdapter::PyEditorDialogAdapter()
    : wxPGEditorDialogAdapter()
{
    Init();
}

PyEditorDialogAdapter::~PyEditorDialogAdapter()
{
    if (m_clientData) { _deleteOwningObject(m_clientData); m_clientData = NULL; }
}

void PyEditorDialogAdapter::_SetSelf(PyObject *self)
{
    if ( !gs_PyEditorDialogAdapter_pyClass )
    {
        gs_PyEditorDialogAdapter_pyClass = PyObject_GetAttr(self, gs___class___Name);
        Py_DECREF(gs_PyEditorDialogAdapter_pyClass);
    }
    if ( !m_clientData ) {
        m_clientData = self;
        Py_INCREF(self);
    }
}


bool PyEditorDialogAdapter::DoShowDialog(wxPropertyGrid* propGrid, wxPGProperty* property)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoShowDialog_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoShowDialog_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        PyErr_SetString(PyExc_TypeError,"this method must be implemented");
        return false;
    }
    return _CommonCallback19(blocked, (PyObject*)m_clientData, funcobj, propGrid, property);
}


class PyEnumProperty : public wxEnumProperty {
public:
        PyEnumProperty( const wxString& label = (*wxPGProperty::sm_wxPG_LABEL),
                    const wxString& name = (*wxPGProperty::sm_wxPG_LABEL),
                    const wxArrayString& labels = wxArrayString(),
                    const wxArrayInt& values = wxArrayInt(),
                    int value = 0 );
    virtual ~PyEnumProperty();
    void _SetSelf(PyObject *self);
    virtual const wxPGEditor* DoGetEditorClass() const;
    virtual bool ValidateValue(wxVariant& value, wxPGValidationInfo& validationInfo) const;
    virtual bool StringToValue(wxVariant& variant, const wxString& text, int argFlags) const;
    virtual bool IntToValue(wxVariant& variant, int number, int argFlags) const;
    virtual wxVariant ChildChanged( wxVariant& thisValue,
                                    int childIndex,
                                    wxVariant& childValue ) const;
    virtual wxVariant DoGetAttribute( const wxString& name ) const;
    virtual wxValidator* DoGetValidator () const;
    virtual wxVariant DoGetValue() const;
    virtual bool DoSetAttribute( const wxString& name, wxVariant& value );
    virtual wxPGCellRenderer* GetCellRenderer( int column ) const;
    virtual int GetChoiceSelection() const;
    virtual wxPGEditorDialogAdapter* GetEditorDialog() const;
    virtual int GetIndexForValue( int value ) const;
    virtual wxString GetValueAsString( int argFlags = 0 ) const;
    virtual void OnCustomPaint( wxDC& dc,
                                const wxRect& rect,
                                wxPGPaintData& paintdata );
    virtual bool OnEvent( wxPropertyGrid* propgrid,
                          wxWindow* wnd_primary,
                          wxEvent& event );
    virtual wxSize OnMeasureImage( int item = -1 ) const;
    virtual void OnSetValue();
    virtual void OnValidationFailure( wxVariant& pendingValue );
    virtual wxString PyGetEditor() const;
    virtual wxPGVariantAndBool PyIntToValue( int number, int argFlags ) const;
    virtual wxPGVariantAndBool PyStringToValue( const wxString& text, int argFlags ) const;
    virtual wxPGVariantAndBool PyValidateValue( const wxVariant& value, wxPGValidationInfo& validationInfo ) const;
    virtual void RefreshChildren();
    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
private:
    void Init() { if ( !gs_funcNamesInitialized ) _InitFuncNames(); }
};

static PyObject* gs_PyEnumProperty_pyClass = NULL;


PyEnumProperty::PyEnumProperty(const wxString& label, const wxString& name, const wxArrayString& labels, const wxArrayInt& values, int value)
    : wxEnumProperty(label, name, labels, values, value)
{
    Init();
}

PyEnumProperty::~PyEnumProperty()
{
    if (m_clientData) { _deleteOwningObject(m_clientData); m_clientData = NULL; }
}

void PyEnumProperty::_SetSelf(PyObject *self)
{
    if ( !gs_PyEnumProperty_pyClass )
    {
        gs_PyEnumProperty_pyClass = PyObject_GetAttr(self, gs___class___Name);
        Py_DECREF(gs_PyEnumProperty_pyClass);
    }
    if ( !m_clientData ) {
        m_clientData = self;
        Py_INCREF(self);
    }
}

const wxPGEditor* PyEnumProperty::DoGetEditorClass() const
{
    return wxPropertyGridInterface::GetEditorByName(PyGetEditor());
}

bool PyEnumProperty::ValidateValue(wxVariant& value, wxPGValidationInfo& validationInfo) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyValidateValue(value, validationInfo);
        if ( vab.m_valueValid )
            value = vab.m_value;
        return vab.m_result;
    }
    return wxEnumProperty::ValidateValue(value, validationInfo);
}

bool PyEnumProperty::StringToValue(wxVariant& variant, const wxString& text, int argFlags) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyStringToValue(text, argFlags);
        if ( vab.m_valueValid )
            variant = vab.m_value;
        return vab.m_result;
    }
    return wxEnumProperty::StringToValue(variant, text, argFlags);
}

bool PyEnumProperty::IntToValue(wxVariant& variant, int number, int argFlags) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyIntToValue(number, argFlags);
        if ( vab.m_valueValid )
            variant = vab.m_value;
        return vab.m_result;
    }
    return wxEnumProperty::IntToValue(variant, number, argFlags);
}


wxVariant PyEnumProperty::ChildChanged(wxVariant& thisValue, int childIndex, wxVariant& childValue) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ChildChanged_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ChildChanged_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxEnumProperty::ChildChanged(thisValue, childIndex, childValue);
    }
    return _CommonCallback0(blocked, (PyObject*)m_clientData, funcobj, thisValue, childIndex, childValue);
}


wxVariant PyEnumProperty::DoGetAttribute(const wxString& name) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetAttribute_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetAttribute_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxEnumProperty::DoGetAttribute(name);
    }
    return _CommonCallback1(blocked, (PyObject*)m_clientData, funcobj, name);
}


wxValidator* PyEnumProperty::DoGetValidator() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetValidator_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetValidator_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxEnumProperty::DoGetValidator();
    }
    return _CommonCallback2(blocked, (PyObject*)m_clientData, funcobj);
}


wxVariant PyEnumProperty::DoGetValue() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxEnumProperty::DoGetValue();
    }
    return _CommonCallback3(blocked, (PyObject*)m_clientData, funcobj);
}


bool PyEnumProperty::DoSetAttribute(const wxString& name, wxVariant& value)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoSetAttribute_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoSetAttribute_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxEnumProperty::DoSetAttribute(name, value);
    }
    return _CommonCallback4(blocked, (PyObject*)m_clientData, funcobj, name, value);
}


wxPGCellRenderer* PyEnumProperty::GetCellRenderer(int column) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetCellRenderer_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetCellRenderer_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxEnumProperty::GetCellRenderer(column);
    }
    return _CommonCallback5(blocked, (PyObject*)m_clientData, funcobj, column);
}


int PyEnumProperty::GetChoiceSelection() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetChoiceSelection_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetChoiceSelection_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxEnumProperty::GetChoiceSelection();
    }
    return _CommonCallback6(blocked, (PyObject*)m_clientData, funcobj);
}


wxPGEditorDialogAdapter* PyEnumProperty::GetEditorDialog() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetEditorDialog_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetEditorDialog_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxEnumProperty::GetEditorDialog();
    }
    return _CommonCallback7(blocked, (PyObject*)m_clientData, funcobj);
}


int PyEnumProperty::GetIndexForValue(int value) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetIndexForValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetIndexForValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxEnumProperty::GetIndexForValue(value);
    }
    return _CommonCallback20(blocked, (PyObject*)m_clientData, funcobj, value);
}


wxString PyEnumProperty::GetValueAsString(int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetValueAsString_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetValueAsString_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxEnumProperty::GetValueAsString(argFlags);
    }
    return _CommonCallback8(blocked, (PyObject*)m_clientData, funcobj, argFlags);
}


void PyEnumProperty::OnCustomPaint(wxDC& dc, const wxRect& rect, wxPGPaintData& paintdata)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnCustomPaint_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnCustomPaint_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxEnumProperty::OnCustomPaint(dc, rect, paintdata);
        return;
    }
    _CommonCallback9(blocked, (PyObject*)m_clientData, funcobj, dc, rect, paintdata);
}


bool PyEnumProperty::OnEvent(wxPropertyGrid* propgrid, wxWindow* wnd_primary, wxEvent& event)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnEvent_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnEvent_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxEnumProperty::OnEvent(propgrid, wnd_primary, event);
    }
    return _CommonCallback10(blocked, (PyObject*)m_clientData, funcobj, propgrid, wnd_primary, event);
}


wxSize PyEnumProperty::OnMeasureImage(int item) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnMeasureImage_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnMeasureImage_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxEnumProperty::OnMeasureImage(item);
    }
    return _CommonCallback11(blocked, (PyObject*)m_clientData, funcobj, item);
}


void PyEnumProperty::OnSetValue()
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnSetValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnSetValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxEnumProperty::OnSetValue();
        return;
    }
    _CommonCallback12(blocked, (PyObject*)m_clientData, funcobj);
}


void PyEnumProperty::OnValidationFailure(wxVariant& pendingValue)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnValidationFailure_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnValidationFailure_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxEnumProperty::OnValidationFailure(pendingValue);
        return;
    }
    _CommonCallback13(blocked, (PyObject*)m_clientData, funcobj, pendingValue);
}


wxString PyEnumProperty::PyGetEditor() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetEditor_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetEditor_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            return wxT("TextCtrl");
        }
    }
    return _CommonCallback14(blocked, (PyObject*)m_clientData, funcobj);
}


wxPGVariantAndBool PyEnumProperty::PyIntToValue(int number, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_IntToValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_IntToValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_result = wxEnumProperty::IntToValue(vab.m_value, number, argFlags);
            if ( vab.m_result )
                vab.m_valueValid = true;
            return vab;
        }
    }
    return _CommonCallback15(blocked, (PyObject*)m_clientData, funcobj, number, argFlags);
}


wxPGVariantAndBool PyEnumProperty::PyStringToValue(const wxString& text, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_StringToValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_StringToValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_result = wxEnumProperty::StringToValue(vab.m_value, text, argFlags);
            if ( vab.m_result )
                vab.m_valueValid = true;
            return vab;
        }
    }
    return _CommonCallback16(blocked, (PyObject*)m_clientData, funcobj, text, argFlags);
}


wxPGVariantAndBool PyEnumProperty::PyValidateValue(const wxVariant& value, wxPGValidationInfo& validationInfo) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ValidateValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ValidateValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_value = value;
            vab.m_valueValid = true;
            vab.m_result = wxEnumProperty::ValidateValue(vab.m_value, validationInfo);
            return vab;
        }
    }
    return _CommonCallback17(blocked, (PyObject*)m_clientData, funcobj, value, validationInfo);
}


void PyEnumProperty::RefreshChildren()
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_RefreshChildren_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_RefreshChildren_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxEnumProperty::RefreshChildren();
        return;
    }
    _CommonCallback12(blocked, (PyObject*)m_clientData, funcobj);
}


wxString PyEnumProperty::ValueToString(wxVariant& value, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ValueToString_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ValueToString_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxEnumProperty::ValueToString(value, argFlags);
    }
    return _CommonCallback18(blocked, (PyObject*)m_clientData, funcobj, value, argFlags);
}


class PyArrayStringProperty : public wxArrayStringProperty {
public:
        PyArrayStringProperty( const wxString& label = (*wxPGProperty::sm_wxPG_LABEL),
                           const wxString& name = (*wxPGProperty::sm_wxPG_LABEL),
                           const wxArrayString& value = wxArrayString() );
    virtual ~PyArrayStringProperty();
    void _SetSelf(PyObject *self);
    virtual const wxPGEditor* DoGetEditorClass() const;
    virtual bool ValidateValue(wxVariant& value, wxPGValidationInfo& validationInfo) const;
    virtual bool StringToValue(wxVariant& variant, const wxString& text, int argFlags) const;
    virtual bool IntToValue(wxVariant& variant, int number, int argFlags) const;
    virtual wxVariant ChildChanged( wxVariant& thisValue,
                                    int childIndex,
                                    wxVariant& childValue ) const;
    virtual void ConvertArrayToString(const wxArrayString& arr,
                                      wxString* pString,
                                      const wxUniChar& delimiter) const;
    virtual wxPGArrayEditorDialog* CreateEditorDialog();
    virtual wxVariant DoGetAttribute( const wxString& name ) const;
    virtual wxValidator* DoGetValidator () const;
    virtual wxVariant DoGetValue() const;
    virtual bool DoSetAttribute( const wxString& name, wxVariant& value );
    virtual void GenerateValueAsString();
    virtual wxPGCellRenderer* GetCellRenderer( int column ) const;
    virtual int GetChoiceSelection() const;
    virtual wxPGEditorDialogAdapter* GetEditorDialog() const;
    virtual wxString GetValueAsString( int argFlags = 0 ) const;
    virtual bool OnButtonClick( wxPropertyGrid* propgrid,
                                wxWindow* primary,
                                const wxChar* cbt );
    virtual void OnCustomPaint( wxDC& dc,
                                const wxRect& rect,
                                wxPGPaintData& paintdata );
    virtual bool OnCustomStringEdit( wxWindow* parent, wxString& value );
    virtual bool OnEvent( wxPropertyGrid* propgrid,
                          wxWindow* primary, wxEvent& event );
    virtual wxSize OnMeasureImage( int item = -1 ) const;
    virtual void OnSetValue();
    virtual void OnValidationFailure( wxVariant& pendingValue );
    virtual wxString PyGetEditor() const;
    virtual wxPGVariantAndBool PyIntToValue( int number, int argFlags ) const;
    virtual wxPGVariantAndBool PyStringToValue( const wxString& text, int argFlags ) const;
    virtual wxPGVariantAndBool PyValidateValue( const wxVariant& value, wxPGValidationInfo& validationInfo ) const;
    virtual void RefreshChildren();
    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
private:
    void Init() { if ( !gs_funcNamesInitialized ) _InitFuncNames(); }
};

static PyObject* gs_PyArrayStringProperty_pyClass = NULL;


PyArrayStringProperty::PyArrayStringProperty(const wxString& label, const wxString& name, const wxArrayString& value)
    : wxArrayStringProperty(label, name, value)
{
    Init();
}

PyArrayStringProperty::~PyArrayStringProperty()
{
    if (m_clientData) { _deleteOwningObject(m_clientData); m_clientData = NULL; }
}

void PyArrayStringProperty::_SetSelf(PyObject *self)
{
    if ( !gs_PyArrayStringProperty_pyClass )
    {
        gs_PyArrayStringProperty_pyClass = PyObject_GetAttr(self, gs___class___Name);
        Py_DECREF(gs_PyArrayStringProperty_pyClass);
    }
    if ( !m_clientData ) {
        m_clientData = self;
        Py_INCREF(self);
    }
}

const wxPGEditor* PyArrayStringProperty::DoGetEditorClass() const
{
    return wxPropertyGridInterface::GetEditorByName(PyGetEditor());
}

bool PyArrayStringProperty::ValidateValue(wxVariant& value, wxPGValidationInfo& validationInfo) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyValidateValue(value, validationInfo);
        if ( vab.m_valueValid )
            value = vab.m_value;
        return vab.m_result;
    }
    return wxArrayStringProperty::ValidateValue(value, validationInfo);
}

bool PyArrayStringProperty::StringToValue(wxVariant& variant, const wxString& text, int argFlags) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyStringToValue(text, argFlags);
        if ( vab.m_valueValid )
            variant = vab.m_value;
        return vab.m_result;
    }
    return wxArrayStringProperty::StringToValue(variant, text, argFlags);
}

bool PyArrayStringProperty::IntToValue(wxVariant& variant, int number, int argFlags) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyIntToValue(number, argFlags);
        if ( vab.m_valueValid )
            variant = vab.m_value;
        return vab.m_result;
    }
    return wxArrayStringProperty::IntToValue(variant, number, argFlags);
}


wxVariant PyArrayStringProperty::ChildChanged(wxVariant& thisValue, int childIndex, wxVariant& childValue) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ChildChanged_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ChildChanged_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxArrayStringProperty::ChildChanged(thisValue, childIndex, childValue);
    }
    return _CommonCallback0(blocked, (PyObject*)m_clientData, funcobj, thisValue, childIndex, childValue);
}


void PyArrayStringProperty::ConvertArrayToString(const wxArrayString& arr, wxString* pString, const wxUniChar& delimiter) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ConvertArrayToString_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ConvertArrayToString_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxArrayStringProperty::ConvertArrayToString(arr, pString, delimiter);
        return;
    }
    PyObject* res;
    PyObject* py_arr;
    py_arr = wxArrayString2PyList_helper(*(&arr));

    PyObject* py_pString;
    #if wxUSE_UNICODE
        py_pString = PyUnicode_FromWideChar(pString->c_str(), pString->Len());
    #else
        py_pString = PyString_FromStringAndSize(pString->c_str(), pString->Len());
    #endif

    PyObject* py_delimiter;
    py_delimiter = SWIG_NewPointerObj((void*)&delimiter, SWIGTYPE_p_wxUniChar, 0);
    res = PyObject_CallFunctionObjArgs(funcobj, ((PyObject*)m_clientData), py_arr, py_pString, py_delimiter, NULL);
    Py_DECREF(funcobj);
    Py_DECREF(py_delimiter);
    Py_DECREF(py_pString);
    Py_DECREF(py_arr);
    if (PyErr_Occurred()) SWIG_fail;
    {
    Py_DECREF(res);
    }
  fail:
    wxPyEndBlockThreads(blocked);
}


wxPGArrayEditorDialog* PyArrayStringProperty::CreateEditorDialog()
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_CreateEditorDialog_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_CreateEditorDialog_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxArrayStringProperty::CreateEditorDialog();
    }
    PyObject* res;
    res = PyObject_CallFunctionObjArgs(funcobj, ((PyObject*)m_clientData), NULL);
    Py_DECREF(funcobj);
    if (PyErr_Occurred()) SWIG_fail;
    {
    wxPGArrayEditorDialog* retval;
    if ( !SWIG_IsOK(SWIG_ConvertPtr(res, (void**)&(retval), SWIGTYPE_p_wxPGArrayEditorDialog, 0)) ) {
        PyErr_SetString(PyExc_TypeError,"expected wxPGArrayEditorDialog");
        SWIG_fail;
    }
    PyObject_SetAttrString(res, "thisown", Py_False);
    Py_DECREF(res);
    wxPyEndBlockThreads(blocked);
    return retval;
    }
  fail:
    if ( PyErr_Occurred() ) PyErr_Print();
    wxPyEndBlockThreads(blocked);
    return NULL;
}


wxVariant PyArrayStringProperty::DoGetAttribute(const wxString& name) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetAttribute_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetAttribute_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxArrayStringProperty::DoGetAttribute(name);
    }
    return _CommonCallback1(blocked, (PyObject*)m_clientData, funcobj, name);
}


wxValidator* PyArrayStringProperty::DoGetValidator() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetValidator_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetValidator_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxArrayStringProperty::DoGetValidator();
    }
    return _CommonCallback2(blocked, (PyObject*)m_clientData, funcobj);
}


wxVariant PyArrayStringProperty::DoGetValue() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxArrayStringProperty::DoGetValue();
    }
    return _CommonCallback3(blocked, (PyObject*)m_clientData, funcobj);
}


bool PyArrayStringProperty::DoSetAttribute(const wxString& name, wxVariant& value)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoSetAttribute_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoSetAttribute_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxArrayStringProperty::DoSetAttribute(name, value);
    }
    return _CommonCallback4(blocked, (PyObject*)m_clientData, funcobj, name, value);
}


void PyArrayStringProperty::GenerateValueAsString()
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GenerateValueAsString_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GenerateValueAsString_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxArrayStringProperty::GenerateValueAsString();
        return;
    }
    _CommonCallback12(blocked, (PyObject*)m_clientData, funcobj);
}


wxPGCellRenderer* PyArrayStringProperty::GetCellRenderer(int column) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetCellRenderer_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetCellRenderer_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxArrayStringProperty::GetCellRenderer(column);
    }
    return _CommonCallback5(blocked, (PyObject*)m_clientData, funcobj, column);
}


int PyArrayStringProperty::GetChoiceSelection() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetChoiceSelection_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetChoiceSelection_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxArrayStringProperty::GetChoiceSelection();
    }
    return _CommonCallback6(blocked, (PyObject*)m_clientData, funcobj);
}


wxPGEditorDialogAdapter* PyArrayStringProperty::GetEditorDialog() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetEditorDialog_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetEditorDialog_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxArrayStringProperty::GetEditorDialog();
    }
    return _CommonCallback7(blocked, (PyObject*)m_clientData, funcobj);
}


wxString PyArrayStringProperty::GetValueAsString(int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetValueAsString_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetValueAsString_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxArrayStringProperty::GetValueAsString(argFlags);
    }
    return _CommonCallback8(blocked, (PyObject*)m_clientData, funcobj, argFlags);
}


bool PyArrayStringProperty::OnButtonClick(wxPropertyGrid* propgrid, wxWindow* primary, const wxChar* cbt)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnButtonClick_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnButtonClick_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxArrayStringProperty::OnButtonClick(propgrid, primary, cbt);
    }
    PyObject* res;
    PyObject* py_propgrid;
    py_propgrid = SWIG_NewPointerObj((void*)propgrid, SWIGTYPE_p_wxPropertyGrid, 0);
    PyObject* py_primary;
    py_primary = wxPyMake_wxObject(primary, (bool)0);

    PyObject* py_cbt;
    #if wxUSE_UNICODE
        py_cbt = PyUnicode_FromWideChar(cbt, wxStrlen(cbt));
    #else
        py_cbt = PyString_FromStringAndSize(cbt, wxStrlen(cbt));
    #endif

    res = PyObject_CallFunctionObjArgs(funcobj, ((PyObject*)m_clientData), py_propgrid, py_primary, py_cbt, NULL);
    Py_DECREF(funcobj);
    Py_DECREF(py_cbt);
    Py_DECREF(py_primary);
    Py_DECREF(py_propgrid);
    if (PyErr_Occurred()) SWIG_fail;
    {
    bool retval;
        if ( !SWIG_IsOK(SWIG_AsVal_bool(res, &retval)) ) {
        PyErr_SetString(PyExc_TypeError,"expected bool");
        SWIG_fail;
    }
    Py_DECREF(res);
    wxPyEndBlockThreads(blocked);
    return retval;
    }
  fail:
    if ( PyErr_Occurred() ) PyErr_Print();
    wxPyEndBlockThreads(blocked);
    return false;
}


void PyArrayStringProperty::OnCustomPaint(wxDC& dc, const wxRect& rect, wxPGPaintData& paintdata)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnCustomPaint_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnCustomPaint_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxArrayStringProperty::OnCustomPaint(dc, rect, paintdata);
        return;
    }
    _CommonCallback9(blocked, (PyObject*)m_clientData, funcobj, dc, rect, paintdata);
}


bool PyArrayStringProperty::OnCustomStringEdit(wxWindow* parent, wxString& value)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnCustomStringEdit_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnCustomStringEdit_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxArrayStringProperty::OnCustomStringEdit(parent, value);
    }
    PyObject* res;
    PyObject* py_parent;
    py_parent = wxPyMake_wxObject(parent, (bool)0);

    PyObject* py_value;
    #if wxUSE_UNICODE
        py_value = PyUnicode_FromWideChar((&value)->c_str(), (&value)->Len());
    #else
        py_value = PyString_FromStringAndSize((&value)->c_str(), (&value)->Len());
    #endif

    res = PyObject_CallFunctionObjArgs(funcobj, ((PyObject*)m_clientData), py_parent, py_value, NULL);
    Py_DECREF(funcobj);
    Py_DECREF(py_value);
    Py_DECREF(py_parent);
    if (PyErr_Occurred()) SWIG_fail;
    {
    bool retval;
        if ( !SWIG_IsOK(SWIG_AsVal_bool(res, &retval)) ) {
        PyErr_SetString(PyExc_TypeError,"expected bool");
        SWIG_fail;
    }
    Py_DECREF(res);
    wxPyEndBlockThreads(blocked);
    return retval;
    }
  fail:
    if ( PyErr_Occurred() ) PyErr_Print();
    wxPyEndBlockThreads(blocked);
    return false;
}


bool PyArrayStringProperty::OnEvent(wxPropertyGrid* propgrid, wxWindow* primary, wxEvent& event)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnEvent_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnEvent_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxArrayStringProperty::OnEvent(propgrid, primary, event);
    }
    return _CommonCallback10(blocked, (PyObject*)m_clientData, funcobj, propgrid, primary, event);
}


wxSize PyArrayStringProperty::OnMeasureImage(int item) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnMeasureImage_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnMeasureImage_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxArrayStringProperty::OnMeasureImage(item);
    }
    return _CommonCallback11(blocked, (PyObject*)m_clientData, funcobj, item);
}


void PyArrayStringProperty::OnSetValue()
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnSetValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnSetValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxArrayStringProperty::OnSetValue();
        return;
    }
    _CommonCallback12(blocked, (PyObject*)m_clientData, funcobj);
}


void PyArrayStringProperty::OnValidationFailure(wxVariant& pendingValue)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnValidationFailure_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnValidationFailure_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxArrayStringProperty::OnValidationFailure(pendingValue);
        return;
    }
    _CommonCallback13(blocked, (PyObject*)m_clientData, funcobj, pendingValue);
}


wxString PyArrayStringProperty::PyGetEditor() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetEditor_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetEditor_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            return wxT("TextCtrl");
        }
    }
    return _CommonCallback14(blocked, (PyObject*)m_clientData, funcobj);
}


wxPGVariantAndBool PyArrayStringProperty::PyIntToValue(int number, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_IntToValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_IntToValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_result = wxArrayStringProperty::IntToValue(vab.m_value, number, argFlags);
            if ( vab.m_result )
                vab.m_valueValid = true;
            return vab;
        }
    }
    return _CommonCallback15(blocked, (PyObject*)m_clientData, funcobj, number, argFlags);
}


wxPGVariantAndBool PyArrayStringProperty::PyStringToValue(const wxString& text, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_StringToValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_StringToValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_result = wxArrayStringProperty::StringToValue(vab.m_value, text, argFlags);
            if ( vab.m_result )
                vab.m_valueValid = true;
            return vab;
        }
    }
    return _CommonCallback16(blocked, (PyObject*)m_clientData, funcobj, text, argFlags);
}


wxPGVariantAndBool PyArrayStringProperty::PyValidateValue(const wxVariant& value, wxPGValidationInfo& validationInfo) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ValidateValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ValidateValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_value = value;
            vab.m_valueValid = true;
            vab.m_result = wxArrayStringProperty::ValidateValue(vab.m_value, validationInfo);
            return vab;
        }
    }
    return _CommonCallback17(blocked, (PyObject*)m_clientData, funcobj, value, validationInfo);
}


void PyArrayStringProperty::RefreshChildren()
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_RefreshChildren_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_RefreshChildren_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxArrayStringProperty::RefreshChildren();
        return;
    }
    _CommonCallback12(blocked, (PyObject*)m_clientData, funcobj);
}


wxString PyArrayStringProperty::ValueToString(wxVariant& value, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ValueToString_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ValueToString_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxArrayStringProperty::ValueToString(value, argFlags);
    }
    return _CommonCallback18(blocked, (PyObject*)m_clientData, funcobj, value, argFlags);
}


class PyComboBoxEditor : public wxPGComboBoxEditor {
public:
        PyComboBoxEditor();
    virtual ~PyComboBoxEditor();
    void _SetSelf(PyObject *self);
    virtual bool GetValueFromControl(wxVariant& value, wxPGProperty* property, wxWindow* ctrl) const;
    virtual bool CanContainCustomImage() const;
    virtual wxPGWindowList CreateControls(wxPropertyGrid* propgrid,
                                          wxPGProperty* property,
                                          const wxPoint& pos,
                                          const wxSize& size) const;
    virtual void DeleteItem( wxWindow* ctrl, int index ) const;
    virtual void DrawValue( wxDC& dc,
                            const wxRect& rect,
                            wxPGProperty* property,
                            const wxString& text ) const;
    virtual wxString GetName() const;
    virtual int InsertItem( wxWindow* ctrl,
                            const wxString& label,
                            int index ) const;
    virtual bool OnEvent( wxPropertyGrid* propgrid, wxPGProperty* property,
        wxWindow* ctrl, wxEvent& event ) const;
    virtual void OnFocus( wxPGProperty* property, wxWindow* wnd ) const;
    virtual wxPGVariantAndBool PyGetValueFromControl( wxPGProperty* property, wxWindow* ctrl ) const;
    virtual void SetControlAppearance( wxPropertyGrid* pg,
                                       wxPGProperty* property,
                                       wxWindow* ctrl,
                                       const wxPGCell& appearance,
                                       const wxPGCell& oldAppearance,
                                       bool unspecified ) const;
    virtual void SetControlIntValue( wxPGProperty* property,
                                     wxWindow* ctrl,
                                     int value ) const;
    virtual void SetControlStringValue( wxPGProperty* property,
                                        wxWindow* ctrl,
                                        const wxString& txt ) const;
    virtual void SetValueToUnspecified( wxPGProperty* property,
                                        wxWindow* ctrl ) const;
    virtual void UpdateControl( wxPGProperty* property, wxWindow* ctrl ) const;
private:
    void Init() { if ( !gs_funcNamesInitialized ) _InitFuncNames(); }
};

static PyObject* gs_PyComboBoxEditor_pyClass = NULL;


PyComboBoxEditor::PyComboBoxEditor()
    : wxPGComboBoxEditor()
{
    Init();
}

PyComboBoxEditor::~PyComboBoxEditor()
{
    if (m_clientData) { _deleteOwningObject(m_clientData); m_clientData = NULL; }
}

void PyComboBoxEditor::_SetSelf(PyObject *self)
{
    if ( !gs_PyComboBoxEditor_pyClass )
    {
        gs_PyComboBoxEditor_pyClass = PyObject_GetAttr(self, gs___class___Name);
        Py_DECREF(gs_PyComboBoxEditor_pyClass);
    }
    if ( !m_clientData ) {
        m_clientData = self;
        Py_INCREF(self);
    }
}

bool PyComboBoxEditor::GetValueFromControl(wxVariant& value, wxPGProperty* property, wxWindow* ctrl) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyGetValueFromControl(property, ctrl);
        if ( vab.m_valueValid )
            value = vab.m_value;
        return vab.m_result;
    }
    return wxPGComboBoxEditor::GetValueFromControl(value, property, ctrl);
}


bool PyComboBoxEditor::CanContainCustomImage() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_CanContainCustomImage_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_CanContainCustomImage_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxPGComboBoxEditor::CanContainCustomImage();
    }
    return _CommonCallback25(blocked, (PyObject*)m_clientData, funcobj);
}


wxPGWindowList PyComboBoxEditor::CreateControls(wxPropertyGrid* propgrid, wxPGProperty* property, const wxPoint& pos, const wxSize& size) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_CreateControls_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_CreateControls_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxPGComboBoxEditor::CreateControls(propgrid, property, pos, size);
    }
    return _CommonCallback26(blocked, (PyObject*)m_clientData, funcobj, propgrid, property, pos, size);
}


void PyComboBoxEditor::DeleteItem(wxWindow* ctrl, int index) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DeleteItem_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DeleteItem_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxPGComboBoxEditor::DeleteItem(ctrl, index);
        return;
    }
    _CommonCallback27(blocked, (PyObject*)m_clientData, funcobj, ctrl, index);
}


void PyComboBoxEditor::DrawValue(wxDC& dc, const wxRect& rect, wxPGProperty* property, const wxString& text) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DrawValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DrawValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxPGComboBoxEditor::DrawValue(dc, rect, property, text);
        return;
    }
    _CommonCallback28(blocked, (PyObject*)m_clientData, funcobj, dc, rect, property, text);
}


wxString PyComboBoxEditor::GetName() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetName_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetName_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxPGComboBoxEditor::GetName();
    }
    return _CommonCallback14(blocked, (PyObject*)m_clientData, funcobj);
}


int PyComboBoxEditor::InsertItem(wxWindow* ctrl, const wxString& label, int index) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_InsertItem_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_InsertItem_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxPGComboBoxEditor::InsertItem(ctrl, label, index);
    }
    return _CommonCallback29(blocked, (PyObject*)m_clientData, funcobj, ctrl, label, index);
}


bool PyComboBoxEditor::OnEvent(wxPropertyGrid* propgrid, wxPGProperty* property, wxWindow* ctrl, wxEvent& event) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnEvent_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnEvent_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxPGComboBoxEditor::OnEvent(propgrid, property, ctrl, event);
    }
    return _CommonCallback30(blocked, (PyObject*)m_clientData, funcobj, propgrid, property, ctrl, event);
}


void PyComboBoxEditor::OnFocus(wxPGProperty* property, wxWindow* wnd) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnFocus_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnFocus_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxPGComboBoxEditor::OnFocus(property, wnd);
        return;
    }
    _CommonCallback31(blocked, (PyObject*)m_clientData, funcobj, property, wnd);
}


wxPGVariantAndBool PyComboBoxEditor::PyGetValueFromControl(wxPGProperty* property, wxWindow* ctrl) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetValueFromControl_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetValueFromControl_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_result = wxPGComboBoxEditor::GetValueFromControl(vab.m_value, property, ctrl);
            if ( vab.m_result )
                vab.m_valueValid = true;
            return vab;
        }
    }
    return _CommonCallback32(blocked, (PyObject*)m_clientData, funcobj, property, ctrl);
}


void PyComboBoxEditor::SetControlAppearance(wxPropertyGrid* pg, wxPGProperty* property, wxWindow* ctrl, const wxPGCell& appearance, const wxPGCell& oldAppearance, bool unspecified) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_SetControlAppearance_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_SetControlAppearance_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxPGComboBoxEditor::SetControlAppearance(pg, property, ctrl, appearance, oldAppearance, unspecified);
        return;
    }
    _CommonCallback33(blocked, (PyObject*)m_clientData, funcobj, pg, property, ctrl, appearance, oldAppearance, unspecified);
}


void PyComboBoxEditor::SetControlIntValue(wxPGProperty* property, wxWindow* ctrl, int value) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_SetControlIntValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_SetControlIntValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxPGComboBoxEditor::SetControlIntValue(property, ctrl, value);
        return;
    }
    _CommonCallback34(blocked, (PyObject*)m_clientData, funcobj, property, ctrl, value);
}


void PyComboBoxEditor::SetControlStringValue(wxPGProperty* property, wxWindow* ctrl, const wxString& txt) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_SetControlStringValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_SetControlStringValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxPGComboBoxEditor::SetControlStringValue(property, ctrl, txt);
        return;
    }
    _CommonCallback35(blocked, (PyObject*)m_clientData, funcobj, property, ctrl, txt);
}


void PyComboBoxEditor::SetValueToUnspecified(wxPGProperty* property, wxWindow* ctrl) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_SetValueToUnspecified_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_SetValueToUnspecified_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxPGComboBoxEditor::SetValueToUnspecified(property, ctrl);
        return;
    }
    _CommonCallback31(blocked, (PyObject*)m_clientData, funcobj, property, ctrl);
}


void PyComboBoxEditor::UpdateControl(wxPGProperty* property, wxWindow* ctrl) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_UpdateControl_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_UpdateControl_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxPGComboBoxEditor::UpdateControl(property, ctrl);
        return;
    }
    _CommonCallback31(blocked, (PyObject*)m_clientData, funcobj, property, ctrl);
}


class PyFileDialogAdapter : public wxPGFileDialogAdapter {
public:
        PyFileDialogAdapter();
    virtual ~PyFileDialogAdapter();
    void _SetSelf(PyObject *self);
    virtual bool DoShowDialog( wxPropertyGrid* propGrid,
                               wxPGProperty* property );
private:
    void Init() { if ( !gs_funcNamesInitialized ) _InitFuncNames(); }
};

static PyObject* gs_PyFileDialogAdapter_pyClass = NULL;


PyFileDialogAdapter::PyFileDialogAdapter()
    : wxPGFileDialogAdapter()
{
    Init();
}

PyFileDialogAdapter::~PyFileDialogAdapter()
{
    if (m_clientData) { _deleteOwningObject(m_clientData); m_clientData = NULL; }
}

void PyFileDialogAdapter::_SetSelf(PyObject *self)
{
    if ( !gs_PyFileDialogAdapter_pyClass )
    {
        gs_PyFileDialogAdapter_pyClass = PyObject_GetAttr(self, gs___class___Name);
        Py_DECREF(gs_PyFileDialogAdapter_pyClass);
    }
    if ( !m_clientData ) {
        m_clientData = self;
        Py_INCREF(self);
    }
}


bool PyFileDialogAdapter::DoShowDialog(wxPropertyGrid* propGrid, wxPGProperty* property)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoShowDialog_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoShowDialog_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxPGFileDialogAdapter::DoShowDialog(propGrid, property);
    }
    return _CommonCallback19(blocked, (PyObject*)m_clientData, funcobj, propGrid, property);
}


class PyStringProperty : public wxStringProperty {
public:
        PyStringProperty( const wxString& label = (*wxPGProperty::sm_wxPG_LABEL),
                      const wxString& name = (*wxPGProperty::sm_wxPG_LABEL),
                      const wxString& value = wxEmptyString );
    virtual ~PyStringProperty();
    void _SetSelf(PyObject *self);
    virtual const wxPGEditor* DoGetEditorClass() const;
    virtual bool ValidateValue(wxVariant& value, wxPGValidationInfo& validationInfo) const;
    virtual bool StringToValue(wxVariant& variant, const wxString& text, int argFlags) const;
    virtual bool IntToValue(wxVariant& variant, int number, int argFlags) const;
    virtual wxVariant ChildChanged( wxVariant& thisValue,
                                    int childIndex,
                                    wxVariant& childValue ) const;
    virtual wxVariant DoGetAttribute( const wxString& name ) const;
    virtual wxValidator* DoGetValidator () const;
    virtual wxVariant DoGetValue() const;
    virtual bool DoSetAttribute( const wxString& name, wxVariant& value );
    virtual wxPGCellRenderer* GetCellRenderer( int column ) const;
    virtual int GetChoiceSelection() const;
    virtual wxPGEditorDialogAdapter* GetEditorDialog() const;
    virtual wxString GetValueAsString( int argFlags = 0 ) const;
    virtual void OnCustomPaint( wxDC& dc,
                                const wxRect& rect,
                                wxPGPaintData& paintdata );
    virtual bool OnEvent( wxPropertyGrid* propgrid,
                          wxWindow* wnd_primary,
                          wxEvent& event );
    virtual wxSize OnMeasureImage( int item = -1 ) const;
    virtual void OnSetValue();
    virtual void OnValidationFailure( wxVariant& pendingValue );
    virtual wxString PyGetEditor() const;
    virtual wxPGVariantAndBool PyIntToValue( int number, int argFlags ) const;
    virtual wxPGVariantAndBool PyStringToValue( const wxString& text, int argFlags ) const;
    virtual wxPGVariantAndBool PyValidateValue( const wxVariant& value, wxPGValidationInfo& validationInfo ) const;
    virtual void RefreshChildren();
    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
private:
    void Init() { if ( !gs_funcNamesInitialized ) _InitFuncNames(); }
};

static PyObject* gs_PyStringProperty_pyClass = NULL;


PyStringProperty::PyStringProperty(const wxString& label, const wxString& name, const wxString& value)
    : wxStringProperty(label, name, value)
{
    Init();
}

PyStringProperty::~PyStringProperty()
{
    if (m_clientData) { _deleteOwningObject(m_clientData); m_clientData = NULL; }
}

void PyStringProperty::_SetSelf(PyObject *self)
{
    if ( !gs_PyStringProperty_pyClass )
    {
        gs_PyStringProperty_pyClass = PyObject_GetAttr(self, gs___class___Name);
        Py_DECREF(gs_PyStringProperty_pyClass);
    }
    if ( !m_clientData ) {
        m_clientData = self;
        Py_INCREF(self);
    }
}

const wxPGEditor* PyStringProperty::DoGetEditorClass() const
{
    return wxPropertyGridInterface::GetEditorByName(PyGetEditor());
}

bool PyStringProperty::ValidateValue(wxVariant& value, wxPGValidationInfo& validationInfo) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyValidateValue(value, validationInfo);
        if ( vab.m_valueValid )
            value = vab.m_value;
        return vab.m_result;
    }
    return wxStringProperty::ValidateValue(value, validationInfo);
}

bool PyStringProperty::StringToValue(wxVariant& variant, const wxString& text, int argFlags) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyStringToValue(text, argFlags);
        if ( vab.m_valueValid )
            variant = vab.m_value;
        return vab.m_result;
    }
    return wxStringProperty::StringToValue(variant, text, argFlags);
}

bool PyStringProperty::IntToValue(wxVariant& variant, int number, int argFlags) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyIntToValue(number, argFlags);
        if ( vab.m_valueValid )
            variant = vab.m_value;
        return vab.m_result;
    }
    return wxStringProperty::IntToValue(variant, number, argFlags);
}


wxVariant PyStringProperty::ChildChanged(wxVariant& thisValue, int childIndex, wxVariant& childValue) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ChildChanged_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ChildChanged_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxStringProperty::ChildChanged(thisValue, childIndex, childValue);
    }
    return _CommonCallback0(blocked, (PyObject*)m_clientData, funcobj, thisValue, childIndex, childValue);
}


wxVariant PyStringProperty::DoGetAttribute(const wxString& name) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetAttribute_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetAttribute_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxStringProperty::DoGetAttribute(name);
    }
    return _CommonCallback1(blocked, (PyObject*)m_clientData, funcobj, name);
}


wxValidator* PyStringProperty::DoGetValidator() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetValidator_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetValidator_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxStringProperty::DoGetValidator();
    }
    return _CommonCallback2(blocked, (PyObject*)m_clientData, funcobj);
}


wxVariant PyStringProperty::DoGetValue() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxStringProperty::DoGetValue();
    }
    return _CommonCallback3(blocked, (PyObject*)m_clientData, funcobj);
}


bool PyStringProperty::DoSetAttribute(const wxString& name, wxVariant& value)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoSetAttribute_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoSetAttribute_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxStringProperty::DoSetAttribute(name, value);
    }
    return _CommonCallback4(blocked, (PyObject*)m_clientData, funcobj, name, value);
}


wxPGCellRenderer* PyStringProperty::GetCellRenderer(int column) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetCellRenderer_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetCellRenderer_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxStringProperty::GetCellRenderer(column);
    }
    return _CommonCallback5(blocked, (PyObject*)m_clientData, funcobj, column);
}


int PyStringProperty::GetChoiceSelection() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetChoiceSelection_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetChoiceSelection_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxStringProperty::GetChoiceSelection();
    }
    return _CommonCallback6(blocked, (PyObject*)m_clientData, funcobj);
}


wxPGEditorDialogAdapter* PyStringProperty::GetEditorDialog() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetEditorDialog_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetEditorDialog_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxStringProperty::GetEditorDialog();
    }
    return _CommonCallback7(blocked, (PyObject*)m_clientData, funcobj);
}


wxString PyStringProperty::GetValueAsString(int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetValueAsString_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetValueAsString_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxStringProperty::GetValueAsString(argFlags);
    }
    return _CommonCallback8(blocked, (PyObject*)m_clientData, funcobj, argFlags);
}


void PyStringProperty::OnCustomPaint(wxDC& dc, const wxRect& rect, wxPGPaintData& paintdata)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnCustomPaint_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnCustomPaint_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxStringProperty::OnCustomPaint(dc, rect, paintdata);
        return;
    }
    _CommonCallback9(blocked, (PyObject*)m_clientData, funcobj, dc, rect, paintdata);
}


bool PyStringProperty::OnEvent(wxPropertyGrid* propgrid, wxWindow* wnd_primary, wxEvent& event)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnEvent_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnEvent_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxStringProperty::OnEvent(propgrid, wnd_primary, event);
    }
    return _CommonCallback10(blocked, (PyObject*)m_clientData, funcobj, propgrid, wnd_primary, event);
}


wxSize PyStringProperty::OnMeasureImage(int item) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnMeasureImage_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnMeasureImage_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxStringProperty::OnMeasureImage(item);
    }
    return _CommonCallback11(blocked, (PyObject*)m_clientData, funcobj, item);
}


void PyStringProperty::OnSetValue()
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnSetValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnSetValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxStringProperty::OnSetValue();
        return;
    }
    _CommonCallback12(blocked, (PyObject*)m_clientData, funcobj);
}


void PyStringProperty::OnValidationFailure(wxVariant& pendingValue)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnValidationFailure_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnValidationFailure_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxStringProperty::OnValidationFailure(pendingValue);
        return;
    }
    _CommonCallback13(blocked, (PyObject*)m_clientData, funcobj, pendingValue);
}


wxString PyStringProperty::PyGetEditor() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetEditor_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetEditor_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            return wxT("TextCtrl");
        }
    }
    return _CommonCallback14(blocked, (PyObject*)m_clientData, funcobj);
}


wxPGVariantAndBool PyStringProperty::PyIntToValue(int number, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_IntToValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_IntToValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_result = wxStringProperty::IntToValue(vab.m_value, number, argFlags);
            if ( vab.m_result )
                vab.m_valueValid = true;
            return vab;
        }
    }
    return _CommonCallback15(blocked, (PyObject*)m_clientData, funcobj, number, argFlags);
}


wxPGVariantAndBool PyStringProperty::PyStringToValue(const wxString& text, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_StringToValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_StringToValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_result = wxStringProperty::StringToValue(vab.m_value, text, argFlags);
            if ( vab.m_result )
                vab.m_valueValid = true;
            return vab;
        }
    }
    return _CommonCallback16(blocked, (PyObject*)m_clientData, funcobj, text, argFlags);
}


wxPGVariantAndBool PyStringProperty::PyValidateValue(const wxVariant& value, wxPGValidationInfo& validationInfo) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ValidateValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ValidateValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_value = value;
            vab.m_valueValid = true;
            vab.m_result = wxStringProperty::ValidateValue(vab.m_value, validationInfo);
            return vab;
        }
    }
    return _CommonCallback17(blocked, (PyObject*)m_clientData, funcobj, value, validationInfo);
}


void PyStringProperty::RefreshChildren()
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_RefreshChildren_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_RefreshChildren_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxStringProperty::RefreshChildren();
        return;
    }
    _CommonCallback12(blocked, (PyObject*)m_clientData, funcobj);
}


wxString PyStringProperty::ValueToString(wxVariant& value, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ValueToString_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ValueToString_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxStringProperty::ValueToString(value, argFlags);
    }
    return _CommonCallback18(blocked, (PyObject*)m_clientData, funcobj, value, argFlags);
}


class PyLongStringDialogAdapter : public wxPGLongStringDialogAdapter {
public:
        PyLongStringDialogAdapter();
    virtual ~PyLongStringDialogAdapter();
    void _SetSelf(PyObject *self);
    virtual bool DoShowDialog( wxPropertyGrid* propGrid,
                               wxPGProperty* property );
private:
    void Init() { if ( !gs_funcNamesInitialized ) _InitFuncNames(); }
};

static PyObject* gs_PyLongStringDialogAdapter_pyClass = NULL;


PyLongStringDialogAdapter::PyLongStringDialogAdapter()
    : wxPGLongStringDialogAdapter()
{
    Init();
}

PyLongStringDialogAdapter::~PyLongStringDialogAdapter()
{
    if (m_clientData) { _deleteOwningObject(m_clientData); m_clientData = NULL; }
}

void PyLongStringDialogAdapter::_SetSelf(PyObject *self)
{
    if ( !gs_PyLongStringDialogAdapter_pyClass )
    {
        gs_PyLongStringDialogAdapter_pyClass = PyObject_GetAttr(self, gs___class___Name);
        Py_DECREF(gs_PyLongStringDialogAdapter_pyClass);
    }
    if ( !m_clientData ) {
        m_clientData = self;
        Py_INCREF(self);
    }
}


bool PyLongStringDialogAdapter::DoShowDialog(wxPropertyGrid* propGrid, wxPGProperty* property)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoShowDialog_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoShowDialog_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxPGLongStringDialogAdapter::DoShowDialog(propGrid, property);
    }
    return _CommonCallback19(blocked, (PyObject*)m_clientData, funcobj, propGrid, property);
}


class PyEditEnumProperty : public wxEditEnumProperty {
public:
        PyEditEnumProperty( const wxString& label,
                        const wxString& name,
                        const wxChar* const* labels,
                        const long* values,
                        const wxString& value );
    PyEditEnumProperty( const wxString& label = (*wxPGProperty::sm_wxPG_LABEL),
                        const wxString& name = (*wxPGProperty::sm_wxPG_LABEL),
                        const wxArrayString& labels = wxArrayString(),
                        const wxArrayInt& values = wxArrayInt(),
                        const wxString& value = wxEmptyString );
    PyEditEnumProperty( const wxString& label,
                        const wxString& name,
                        wxPGChoices& choices,
                        const wxString& value = wxEmptyString );
    PyEditEnumProperty( const wxString& label,
                        const wxString& name,
                        const wxChar* const* labels,
                        const long* values,
                        wxPGChoices* choicesCache,
                        const wxString& value );
    virtual ~PyEditEnumProperty();
    void _SetSelf(PyObject *self);
    virtual const wxPGEditor* DoGetEditorClass() const;
    virtual bool ValidateValue(wxVariant& value, wxPGValidationInfo& validationInfo) const;
    virtual bool StringToValue(wxVariant& variant, const wxString& text, int argFlags) const;
    virtual bool IntToValue(wxVariant& variant, int number, int argFlags) const;
    virtual wxVariant ChildChanged( wxVariant& thisValue,
                                    int childIndex,
                                    wxVariant& childValue ) const;
    virtual wxVariant DoGetAttribute( const wxString& name ) const;
    virtual wxValidator* DoGetValidator () const;
    virtual wxVariant DoGetValue() const;
    virtual bool DoSetAttribute( const wxString& name, wxVariant& value );
    virtual wxPGCellRenderer* GetCellRenderer( int column ) const;
    virtual int GetChoiceSelection() const;
    virtual wxPGEditorDialogAdapter* GetEditorDialog() const;
    virtual int GetIndexForValue( int value ) const;
    virtual wxString GetValueAsString( int argFlags = 0 ) const;
    virtual void OnCustomPaint( wxDC& dc,
                                const wxRect& rect,
                                wxPGPaintData& paintdata );
    virtual bool OnEvent( wxPropertyGrid* propgrid,
                          wxWindow* wnd_primary,
                          wxEvent& event );
    virtual wxSize OnMeasureImage( int item = -1 ) const;
    virtual void OnSetValue();
    virtual void OnValidationFailure( wxVariant& pendingValue );
    virtual wxString PyGetEditor() const;
    virtual wxPGVariantAndBool PyIntToValue( int number, int argFlags ) const;
    virtual wxPGVariantAndBool PyStringToValue( const wxString& text, int argFlags ) const;
    virtual wxPGVariantAndBool PyValidateValue( const wxVariant& value, wxPGValidationInfo& validationInfo ) const;
    virtual void RefreshChildren();
    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
private:
    void Init() { if ( !gs_funcNamesInitialized ) _InitFuncNames(); }
};

static PyObject* gs_PyEditEnumProperty_pyClass = NULL;


PyEditEnumProperty::PyEditEnumProperty(const wxString& label, const wxString& name, const wxChar* const* labels, const long* values, const wxString& value)
    : wxEditEnumProperty(label, name, labels, values, value)
{
    Init();
}

PyEditEnumProperty::PyEditEnumProperty(const wxString& label, const wxString& name, const wxArrayString& labels, const wxArrayInt& values, const wxString& value)
    : wxEditEnumProperty(label, name, labels, values, value)
{
    Init();
}

PyEditEnumProperty::PyEditEnumProperty(const wxString& label, const wxString& name, wxPGChoices& choices, const wxString& value)
    : wxEditEnumProperty(label, name, choices, value)
{
    Init();
}

PyEditEnumProperty::PyEditEnumProperty(const wxString& label, const wxString& name, const wxChar* const* labels, const long* values, wxPGChoices* choicesCache, const wxString& value)
    : wxEditEnumProperty(label, name, labels, values, choicesCache, value)
{
    Init();
}

PyEditEnumProperty::~PyEditEnumProperty()
{
    if (m_clientData) { _deleteOwningObject(m_clientData); m_clientData = NULL; }
}

void PyEditEnumProperty::_SetSelf(PyObject *self)
{
    if ( !gs_PyEditEnumProperty_pyClass )
    {
        gs_PyEditEnumProperty_pyClass = PyObject_GetAttr(self, gs___class___Name);
        Py_DECREF(gs_PyEditEnumProperty_pyClass);
    }
    if ( !m_clientData ) {
        m_clientData = self;
        Py_INCREF(self);
    }
}

const wxPGEditor* PyEditEnumProperty::DoGetEditorClass() const
{
    return wxPropertyGridInterface::GetEditorByName(PyGetEditor());
}

bool PyEditEnumProperty::ValidateValue(wxVariant& value, wxPGValidationInfo& validationInfo) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyValidateValue(value, validationInfo);
        if ( vab.m_valueValid )
            value = vab.m_value;
        return vab.m_result;
    }
    return wxEditEnumProperty::ValidateValue(value, validationInfo);
}

bool PyEditEnumProperty::StringToValue(wxVariant& variant, const wxString& text, int argFlags) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyStringToValue(text, argFlags);
        if ( vab.m_valueValid )
            variant = vab.m_value;
        return vab.m_result;
    }
    return wxEditEnumProperty::StringToValue(variant, text, argFlags);
}

bool PyEditEnumProperty::IntToValue(wxVariant& variant, int number, int argFlags) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyIntToValue(number, argFlags);
        if ( vab.m_valueValid )
            variant = vab.m_value;
        return vab.m_result;
    }
    return wxEditEnumProperty::IntToValue(variant, number, argFlags);
}


wxVariant PyEditEnumProperty::ChildChanged(wxVariant& thisValue, int childIndex, wxVariant& childValue) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ChildChanged_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ChildChanged_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxEditEnumProperty::ChildChanged(thisValue, childIndex, childValue);
    }
    return _CommonCallback0(blocked, (PyObject*)m_clientData, funcobj, thisValue, childIndex, childValue);
}


wxVariant PyEditEnumProperty::DoGetAttribute(const wxString& name) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetAttribute_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetAttribute_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxEditEnumProperty::DoGetAttribute(name);
    }
    return _CommonCallback1(blocked, (PyObject*)m_clientData, funcobj, name);
}


wxValidator* PyEditEnumProperty::DoGetValidator() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetValidator_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetValidator_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxEditEnumProperty::DoGetValidator();
    }
    return _CommonCallback2(blocked, (PyObject*)m_clientData, funcobj);
}


wxVariant PyEditEnumProperty::DoGetValue() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxEditEnumProperty::DoGetValue();
    }
    return _CommonCallback3(blocked, (PyObject*)m_clientData, funcobj);
}


bool PyEditEnumProperty::DoSetAttribute(const wxString& name, wxVariant& value)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoSetAttribute_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoSetAttribute_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxEditEnumProperty::DoSetAttribute(name, value);
    }
    return _CommonCallback4(blocked, (PyObject*)m_clientData, funcobj, name, value);
}


wxPGCellRenderer* PyEditEnumProperty::GetCellRenderer(int column) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetCellRenderer_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetCellRenderer_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxEditEnumProperty::GetCellRenderer(column);
    }
    return _CommonCallback5(blocked, (PyObject*)m_clientData, funcobj, column);
}


int PyEditEnumProperty::GetChoiceSelection() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetChoiceSelection_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetChoiceSelection_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxEditEnumProperty::GetChoiceSelection();
    }
    return _CommonCallback6(blocked, (PyObject*)m_clientData, funcobj);
}


wxPGEditorDialogAdapter* PyEditEnumProperty::GetEditorDialog() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetEditorDialog_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetEditorDialog_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxEditEnumProperty::GetEditorDialog();
    }
    return _CommonCallback7(blocked, (PyObject*)m_clientData, funcobj);
}


int PyEditEnumProperty::GetIndexForValue(int value) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetIndexForValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetIndexForValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxEditEnumProperty::GetIndexForValue(value);
    }
    return _CommonCallback20(blocked, (PyObject*)m_clientData, funcobj, value);
}


wxString PyEditEnumProperty::GetValueAsString(int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetValueAsString_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetValueAsString_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxEditEnumProperty::GetValueAsString(argFlags);
    }
    return _CommonCallback8(blocked, (PyObject*)m_clientData, funcobj, argFlags);
}


void PyEditEnumProperty::OnCustomPaint(wxDC& dc, const wxRect& rect, wxPGPaintData& paintdata)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnCustomPaint_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnCustomPaint_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxEditEnumProperty::OnCustomPaint(dc, rect, paintdata);
        return;
    }
    _CommonCallback9(blocked, (PyObject*)m_clientData, funcobj, dc, rect, paintdata);
}


bool PyEditEnumProperty::OnEvent(wxPropertyGrid* propgrid, wxWindow* wnd_primary, wxEvent& event)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnEvent_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnEvent_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxEditEnumProperty::OnEvent(propgrid, wnd_primary, event);
    }
    return _CommonCallback10(blocked, (PyObject*)m_clientData, funcobj, propgrid, wnd_primary, event);
}


wxSize PyEditEnumProperty::OnMeasureImage(int item) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnMeasureImage_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnMeasureImage_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxEditEnumProperty::OnMeasureImage(item);
    }
    return _CommonCallback11(blocked, (PyObject*)m_clientData, funcobj, item);
}


void PyEditEnumProperty::OnSetValue()
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnSetValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnSetValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxEditEnumProperty::OnSetValue();
        return;
    }
    _CommonCallback12(blocked, (PyObject*)m_clientData, funcobj);
}


void PyEditEnumProperty::OnValidationFailure(wxVariant& pendingValue)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnValidationFailure_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnValidationFailure_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxEditEnumProperty::OnValidationFailure(pendingValue);
        return;
    }
    _CommonCallback13(blocked, (PyObject*)m_clientData, funcobj, pendingValue);
}


wxString PyEditEnumProperty::PyGetEditor() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetEditor_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetEditor_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            return wxT("TextCtrl");
        }
    }
    return _CommonCallback14(blocked, (PyObject*)m_clientData, funcobj);
}


wxPGVariantAndBool PyEditEnumProperty::PyIntToValue(int number, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_IntToValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_IntToValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_result = wxEditEnumProperty::IntToValue(vab.m_value, number, argFlags);
            if ( vab.m_result )
                vab.m_valueValid = true;
            return vab;
        }
    }
    return _CommonCallback15(blocked, (PyObject*)m_clientData, funcobj, number, argFlags);
}


wxPGVariantAndBool PyEditEnumProperty::PyStringToValue(const wxString& text, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_StringToValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_StringToValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_result = wxEditEnumProperty::StringToValue(vab.m_value, text, argFlags);
            if ( vab.m_result )
                vab.m_valueValid = true;
            return vab;
        }
    }
    return _CommonCallback16(blocked, (PyObject*)m_clientData, funcobj, text, argFlags);
}


wxPGVariantAndBool PyEditEnumProperty::PyValidateValue(const wxVariant& value, wxPGValidationInfo& validationInfo) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ValidateValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ValidateValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_value = value;
            vab.m_valueValid = true;
            vab.m_result = wxEditEnumProperty::ValidateValue(vab.m_value, validationInfo);
            return vab;
        }
    }
    return _CommonCallback17(blocked, (PyObject*)m_clientData, funcobj, value, validationInfo);
}


void PyEditEnumProperty::RefreshChildren()
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_RefreshChildren_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_RefreshChildren_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxEditEnumProperty::RefreshChildren();
        return;
    }
    _CommonCallback12(blocked, (PyObject*)m_clientData, funcobj);
}


wxString PyEditEnumProperty::ValueToString(wxVariant& value, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ValueToString_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ValueToString_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxEditEnumProperty::ValueToString(value, argFlags);
    }
    return _CommonCallback18(blocked, (PyObject*)m_clientData, funcobj, value, argFlags);
}


class PyTextCtrlEditor : public wxPGTextCtrlEditor {
public:
        PyTextCtrlEditor();
    virtual ~PyTextCtrlEditor();
    void _SetSelf(PyObject *self);
    virtual bool GetValueFromControl(wxVariant& value, wxPGProperty* property, wxWindow* ctrl) const;
    virtual bool CanContainCustomImage() const;
    virtual wxPGWindowList CreateControls(wxPropertyGrid* propgrid,
                                          wxPGProperty* property,
                                          const wxPoint& pos,
                                          const wxSize& size) const;
    virtual void DeleteItem( wxWindow* ctrl, int index ) const;
    virtual void DrawValue( wxDC& dc,
                            const wxRect& rect,
                            wxPGProperty* property,
                            const wxString& text ) const;
    virtual wxString GetName() const;
    virtual int InsertItem( wxWindow* ctrl,
                            const wxString& label,
                            int index ) const;
    virtual bool OnEvent( wxPropertyGrid* propgrid,
                          wxPGProperty* property,
                          wxWindow* primaryCtrl,
                          wxEvent& event ) const;
    virtual void OnFocus( wxPGProperty* property, wxWindow* wnd ) const;
    virtual wxPGVariantAndBool PyGetValueFromControl( wxPGProperty* property, wxWindow* ctrl ) const;
    virtual void SetControlAppearance( wxPropertyGrid* pg,
                                       wxPGProperty* property,
                                       wxWindow* ctrl,
                                       const wxPGCell& appearance,
                                       const wxPGCell& oldAppearance,
                                       bool unspecified ) const;
    virtual void SetControlIntValue( wxPGProperty* property,
                                     wxWindow* ctrl,
                                     int value ) const;
    virtual void SetControlStringValue( wxPGProperty* property,
                                        wxWindow* ctrl,
                                        const wxString& txt ) const;
    virtual void SetValueToUnspecified( wxPGProperty* property,
                                        wxWindow* ctrl ) const;
    virtual void UpdateControl( wxPGProperty* property,
                                wxWindow* ctrl ) const;
private:
    void Init() { if ( !gs_funcNamesInitialized ) _InitFuncNames(); }
};

static PyObject* gs_PyTextCtrlEditor_pyClass = NULL;


PyTextCtrlEditor::PyTextCtrlEditor()
    : wxPGTextCtrlEditor()
{
    Init();
}

PyTextCtrlEditor::~PyTextCtrlEditor()
{
    if (m_clientData) { _deleteOwningObject(m_clientData); m_clientData = NULL; }
}

void PyTextCtrlEditor::_SetSelf(PyObject *self)
{
    if ( !gs_PyTextCtrlEditor_pyClass )
    {
        gs_PyTextCtrlEditor_pyClass = PyObject_GetAttr(self, gs___class___Name);
        Py_DECREF(gs_PyTextCtrlEditor_pyClass);
    }
    if ( !m_clientData ) {
        m_clientData = self;
        Py_INCREF(self);
    }
}

bool PyTextCtrlEditor::GetValueFromControl(wxVariant& value, wxPGProperty* property, wxWindow* ctrl) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyGetValueFromControl(property, ctrl);
        if ( vab.m_valueValid )
            value = vab.m_value;
        return vab.m_result;
    }
    return wxPGTextCtrlEditor::GetValueFromControl(value, property, ctrl);
}


bool PyTextCtrlEditor::CanContainCustomImage() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_CanContainCustomImage_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_CanContainCustomImage_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxPGTextCtrlEditor::CanContainCustomImage();
    }
    return _CommonCallback25(blocked, (PyObject*)m_clientData, funcobj);
}


wxPGWindowList PyTextCtrlEditor::CreateControls(wxPropertyGrid* propgrid, wxPGProperty* property, const wxPoint& pos, const wxSize& size) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_CreateControls_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_CreateControls_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxPGTextCtrlEditor::CreateControls(propgrid, property, pos, size);
    }
    return _CommonCallback26(blocked, (PyObject*)m_clientData, funcobj, propgrid, property, pos, size);
}


void PyTextCtrlEditor::DeleteItem(wxWindow* ctrl, int index) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DeleteItem_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DeleteItem_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxPGTextCtrlEditor::DeleteItem(ctrl, index);
        return;
    }
    _CommonCallback27(blocked, (PyObject*)m_clientData, funcobj, ctrl, index);
}


void PyTextCtrlEditor::DrawValue(wxDC& dc, const wxRect& rect, wxPGProperty* property, const wxString& text) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DrawValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DrawValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxPGTextCtrlEditor::DrawValue(dc, rect, property, text);
        return;
    }
    _CommonCallback28(blocked, (PyObject*)m_clientData, funcobj, dc, rect, property, text);
}


wxString PyTextCtrlEditor::GetName() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetName_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetName_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxPGTextCtrlEditor::GetName();
    }
    return _CommonCallback14(blocked, (PyObject*)m_clientData, funcobj);
}


int PyTextCtrlEditor::InsertItem(wxWindow* ctrl, const wxString& label, int index) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_InsertItem_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_InsertItem_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxPGTextCtrlEditor::InsertItem(ctrl, label, index);
    }
    return _CommonCallback29(blocked, (PyObject*)m_clientData, funcobj, ctrl, label, index);
}


bool PyTextCtrlEditor::OnEvent(wxPropertyGrid* propgrid, wxPGProperty* property, wxWindow* primaryCtrl, wxEvent& event) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnEvent_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnEvent_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxPGTextCtrlEditor::OnEvent(propgrid, property, primaryCtrl, event);
    }
    return _CommonCallback30(blocked, (PyObject*)m_clientData, funcobj, propgrid, property, primaryCtrl, event);
}


void PyTextCtrlEditor::OnFocus(wxPGProperty* property, wxWindow* wnd) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnFocus_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnFocus_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxPGTextCtrlEditor::OnFocus(property, wnd);
        return;
    }
    _CommonCallback31(blocked, (PyObject*)m_clientData, funcobj, property, wnd);
}


wxPGVariantAndBool PyTextCtrlEditor::PyGetValueFromControl(wxPGProperty* property, wxWindow* ctrl) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetValueFromControl_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetValueFromControl_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_result = wxPGTextCtrlEditor::GetValueFromControl(vab.m_value, property, ctrl);
            if ( vab.m_result )
                vab.m_valueValid = true;
            return vab;
        }
    }
    return _CommonCallback32(blocked, (PyObject*)m_clientData, funcobj, property, ctrl);
}


void PyTextCtrlEditor::SetControlAppearance(wxPropertyGrid* pg, wxPGProperty* property, wxWindow* ctrl, const wxPGCell& appearance, const wxPGCell& oldAppearance, bool unspecified) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_SetControlAppearance_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_SetControlAppearance_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxPGTextCtrlEditor::SetControlAppearance(pg, property, ctrl, appearance, oldAppearance, unspecified);
        return;
    }
    _CommonCallback33(blocked, (PyObject*)m_clientData, funcobj, pg, property, ctrl, appearance, oldAppearance, unspecified);
}


void PyTextCtrlEditor::SetControlIntValue(wxPGProperty* property, wxWindow* ctrl, int value) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_SetControlIntValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_SetControlIntValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxPGTextCtrlEditor::SetControlIntValue(property, ctrl, value);
        return;
    }
    _CommonCallback34(blocked, (PyObject*)m_clientData, funcobj, property, ctrl, value);
}


void PyTextCtrlEditor::SetControlStringValue(wxPGProperty* property, wxWindow* ctrl, const wxString& txt) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_SetControlStringValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_SetControlStringValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxPGTextCtrlEditor::SetControlStringValue(property, ctrl, txt);
        return;
    }
    _CommonCallback35(blocked, (PyObject*)m_clientData, funcobj, property, ctrl, txt);
}


void PyTextCtrlEditor::SetValueToUnspecified(wxPGProperty* property, wxWindow* ctrl) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_SetValueToUnspecified_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_SetValueToUnspecified_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxPGTextCtrlEditor::SetValueToUnspecified(property, ctrl);
        return;
    }
    _CommonCallback31(blocked, (PyObject*)m_clientData, funcobj, property, ctrl);
}


void PyTextCtrlEditor::UpdateControl(wxPGProperty* property, wxWindow* ctrl) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_UpdateControl_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_UpdateControl_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxPGTextCtrlEditor::UpdateControl(property, ctrl);
        return;
    }
    _CommonCallback31(blocked, (PyObject*)m_clientData, funcobj, property, ctrl);
}


class PySystemColourProperty : public wxSystemColourProperty {
public:
        PySystemColourProperty( const wxString& label = (*wxPGProperty::sm_wxPG_LABEL),
                            const wxString& name = (*wxPGProperty::sm_wxPG_LABEL),
                            const wxColourPropertyValue&
                                value = wxColourPropertyValue() );
    PySystemColourProperty( const wxString& label, const wxString& name,
        const wxChar* const* labels, const long* values, wxPGChoices* choicesCache,
        const wxColourPropertyValue& value );
    PySystemColourProperty( const wxString& label, const wxString& name,
        const wxChar* const* labels, const long* values, wxPGChoices* choicesCache,
        const wxColour& value );
    virtual ~PySystemColourProperty();
    void _SetSelf(PyObject *self);
    virtual const wxPGEditor* DoGetEditorClass() const;
    virtual bool ValidateValue(wxVariant& value, wxPGValidationInfo& validationInfo) const;
    virtual bool StringToValue(wxVariant& variant, const wxString& text, int argFlags) const;
    virtual bool IntToValue(wxVariant& variant, int number, int argFlags) const;
    virtual wxVariant ChildChanged( wxVariant& thisValue,
                                    int childIndex,
                                    wxVariant& childValue ) const;
    virtual wxString ColourToString( const wxColour& col, int index ) const;
    virtual wxVariant DoGetAttribute( const wxString& name ) const;
    virtual wxValidator* DoGetValidator () const;
    virtual wxVariant DoGetValue() const;
    virtual bool DoSetAttribute( const wxString& name, wxVariant& value );
    virtual wxVariant DoTranslateVal( wxColourPropertyValue& v ) const;
    virtual wxPGCellRenderer* GetCellRenderer( int column ) const;
    virtual int GetChoiceSelection() const;
    virtual wxColour GetColour( int index ) const;
    virtual int GetCustomColourIndex() const;
    virtual wxPGEditorDialogAdapter* GetEditorDialog() const;
    virtual int GetIndexForValue( int value ) const;
    virtual wxString GetValueAsString( int argFlags = 0 ) const;
    virtual void OnCustomPaint( wxDC& dc,
                                const wxRect& rect, wxPGPaintData& paintdata );
    virtual bool OnEvent( wxPropertyGrid* propgrid,
                          wxWindow* primary, wxEvent& event );
    virtual wxSize OnMeasureImage( int item ) const;
    virtual void OnSetValue();
    virtual void OnValidationFailure( wxVariant& pendingValue );
    virtual wxString PyGetEditor() const;
    virtual wxPGVariantAndBool PyIntToValue( int number, int argFlags ) const;
    virtual wxPGVariantAndBool PyStringToValue( const wxString& text, int argFlags ) const;
    virtual wxPGVariantAndBool PyValidateValue( const wxVariant& value, wxPGValidationInfo& validationInfo ) const;
    virtual void RefreshChildren();
    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
private:
    void Init() { if ( !gs_funcNamesInitialized ) _InitFuncNames(); }
};

static PyObject* gs_PySystemColourProperty_pyClass = NULL;


PySystemColourProperty::PySystemColourProperty(const wxString& label, const wxString& name, const wxColourPropertyValue& value)
    : wxSystemColourProperty(label, name, value)
{
    Init();
}

PySystemColourProperty::PySystemColourProperty(const wxString& label, const wxString& name, const wxChar* const* labels, const long* values, wxPGChoices* choicesCache, const wxColourPropertyValue& value)
    : wxSystemColourProperty(label, name, labels, values, choicesCache, value)
{
    Init();
}

PySystemColourProperty::PySystemColourProperty(const wxString& label, const wxString& name, const wxChar* const* labels, const long* values, wxPGChoices* choicesCache, const wxColour& value)
    : wxSystemColourProperty(label, name, labels, values, choicesCache, value)
{
    Init();
}

PySystemColourProperty::~PySystemColourProperty()
{
    if (m_clientData) { _deleteOwningObject(m_clientData); m_clientData = NULL; }
}

void PySystemColourProperty::_SetSelf(PyObject *self)
{
    if ( !gs_PySystemColourProperty_pyClass )
    {
        gs_PySystemColourProperty_pyClass = PyObject_GetAttr(self, gs___class___Name);
        Py_DECREF(gs_PySystemColourProperty_pyClass);
    }
    if ( !m_clientData ) {
        m_clientData = self;
        Py_INCREF(self);
    }
}

const wxPGEditor* PySystemColourProperty::DoGetEditorClass() const
{
    return wxPropertyGridInterface::GetEditorByName(PyGetEditor());
}

bool PySystemColourProperty::ValidateValue(wxVariant& value, wxPGValidationInfo& validationInfo) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyValidateValue(value, validationInfo);
        if ( vab.m_valueValid )
            value = vab.m_value;
        return vab.m_result;
    }
    return wxSystemColourProperty::ValidateValue(value, validationInfo);
}

bool PySystemColourProperty::StringToValue(wxVariant& variant, const wxString& text, int argFlags) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyStringToValue(text, argFlags);
        if ( vab.m_valueValid )
            variant = vab.m_value;
        return vab.m_result;
    }
    return wxSystemColourProperty::StringToValue(variant, text, argFlags);
}

bool PySystemColourProperty::IntToValue(wxVariant& variant, int number, int argFlags) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyIntToValue(number, argFlags);
        if ( vab.m_valueValid )
            variant = vab.m_value;
        return vab.m_result;
    }
    return wxSystemColourProperty::IntToValue(variant, number, argFlags);
}


wxVariant PySystemColourProperty::ChildChanged(wxVariant& thisValue, int childIndex, wxVariant& childValue) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ChildChanged_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ChildChanged_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxSystemColourProperty::ChildChanged(thisValue, childIndex, childValue);
    }
    return _CommonCallback0(blocked, (PyObject*)m_clientData, funcobj, thisValue, childIndex, childValue);
}


wxString PySystemColourProperty::ColourToString(const wxColour& col, int index) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ColourToString_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ColourToString_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxSystemColourProperty::ColourToString(col, index);
    }
    return _CommonCallback36(blocked, (PyObject*)m_clientData, funcobj, col, index);
}


wxVariant PySystemColourProperty::DoGetAttribute(const wxString& name) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetAttribute_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetAttribute_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxSystemColourProperty::DoGetAttribute(name);
    }
    return _CommonCallback1(blocked, (PyObject*)m_clientData, funcobj, name);
}


wxValidator* PySystemColourProperty::DoGetValidator() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetValidator_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetValidator_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxSystemColourProperty::DoGetValidator();
    }
    return _CommonCallback2(blocked, (PyObject*)m_clientData, funcobj);
}


wxVariant PySystemColourProperty::DoGetValue() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxSystemColourProperty::DoGetValue();
    }
    return _CommonCallback3(blocked, (PyObject*)m_clientData, funcobj);
}


bool PySystemColourProperty::DoSetAttribute(const wxString& name, wxVariant& value)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoSetAttribute_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoSetAttribute_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxSystemColourProperty::DoSetAttribute(name, value);
    }
    return _CommonCallback4(blocked, (PyObject*)m_clientData, funcobj, name, value);
}


wxVariant PySystemColourProperty::DoTranslateVal(wxColourPropertyValue& v) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoTranslateVal_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoTranslateVal_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxSystemColourProperty::DoTranslateVal(v);
    }
    return _CommonCallback37(blocked, (PyObject*)m_clientData, funcobj, v);
}


wxPGCellRenderer* PySystemColourProperty::GetCellRenderer(int column) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetCellRenderer_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetCellRenderer_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxSystemColourProperty::GetCellRenderer(column);
    }
    return _CommonCallback5(blocked, (PyObject*)m_clientData, funcobj, column);
}


int PySystemColourProperty::GetChoiceSelection() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetChoiceSelection_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetChoiceSelection_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxSystemColourProperty::GetChoiceSelection();
    }
    return _CommonCallback6(blocked, (PyObject*)m_clientData, funcobj);
}


wxColour PySystemColourProperty::GetColour(int index) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetColour_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetColour_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxSystemColourProperty::GetColour(index);
    }
    return _CommonCallback38(blocked, (PyObject*)m_clientData, funcobj, index);
}


int PySystemColourProperty::GetCustomColourIndex() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetCustomColourIndex_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetCustomColourIndex_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxSystemColourProperty::GetCustomColourIndex();
    }
    return _CommonCallback6(blocked, (PyObject*)m_clientData, funcobj);
}


wxPGEditorDialogAdapter* PySystemColourProperty::GetEditorDialog() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetEditorDialog_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetEditorDialog_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxSystemColourProperty::GetEditorDialog();
    }
    return _CommonCallback7(blocked, (PyObject*)m_clientData, funcobj);
}


int PySystemColourProperty::GetIndexForValue(int value) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetIndexForValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetIndexForValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxSystemColourProperty::GetIndexForValue(value);
    }
    return _CommonCallback20(blocked, (PyObject*)m_clientData, funcobj, value);
}


wxString PySystemColourProperty::GetValueAsString(int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetValueAsString_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetValueAsString_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxSystemColourProperty::GetValueAsString(argFlags);
    }
    return _CommonCallback8(blocked, (PyObject*)m_clientData, funcobj, argFlags);
}


void PySystemColourProperty::OnCustomPaint(wxDC& dc, const wxRect& rect, wxPGPaintData& paintdata)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnCustomPaint_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnCustomPaint_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxSystemColourProperty::OnCustomPaint(dc, rect, paintdata);
        return;
    }
    _CommonCallback9(blocked, (PyObject*)m_clientData, funcobj, dc, rect, paintdata);
}


bool PySystemColourProperty::OnEvent(wxPropertyGrid* propgrid, wxWindow* primary, wxEvent& event)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnEvent_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnEvent_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxSystemColourProperty::OnEvent(propgrid, primary, event);
    }
    return _CommonCallback10(blocked, (PyObject*)m_clientData, funcobj, propgrid, primary, event);
}


wxSize PySystemColourProperty::OnMeasureImage(int item) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnMeasureImage_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnMeasureImage_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxSystemColourProperty::OnMeasureImage(item);
    }
    return _CommonCallback11(blocked, (PyObject*)m_clientData, funcobj, item);
}


void PySystemColourProperty::OnSetValue()
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnSetValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnSetValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxSystemColourProperty::OnSetValue();
        return;
    }
    _CommonCallback12(blocked, (PyObject*)m_clientData, funcobj);
}


void PySystemColourProperty::OnValidationFailure(wxVariant& pendingValue)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnValidationFailure_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnValidationFailure_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxSystemColourProperty::OnValidationFailure(pendingValue);
        return;
    }
    _CommonCallback13(blocked, (PyObject*)m_clientData, funcobj, pendingValue);
}


wxString PySystemColourProperty::PyGetEditor() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetEditor_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetEditor_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            return wxT("TextCtrl");
        }
    }
    return _CommonCallback14(blocked, (PyObject*)m_clientData, funcobj);
}


wxPGVariantAndBool PySystemColourProperty::PyIntToValue(int number, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_IntToValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_IntToValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_result = wxSystemColourProperty::IntToValue(vab.m_value, number, argFlags);
            if ( vab.m_result )
                vab.m_valueValid = true;
            return vab;
        }
    }
    return _CommonCallback15(blocked, (PyObject*)m_clientData, funcobj, number, argFlags);
}


wxPGVariantAndBool PySystemColourProperty::PyStringToValue(const wxString& text, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_StringToValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_StringToValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_result = wxSystemColourProperty::StringToValue(vab.m_value, text, argFlags);
            if ( vab.m_result )
                vab.m_valueValid = true;
            return vab;
        }
    }
    return _CommonCallback16(blocked, (PyObject*)m_clientData, funcobj, text, argFlags);
}


wxPGVariantAndBool PySystemColourProperty::PyValidateValue(const wxVariant& value, wxPGValidationInfo& validationInfo) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ValidateValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ValidateValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_value = value;
            vab.m_valueValid = true;
            vab.m_result = wxSystemColourProperty::ValidateValue(vab.m_value, validationInfo);
            return vab;
        }
    }
    return _CommonCallback17(blocked, (PyObject*)m_clientData, funcobj, value, validationInfo);
}


void PySystemColourProperty::RefreshChildren()
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_RefreshChildren_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_RefreshChildren_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxSystemColourProperty::RefreshChildren();
        return;
    }
    _CommonCallback12(blocked, (PyObject*)m_clientData, funcobj);
}


wxString PySystemColourProperty::ValueToString(wxVariant& value, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ValueToString_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ValueToString_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxSystemColourProperty::ValueToString(value, argFlags);
    }
    return _CommonCallback18(blocked, (PyObject*)m_clientData, funcobj, value, argFlags);
}


class PyFlagsProperty : public wxFlagsProperty {
public:
        PyFlagsProperty( const wxString& label = (*wxPGProperty::sm_wxPG_LABEL),
                     const wxString& name = (*wxPGProperty::sm_wxPG_LABEL),
                     const wxArrayString& labels = wxArrayString(),
                     const wxArrayInt& values = wxArrayInt(),
                     int value = 0 );
    virtual ~PyFlagsProperty();
    void _SetSelf(PyObject *self);
    virtual const wxPGEditor* DoGetEditorClass() const;
    virtual bool ValidateValue(wxVariant& value, wxPGValidationInfo& validationInfo) const;
    virtual bool StringToValue(wxVariant& variant, const wxString& text, int argFlags) const;
    virtual bool IntToValue(wxVariant& variant, int number, int argFlags) const;
    virtual wxVariant ChildChanged( wxVariant& thisValue,
                                    int childIndex,
                                    wxVariant& childValue ) const;
    virtual wxVariant DoGetAttribute( const wxString& name ) const;
    virtual wxValidator* DoGetValidator () const;
    virtual wxVariant DoGetValue() const;
    virtual bool DoSetAttribute( const wxString& name, wxVariant& value );
    virtual wxPGCellRenderer* GetCellRenderer( int column ) const;
    virtual int GetChoiceSelection() const;
    virtual wxPGEditorDialogAdapter* GetEditorDialog() const;
    virtual wxString GetValueAsString( int argFlags = 0 ) const;
    virtual void OnCustomPaint( wxDC& dc,
                                const wxRect& rect,
                                wxPGPaintData& paintdata );
    virtual bool OnEvent( wxPropertyGrid* propgrid,
                          wxWindow* wnd_primary,
                          wxEvent& event );
    virtual wxSize OnMeasureImage( int item = -1 ) const;
    virtual void OnSetValue();
    virtual void OnValidationFailure( wxVariant& pendingValue );
    virtual wxString PyGetEditor() const;
    virtual wxPGVariantAndBool PyIntToValue( int number, int argFlags ) const;
    virtual wxPGVariantAndBool PyStringToValue( const wxString& text, int argFlags ) const;
    virtual wxPGVariantAndBool PyValidateValue( const wxVariant& value, wxPGValidationInfo& validationInfo ) const;
    virtual void RefreshChildren();
    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
private:
    void Init() { if ( !gs_funcNamesInitialized ) _InitFuncNames(); }
};

static PyObject* gs_PyFlagsProperty_pyClass = NULL;


PyFlagsProperty::PyFlagsProperty(const wxString& label, const wxString& name, const wxArrayString& labels, const wxArrayInt& values, int value)
    : wxFlagsProperty(label, name, labels, values, value)
{
    Init();
}

PyFlagsProperty::~PyFlagsProperty()
{
    if (m_clientData) { _deleteOwningObject(m_clientData); m_clientData = NULL; }
}

void PyFlagsProperty::_SetSelf(PyObject *self)
{
    if ( !gs_PyFlagsProperty_pyClass )
    {
        gs_PyFlagsProperty_pyClass = PyObject_GetAttr(self, gs___class___Name);
        Py_DECREF(gs_PyFlagsProperty_pyClass);
    }
    if ( !m_clientData ) {
        m_clientData = self;
        Py_INCREF(self);
    }
}

const wxPGEditor* PyFlagsProperty::DoGetEditorClass() const
{
    return wxPropertyGridInterface::GetEditorByName(PyGetEditor());
}

bool PyFlagsProperty::ValidateValue(wxVariant& value, wxPGValidationInfo& validationInfo) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyValidateValue(value, validationInfo);
        if ( vab.m_valueValid )
            value = vab.m_value;
        return vab.m_result;
    }
    return wxFlagsProperty::ValidateValue(value, validationInfo);
}

bool PyFlagsProperty::StringToValue(wxVariant& variant, const wxString& text, int argFlags) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyStringToValue(text, argFlags);
        if ( vab.m_valueValid )
            variant = vab.m_value;
        return vab.m_result;
    }
    return wxFlagsProperty::StringToValue(variant, text, argFlags);
}

bool PyFlagsProperty::IntToValue(wxVariant& variant, int number, int argFlags) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyIntToValue(number, argFlags);
        if ( vab.m_valueValid )
            variant = vab.m_value;
        return vab.m_result;
    }
    return wxFlagsProperty::IntToValue(variant, number, argFlags);
}


wxVariant PyFlagsProperty::ChildChanged(wxVariant& thisValue, int childIndex, wxVariant& childValue) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ChildChanged_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ChildChanged_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFlagsProperty::ChildChanged(thisValue, childIndex, childValue);
    }
    return _CommonCallback0(blocked, (PyObject*)m_clientData, funcobj, thisValue, childIndex, childValue);
}


wxVariant PyFlagsProperty::DoGetAttribute(const wxString& name) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetAttribute_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetAttribute_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFlagsProperty::DoGetAttribute(name);
    }
    return _CommonCallback1(blocked, (PyObject*)m_clientData, funcobj, name);
}


wxValidator* PyFlagsProperty::DoGetValidator() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetValidator_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetValidator_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFlagsProperty::DoGetValidator();
    }
    return _CommonCallback2(blocked, (PyObject*)m_clientData, funcobj);
}


wxVariant PyFlagsProperty::DoGetValue() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFlagsProperty::DoGetValue();
    }
    return _CommonCallback3(blocked, (PyObject*)m_clientData, funcobj);
}


bool PyFlagsProperty::DoSetAttribute(const wxString& name, wxVariant& value)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoSetAttribute_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoSetAttribute_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFlagsProperty::DoSetAttribute(name, value);
    }
    return _CommonCallback4(blocked, (PyObject*)m_clientData, funcobj, name, value);
}


wxPGCellRenderer* PyFlagsProperty::GetCellRenderer(int column) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetCellRenderer_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetCellRenderer_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFlagsProperty::GetCellRenderer(column);
    }
    return _CommonCallback5(blocked, (PyObject*)m_clientData, funcobj, column);
}


int PyFlagsProperty::GetChoiceSelection() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetChoiceSelection_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetChoiceSelection_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFlagsProperty::GetChoiceSelection();
    }
    return _CommonCallback6(blocked, (PyObject*)m_clientData, funcobj);
}


wxPGEditorDialogAdapter* PyFlagsProperty::GetEditorDialog() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetEditorDialog_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetEditorDialog_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFlagsProperty::GetEditorDialog();
    }
    return _CommonCallback7(blocked, (PyObject*)m_clientData, funcobj);
}


wxString PyFlagsProperty::GetValueAsString(int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetValueAsString_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetValueAsString_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFlagsProperty::GetValueAsString(argFlags);
    }
    return _CommonCallback8(blocked, (PyObject*)m_clientData, funcobj, argFlags);
}


void PyFlagsProperty::OnCustomPaint(wxDC& dc, const wxRect& rect, wxPGPaintData& paintdata)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnCustomPaint_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnCustomPaint_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxFlagsProperty::OnCustomPaint(dc, rect, paintdata);
        return;
    }
    _CommonCallback9(blocked, (PyObject*)m_clientData, funcobj, dc, rect, paintdata);
}


bool PyFlagsProperty::OnEvent(wxPropertyGrid* propgrid, wxWindow* wnd_primary, wxEvent& event)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnEvent_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnEvent_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFlagsProperty::OnEvent(propgrid, wnd_primary, event);
    }
    return _CommonCallback10(blocked, (PyObject*)m_clientData, funcobj, propgrid, wnd_primary, event);
}


wxSize PyFlagsProperty::OnMeasureImage(int item) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnMeasureImage_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnMeasureImage_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFlagsProperty::OnMeasureImage(item);
    }
    return _CommonCallback11(blocked, (PyObject*)m_clientData, funcobj, item);
}


void PyFlagsProperty::OnSetValue()
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnSetValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnSetValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxFlagsProperty::OnSetValue();
        return;
    }
    _CommonCallback12(blocked, (PyObject*)m_clientData, funcobj);
}


void PyFlagsProperty::OnValidationFailure(wxVariant& pendingValue)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnValidationFailure_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnValidationFailure_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxFlagsProperty::OnValidationFailure(pendingValue);
        return;
    }
    _CommonCallback13(blocked, (PyObject*)m_clientData, funcobj, pendingValue);
}


wxString PyFlagsProperty::PyGetEditor() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetEditor_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetEditor_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            return wxT("TextCtrl");
        }
    }
    return _CommonCallback14(blocked, (PyObject*)m_clientData, funcobj);
}


wxPGVariantAndBool PyFlagsProperty::PyIntToValue(int number, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_IntToValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_IntToValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_result = wxFlagsProperty::IntToValue(vab.m_value, number, argFlags);
            if ( vab.m_result )
                vab.m_valueValid = true;
            return vab;
        }
    }
    return _CommonCallback15(blocked, (PyObject*)m_clientData, funcobj, number, argFlags);
}


wxPGVariantAndBool PyFlagsProperty::PyStringToValue(const wxString& text, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_StringToValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_StringToValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_result = wxFlagsProperty::StringToValue(vab.m_value, text, argFlags);
            if ( vab.m_result )
                vab.m_valueValid = true;
            return vab;
        }
    }
    return _CommonCallback16(blocked, (PyObject*)m_clientData, funcobj, text, argFlags);
}


wxPGVariantAndBool PyFlagsProperty::PyValidateValue(const wxVariant& value, wxPGValidationInfo& validationInfo) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ValidateValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ValidateValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_value = value;
            vab.m_valueValid = true;
            vab.m_result = wxFlagsProperty::ValidateValue(vab.m_value, validationInfo);
            return vab;
        }
    }
    return _CommonCallback17(blocked, (PyObject*)m_clientData, funcobj, value, validationInfo);
}


void PyFlagsProperty::RefreshChildren()
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_RefreshChildren_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_RefreshChildren_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxFlagsProperty::RefreshChildren();
        return;
    }
    _CommonCallback12(blocked, (PyObject*)m_clientData, funcobj);
}


wxString PyFlagsProperty::ValueToString(wxVariant& value, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ValueToString_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ValueToString_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFlagsProperty::ValueToString(value, argFlags);
    }
    return _CommonCallback18(blocked, (PyObject*)m_clientData, funcobj, value, argFlags);
}


class PyFontProperty : public wxFontProperty {
public:
        PyFontProperty(const wxString& label = (*wxPGProperty::sm_wxPG_LABEL),
                   const wxString& name = (*wxPGProperty::sm_wxPG_LABEL),
                   const wxFont& value = wxFont());
    virtual ~PyFontProperty();
    void _SetSelf(PyObject *self);
    virtual const wxPGEditor* DoGetEditorClass() const;
    virtual bool ValidateValue(wxVariant& value, wxPGValidationInfo& validationInfo) const;
    virtual bool StringToValue(wxVariant& variant, const wxString& text, int argFlags) const;
    virtual bool IntToValue(wxVariant& variant, int number, int argFlags) const;
    virtual wxVariant ChildChanged( wxVariant& thisValue,
                                    int childIndex,
                                    wxVariant& childValue ) const;
    virtual wxVariant DoGetAttribute( const wxString& name ) const;
    virtual wxValidator* DoGetValidator () const;
    virtual wxVariant DoGetValue() const;
    virtual bool DoSetAttribute( const wxString& name, wxVariant& value );
    virtual wxPGCellRenderer* GetCellRenderer( int column ) const;
    virtual int GetChoiceSelection() const;
    virtual wxPGEditorDialogAdapter* GetEditorDialog() const;
    virtual wxString GetValueAsString( int argFlags = 0 ) const;
    virtual void OnCustomPaint( wxDC& dc,
                                const wxRect& rect,
                                wxPGPaintData& paintdata );
    virtual bool OnEvent( wxPropertyGrid* propgrid,
                          wxWindow* primary, wxEvent& event );
    virtual wxSize OnMeasureImage( int item = -1 ) const;
    virtual void OnSetValue();
    virtual void OnValidationFailure( wxVariant& pendingValue );
    virtual wxString PyGetEditor() const;
    virtual wxPGVariantAndBool PyIntToValue( int number, int argFlags ) const;
    virtual wxPGVariantAndBool PyStringToValue( const wxString& text, int argFlags ) const;
    virtual wxPGVariantAndBool PyValidateValue( const wxVariant& value, wxPGValidationInfo& validationInfo ) const;
    virtual void RefreshChildren();
    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
private:
    void Init() { if ( !gs_funcNamesInitialized ) _InitFuncNames(); }
};

static PyObject* gs_PyFontProperty_pyClass = NULL;


PyFontProperty::PyFontProperty(const wxString& label, const wxString& name, const wxFont& value)
    : wxFontProperty(label, name, value)
{
    Init();
}

PyFontProperty::~PyFontProperty()
{
    if (m_clientData) { _deleteOwningObject(m_clientData); m_clientData = NULL; }
}

void PyFontProperty::_SetSelf(PyObject *self)
{
    if ( !gs_PyFontProperty_pyClass )
    {
        gs_PyFontProperty_pyClass = PyObject_GetAttr(self, gs___class___Name);
        Py_DECREF(gs_PyFontProperty_pyClass);
    }
    if ( !m_clientData ) {
        m_clientData = self;
        Py_INCREF(self);
    }
}

const wxPGEditor* PyFontProperty::DoGetEditorClass() const
{
    return wxPropertyGridInterface::GetEditorByName(PyGetEditor());
}

bool PyFontProperty::ValidateValue(wxVariant& value, wxPGValidationInfo& validationInfo) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyValidateValue(value, validationInfo);
        if ( vab.m_valueValid )
            value = vab.m_value;
        return vab.m_result;
    }
    return wxFontProperty::ValidateValue(value, validationInfo);
}

bool PyFontProperty::StringToValue(wxVariant& variant, const wxString& text, int argFlags) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyStringToValue(text, argFlags);
        if ( vab.m_valueValid )
            variant = vab.m_value;
        return vab.m_result;
    }
    return wxFontProperty::StringToValue(variant, text, argFlags);
}

bool PyFontProperty::IntToValue(wxVariant& variant, int number, int argFlags) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyIntToValue(number, argFlags);
        if ( vab.m_valueValid )
            variant = vab.m_value;
        return vab.m_result;
    }
    return wxFontProperty::IntToValue(variant, number, argFlags);
}


wxVariant PyFontProperty::ChildChanged(wxVariant& thisValue, int childIndex, wxVariant& childValue) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ChildChanged_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ChildChanged_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFontProperty::ChildChanged(thisValue, childIndex, childValue);
    }
    return _CommonCallback0(blocked, (PyObject*)m_clientData, funcobj, thisValue, childIndex, childValue);
}


wxVariant PyFontProperty::DoGetAttribute(const wxString& name) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetAttribute_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetAttribute_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFontProperty::DoGetAttribute(name);
    }
    return _CommonCallback1(blocked, (PyObject*)m_clientData, funcobj, name);
}


wxValidator* PyFontProperty::DoGetValidator() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetValidator_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetValidator_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFontProperty::DoGetValidator();
    }
    return _CommonCallback2(blocked, (PyObject*)m_clientData, funcobj);
}


wxVariant PyFontProperty::DoGetValue() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFontProperty::DoGetValue();
    }
    return _CommonCallback3(blocked, (PyObject*)m_clientData, funcobj);
}


bool PyFontProperty::DoSetAttribute(const wxString& name, wxVariant& value)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoSetAttribute_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoSetAttribute_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFontProperty::DoSetAttribute(name, value);
    }
    return _CommonCallback4(blocked, (PyObject*)m_clientData, funcobj, name, value);
}


wxPGCellRenderer* PyFontProperty::GetCellRenderer(int column) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetCellRenderer_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetCellRenderer_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFontProperty::GetCellRenderer(column);
    }
    return _CommonCallback5(blocked, (PyObject*)m_clientData, funcobj, column);
}


int PyFontProperty::GetChoiceSelection() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetChoiceSelection_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetChoiceSelection_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFontProperty::GetChoiceSelection();
    }
    return _CommonCallback6(blocked, (PyObject*)m_clientData, funcobj);
}


wxPGEditorDialogAdapter* PyFontProperty::GetEditorDialog() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetEditorDialog_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetEditorDialog_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFontProperty::GetEditorDialog();
    }
    return _CommonCallback7(blocked, (PyObject*)m_clientData, funcobj);
}


wxString PyFontProperty::GetValueAsString(int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetValueAsString_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetValueAsString_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFontProperty::GetValueAsString(argFlags);
    }
    return _CommonCallback8(blocked, (PyObject*)m_clientData, funcobj, argFlags);
}


void PyFontProperty::OnCustomPaint(wxDC& dc, const wxRect& rect, wxPGPaintData& paintdata)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnCustomPaint_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnCustomPaint_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxFontProperty::OnCustomPaint(dc, rect, paintdata);
        return;
    }
    _CommonCallback9(blocked, (PyObject*)m_clientData, funcobj, dc, rect, paintdata);
}


bool PyFontProperty::OnEvent(wxPropertyGrid* propgrid, wxWindow* primary, wxEvent& event)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnEvent_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnEvent_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFontProperty::OnEvent(propgrid, primary, event);
    }
    return _CommonCallback10(blocked, (PyObject*)m_clientData, funcobj, propgrid, primary, event);
}


wxSize PyFontProperty::OnMeasureImage(int item) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnMeasureImage_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnMeasureImage_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFontProperty::OnMeasureImage(item);
    }
    return _CommonCallback11(blocked, (PyObject*)m_clientData, funcobj, item);
}


void PyFontProperty::OnSetValue()
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnSetValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnSetValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxFontProperty::OnSetValue();
        return;
    }
    _CommonCallback12(blocked, (PyObject*)m_clientData, funcobj);
}


void PyFontProperty::OnValidationFailure(wxVariant& pendingValue)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnValidationFailure_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnValidationFailure_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxFontProperty::OnValidationFailure(pendingValue);
        return;
    }
    _CommonCallback13(blocked, (PyObject*)m_clientData, funcobj, pendingValue);
}


wxString PyFontProperty::PyGetEditor() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetEditor_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetEditor_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            return wxT("TextCtrl");
        }
    }
    return _CommonCallback14(blocked, (PyObject*)m_clientData, funcobj);
}


wxPGVariantAndBool PyFontProperty::PyIntToValue(int number, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_IntToValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_IntToValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_result = wxFontProperty::IntToValue(vab.m_value, number, argFlags);
            if ( vab.m_result )
                vab.m_valueValid = true;
            return vab;
        }
    }
    return _CommonCallback15(blocked, (PyObject*)m_clientData, funcobj, number, argFlags);
}


wxPGVariantAndBool PyFontProperty::PyStringToValue(const wxString& text, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_StringToValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_StringToValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_result = wxFontProperty::StringToValue(vab.m_value, text, argFlags);
            if ( vab.m_result )
                vab.m_valueValid = true;
            return vab;
        }
    }
    return _CommonCallback16(blocked, (PyObject*)m_clientData, funcobj, text, argFlags);
}


wxPGVariantAndBool PyFontProperty::PyValidateValue(const wxVariant& value, wxPGValidationInfo& validationInfo) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ValidateValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ValidateValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_value = value;
            vab.m_valueValid = true;
            vab.m_result = wxFontProperty::ValidateValue(vab.m_value, validationInfo);
            return vab;
        }
    }
    return _CommonCallback17(blocked, (PyObject*)m_clientData, funcobj, value, validationInfo);
}


void PyFontProperty::RefreshChildren()
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_RefreshChildren_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_RefreshChildren_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxFontProperty::RefreshChildren();
        return;
    }
    _CommonCallback12(blocked, (PyObject*)m_clientData, funcobj);
}


wxString PyFontProperty::ValueToString(wxVariant& value, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ValueToString_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ValueToString_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFontProperty::ValueToString(value, argFlags);
    }
    return _CommonCallback18(blocked, (PyObject*)m_clientData, funcobj, value, argFlags);
}


class PyColourProperty : public wxColourProperty {
public:
        PyColourProperty( const wxString& label = (*wxPGProperty::sm_wxPG_LABEL),
                      const wxString& name = (*wxPGProperty::sm_wxPG_LABEL),
                      const wxColour& value = *wxWHITE );
    virtual ~PyColourProperty();
    void _SetSelf(PyObject *self);
    virtual const wxPGEditor* DoGetEditorClass() const;
    virtual bool ValidateValue(wxVariant& value, wxPGValidationInfo& validationInfo) const;
    virtual bool StringToValue(wxVariant& variant, const wxString& text, int argFlags) const;
    virtual bool IntToValue(wxVariant& variant, int number, int argFlags) const;
    virtual wxVariant ChildChanged( wxVariant& thisValue,
                                    int childIndex,
                                    wxVariant& childValue ) const;
    virtual wxString ColourToString( const wxColour& col, int index ) const;
    virtual wxVariant DoGetAttribute( const wxString& name ) const;
    virtual wxValidator* DoGetValidator () const;
    virtual wxVariant DoGetValue() const;
    virtual bool DoSetAttribute( const wxString& name, wxVariant& value );
    virtual wxVariant DoTranslateVal( wxColourPropertyValue& v ) const;
    virtual wxPGCellRenderer* GetCellRenderer( int column ) const;
    virtual int GetChoiceSelection() const;
    virtual wxColour GetColour( int index ) const;
    virtual int GetCustomColourIndex() const;
    virtual wxPGEditorDialogAdapter* GetEditorDialog() const;
    virtual int GetIndexForValue( int value ) const;
    virtual wxString GetValueAsString( int argFlags = 0 ) const;
    virtual void OnCustomPaint( wxDC& dc,
                                const wxRect& rect, wxPGPaintData& paintdata );
    virtual bool OnEvent( wxPropertyGrid* propgrid,
                          wxWindow* primary, wxEvent& event );
    virtual wxSize OnMeasureImage( int item ) const;
    virtual void OnSetValue();
    virtual void OnValidationFailure( wxVariant& pendingValue );
    virtual wxString PyGetEditor() const;
    virtual wxPGVariantAndBool PyIntToValue( int number, int argFlags ) const;
    virtual wxPGVariantAndBool PyStringToValue( const wxString& text, int argFlags ) const;
    virtual wxPGVariantAndBool PyValidateValue( const wxVariant& value, wxPGValidationInfo& validationInfo ) const;
    virtual void RefreshChildren();
    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
private:
    void Init() { if ( !gs_funcNamesInitialized ) _InitFuncNames(); }
};

static PyObject* gs_PyColourProperty_pyClass = NULL;


PyColourProperty::PyColourProperty(const wxString& label, const wxString& name, const wxColour& value)
    : wxColourProperty(label, name, value)
{
    Init();
}

PyColourProperty::~PyColourProperty()
{
    if (m_clientData) { _deleteOwningObject(m_clientData); m_clientData = NULL; }
}

void PyColourProperty::_SetSelf(PyObject *self)
{
    if ( !gs_PyColourProperty_pyClass )
    {
        gs_PyColourProperty_pyClass = PyObject_GetAttr(self, gs___class___Name);
        Py_DECREF(gs_PyColourProperty_pyClass);
    }
    if ( !m_clientData ) {
        m_clientData = self;
        Py_INCREF(self);
    }
}

const wxPGEditor* PyColourProperty::DoGetEditorClass() const
{
    return wxPropertyGridInterface::GetEditorByName(PyGetEditor());
}

bool PyColourProperty::ValidateValue(wxVariant& value, wxPGValidationInfo& validationInfo) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyValidateValue(value, validationInfo);
        if ( vab.m_valueValid )
            value = vab.m_value;
        return vab.m_result;
    }
    return wxColourProperty::ValidateValue(value, validationInfo);
}

bool PyColourProperty::StringToValue(wxVariant& variant, const wxString& text, int argFlags) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyStringToValue(text, argFlags);
        if ( vab.m_valueValid )
            variant = vab.m_value;
        return vab.m_result;
    }
    return wxColourProperty::StringToValue(variant, text, argFlags);
}

bool PyColourProperty::IntToValue(wxVariant& variant, int number, int argFlags) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyIntToValue(number, argFlags);
        if ( vab.m_valueValid )
            variant = vab.m_value;
        return vab.m_result;
    }
    return wxColourProperty::IntToValue(variant, number, argFlags);
}


wxVariant PyColourProperty::ChildChanged(wxVariant& thisValue, int childIndex, wxVariant& childValue) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ChildChanged_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ChildChanged_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxColourProperty::ChildChanged(thisValue, childIndex, childValue);
    }
    return _CommonCallback0(blocked, (PyObject*)m_clientData, funcobj, thisValue, childIndex, childValue);
}


wxString PyColourProperty::ColourToString(const wxColour& col, int index) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ColourToString_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ColourToString_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxColourProperty::ColourToString(col, index);
    }
    return _CommonCallback36(blocked, (PyObject*)m_clientData, funcobj, col, index);
}


wxVariant PyColourProperty::DoGetAttribute(const wxString& name) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetAttribute_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetAttribute_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxColourProperty::DoGetAttribute(name);
    }
    return _CommonCallback1(blocked, (PyObject*)m_clientData, funcobj, name);
}


wxValidator* PyColourProperty::DoGetValidator() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetValidator_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetValidator_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxColourProperty::DoGetValidator();
    }
    return _CommonCallback2(blocked, (PyObject*)m_clientData, funcobj);
}


wxVariant PyColourProperty::DoGetValue() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxColourProperty::DoGetValue();
    }
    return _CommonCallback3(blocked, (PyObject*)m_clientData, funcobj);
}


bool PyColourProperty::DoSetAttribute(const wxString& name, wxVariant& value)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoSetAttribute_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoSetAttribute_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxColourProperty::DoSetAttribute(name, value);
    }
    return _CommonCallback4(blocked, (PyObject*)m_clientData, funcobj, name, value);
}


wxVariant PyColourProperty::DoTranslateVal(wxColourPropertyValue& v) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoTranslateVal_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoTranslateVal_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxColourProperty::DoTranslateVal(v);
    }
    return _CommonCallback37(blocked, (PyObject*)m_clientData, funcobj, v);
}


wxPGCellRenderer* PyColourProperty::GetCellRenderer(int column) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetCellRenderer_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetCellRenderer_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxColourProperty::GetCellRenderer(column);
    }
    return _CommonCallback5(blocked, (PyObject*)m_clientData, funcobj, column);
}


int PyColourProperty::GetChoiceSelection() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetChoiceSelection_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetChoiceSelection_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxColourProperty::GetChoiceSelection();
    }
    return _CommonCallback6(blocked, (PyObject*)m_clientData, funcobj);
}


wxColour PyColourProperty::GetColour(int index) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetColour_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetColour_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxColourProperty::GetColour(index);
    }
    return _CommonCallback38(blocked, (PyObject*)m_clientData, funcobj, index);
}


int PyColourProperty::GetCustomColourIndex() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetCustomColourIndex_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetCustomColourIndex_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxColourProperty::GetCustomColourIndex();
    }
    return _CommonCallback6(blocked, (PyObject*)m_clientData, funcobj);
}


wxPGEditorDialogAdapter* PyColourProperty::GetEditorDialog() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetEditorDialog_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetEditorDialog_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxColourProperty::GetEditorDialog();
    }
    return _CommonCallback7(blocked, (PyObject*)m_clientData, funcobj);
}


int PyColourProperty::GetIndexForValue(int value) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetIndexForValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetIndexForValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxColourProperty::GetIndexForValue(value);
    }
    return _CommonCallback20(blocked, (PyObject*)m_clientData, funcobj, value);
}


wxString PyColourProperty::GetValueAsString(int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetValueAsString_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetValueAsString_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxColourProperty::GetValueAsString(argFlags);
    }
    return _CommonCallback8(blocked, (PyObject*)m_clientData, funcobj, argFlags);
}


void PyColourProperty::OnCustomPaint(wxDC& dc, const wxRect& rect, wxPGPaintData& paintdata)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnCustomPaint_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnCustomPaint_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxColourProperty::OnCustomPaint(dc, rect, paintdata);
        return;
    }
    _CommonCallback9(blocked, (PyObject*)m_clientData, funcobj, dc, rect, paintdata);
}


bool PyColourProperty::OnEvent(wxPropertyGrid* propgrid, wxWindow* primary, wxEvent& event)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnEvent_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnEvent_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxColourProperty::OnEvent(propgrid, primary, event);
    }
    return _CommonCallback10(blocked, (PyObject*)m_clientData, funcobj, propgrid, primary, event);
}


wxSize PyColourProperty::OnMeasureImage(int item) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnMeasureImage_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnMeasureImage_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxColourProperty::OnMeasureImage(item);
    }
    return _CommonCallback11(blocked, (PyObject*)m_clientData, funcobj, item);
}


void PyColourProperty::OnSetValue()
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnSetValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnSetValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxColourProperty::OnSetValue();
        return;
    }
    _CommonCallback12(blocked, (PyObject*)m_clientData, funcobj);
}


void PyColourProperty::OnValidationFailure(wxVariant& pendingValue)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnValidationFailure_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnValidationFailure_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxColourProperty::OnValidationFailure(pendingValue);
        return;
    }
    _CommonCallback13(blocked, (PyObject*)m_clientData, funcobj, pendingValue);
}


wxString PyColourProperty::PyGetEditor() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetEditor_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetEditor_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            return wxT("TextCtrl");
        }
    }
    return _CommonCallback14(blocked, (PyObject*)m_clientData, funcobj);
}


wxPGVariantAndBool PyColourProperty::PyIntToValue(int number, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_IntToValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_IntToValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_result = wxColourProperty::IntToValue(vab.m_value, number, argFlags);
            if ( vab.m_result )
                vab.m_valueValid = true;
            return vab;
        }
    }
    return _CommonCallback15(blocked, (PyObject*)m_clientData, funcobj, number, argFlags);
}


wxPGVariantAndBool PyColourProperty::PyStringToValue(const wxString& text, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_StringToValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_StringToValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_result = wxColourProperty::StringToValue(vab.m_value, text, argFlags);
            if ( vab.m_result )
                vab.m_valueValid = true;
            return vab;
        }
    }
    return _CommonCallback16(blocked, (PyObject*)m_clientData, funcobj, text, argFlags);
}


wxPGVariantAndBool PyColourProperty::PyValidateValue(const wxVariant& value, wxPGValidationInfo& validationInfo) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ValidateValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ValidateValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_value = value;
            vab.m_valueValid = true;
            vab.m_result = wxColourProperty::ValidateValue(vab.m_value, validationInfo);
            return vab;
        }
    }
    return _CommonCallback17(blocked, (PyObject*)m_clientData, funcobj, value, validationInfo);
}


void PyColourProperty::RefreshChildren()
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_RefreshChildren_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_RefreshChildren_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxColourProperty::RefreshChildren();
        return;
    }
    _CommonCallback12(blocked, (PyObject*)m_clientData, funcobj);
}


wxString PyColourProperty::ValueToString(wxVariant& value, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ValueToString_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ValueToString_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxColourProperty::ValueToString(value, argFlags);
    }
    return _CommonCallback18(blocked, (PyObject*)m_clientData, funcobj, value, argFlags);
}


class PyFileProperty : public wxFileProperty {
public:
        PyFileProperty( const wxString& label = (*wxPGProperty::sm_wxPG_LABEL),
                    const wxString& name = (*wxPGProperty::sm_wxPG_LABEL),
                    const wxString& value = wxEmptyString );
    virtual ~PyFileProperty();
    void _SetSelf(PyObject *self);
    virtual const wxPGEditor* DoGetEditorClass() const;
    virtual bool ValidateValue(wxVariant& value, wxPGValidationInfo& validationInfo) const;
    virtual bool StringToValue(wxVariant& variant, const wxString& text, int argFlags) const;
    virtual bool IntToValue(wxVariant& variant, int number, int argFlags) const;
    virtual wxVariant ChildChanged( wxVariant& thisValue,
                                    int childIndex,
                                    wxVariant& childValue ) const;
    virtual wxVariant DoGetAttribute( const wxString& name ) const;
    virtual wxValidator* DoGetValidator() const;
    virtual wxVariant DoGetValue() const;
    virtual bool DoSetAttribute( const wxString& name, wxVariant& value );
    virtual wxPGCellRenderer* GetCellRenderer( int column ) const;
    virtual int GetChoiceSelection() const;
    virtual wxPGEditorDialogAdapter* GetEditorDialog() const;
    virtual wxString GetValueAsString( int argFlags = 0 ) const;
    virtual void OnCustomPaint( wxDC& dc,
                                const wxRect& rect,
                                wxPGPaintData& paintdata );
    virtual bool OnEvent( wxPropertyGrid* propgrid,
                          wxWindow* wnd_primary,
                          wxEvent& event );
    virtual wxSize OnMeasureImage( int item = -1 ) const;
    virtual void OnSetValue();
    virtual void OnValidationFailure( wxVariant& pendingValue );
    virtual wxString PyGetEditor() const;
    virtual wxPGVariantAndBool PyIntToValue( int number, int argFlags ) const;
    virtual wxPGVariantAndBool PyStringToValue( const wxString& text, int argFlags ) const;
    virtual wxPGVariantAndBool PyValidateValue( const wxVariant& value, wxPGValidationInfo& validationInfo ) const;
    virtual void RefreshChildren();
    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
private:
    void Init() { if ( !gs_funcNamesInitialized ) _InitFuncNames(); }
};

static PyObject* gs_PyFileProperty_pyClass = NULL;


PyFileProperty::PyFileProperty(const wxString& label, const wxString& name, const wxString& value)
    : wxFileProperty(label, name, value)
{
    Init();
}

PyFileProperty::~PyFileProperty()
{
    if (m_clientData) { _deleteOwningObject(m_clientData); m_clientData = NULL; }
}

void PyFileProperty::_SetSelf(PyObject *self)
{
    if ( !gs_PyFileProperty_pyClass )
    {
        gs_PyFileProperty_pyClass = PyObject_GetAttr(self, gs___class___Name);
        Py_DECREF(gs_PyFileProperty_pyClass);
    }
    if ( !m_clientData ) {
        m_clientData = self;
        Py_INCREF(self);
    }
}

const wxPGEditor* PyFileProperty::DoGetEditorClass() const
{
    return wxPropertyGridInterface::GetEditorByName(PyGetEditor());
}

bool PyFileProperty::ValidateValue(wxVariant& value, wxPGValidationInfo& validationInfo) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyValidateValue(value, validationInfo);
        if ( vab.m_valueValid )
            value = vab.m_value;
        return vab.m_result;
    }
    return wxFileProperty::ValidateValue(value, validationInfo);
}

bool PyFileProperty::StringToValue(wxVariant& variant, const wxString& text, int argFlags) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyStringToValue(text, argFlags);
        if ( vab.m_valueValid )
            variant = vab.m_value;
        return vab.m_result;
    }
    return wxFileProperty::StringToValue(variant, text, argFlags);
}

bool PyFileProperty::IntToValue(wxVariant& variant, int number, int argFlags) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyIntToValue(number, argFlags);
        if ( vab.m_valueValid )
            variant = vab.m_value;
        return vab.m_result;
    }
    return wxFileProperty::IntToValue(variant, number, argFlags);
}


wxVariant PyFileProperty::ChildChanged(wxVariant& thisValue, int childIndex, wxVariant& childValue) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ChildChanged_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ChildChanged_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFileProperty::ChildChanged(thisValue, childIndex, childValue);
    }
    return _CommonCallback0(blocked, (PyObject*)m_clientData, funcobj, thisValue, childIndex, childValue);
}


wxVariant PyFileProperty::DoGetAttribute(const wxString& name) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetAttribute_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetAttribute_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFileProperty::DoGetAttribute(name);
    }
    return _CommonCallback1(blocked, (PyObject*)m_clientData, funcobj, name);
}


wxValidator* PyFileProperty::DoGetValidator() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetValidator_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetValidator_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFileProperty::DoGetValidator();
    }
    return _CommonCallback2(blocked, (PyObject*)m_clientData, funcobj);
}


wxVariant PyFileProperty::DoGetValue() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFileProperty::DoGetValue();
    }
    return _CommonCallback3(blocked, (PyObject*)m_clientData, funcobj);
}


bool PyFileProperty::DoSetAttribute(const wxString& name, wxVariant& value)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoSetAttribute_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoSetAttribute_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFileProperty::DoSetAttribute(name, value);
    }
    return _CommonCallback4(blocked, (PyObject*)m_clientData, funcobj, name, value);
}


wxPGCellRenderer* PyFileProperty::GetCellRenderer(int column) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetCellRenderer_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetCellRenderer_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFileProperty::GetCellRenderer(column);
    }
    return _CommonCallback5(blocked, (PyObject*)m_clientData, funcobj, column);
}


int PyFileProperty::GetChoiceSelection() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetChoiceSelection_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetChoiceSelection_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFileProperty::GetChoiceSelection();
    }
    return _CommonCallback6(blocked, (PyObject*)m_clientData, funcobj);
}


wxPGEditorDialogAdapter* PyFileProperty::GetEditorDialog() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetEditorDialog_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetEditorDialog_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFileProperty::GetEditorDialog();
    }
    return _CommonCallback7(blocked, (PyObject*)m_clientData, funcobj);
}


wxString PyFileProperty::GetValueAsString(int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetValueAsString_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetValueAsString_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFileProperty::GetValueAsString(argFlags);
    }
    return _CommonCallback8(blocked, (PyObject*)m_clientData, funcobj, argFlags);
}


void PyFileProperty::OnCustomPaint(wxDC& dc, const wxRect& rect, wxPGPaintData& paintdata)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnCustomPaint_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnCustomPaint_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxFileProperty::OnCustomPaint(dc, rect, paintdata);
        return;
    }
    _CommonCallback9(blocked, (PyObject*)m_clientData, funcobj, dc, rect, paintdata);
}


bool PyFileProperty::OnEvent(wxPropertyGrid* propgrid, wxWindow* wnd_primary, wxEvent& event)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnEvent_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnEvent_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFileProperty::OnEvent(propgrid, wnd_primary, event);
    }
    return _CommonCallback10(blocked, (PyObject*)m_clientData, funcobj, propgrid, wnd_primary, event);
}


wxSize PyFileProperty::OnMeasureImage(int item) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnMeasureImage_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnMeasureImage_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFileProperty::OnMeasureImage(item);
    }
    return _CommonCallback11(blocked, (PyObject*)m_clientData, funcobj, item);
}


void PyFileProperty::OnSetValue()
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnSetValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnSetValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxFileProperty::OnSetValue();
        return;
    }
    _CommonCallback12(blocked, (PyObject*)m_clientData, funcobj);
}


void PyFileProperty::OnValidationFailure(wxVariant& pendingValue)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnValidationFailure_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnValidationFailure_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxFileProperty::OnValidationFailure(pendingValue);
        return;
    }
    _CommonCallback13(blocked, (PyObject*)m_clientData, funcobj, pendingValue);
}


wxString PyFileProperty::PyGetEditor() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetEditor_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetEditor_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            return wxT("TextCtrl");
        }
    }
    return _CommonCallback14(blocked, (PyObject*)m_clientData, funcobj);
}


wxPGVariantAndBool PyFileProperty::PyIntToValue(int number, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_IntToValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_IntToValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_result = wxFileProperty::IntToValue(vab.m_value, number, argFlags);
            if ( vab.m_result )
                vab.m_valueValid = true;
            return vab;
        }
    }
    return _CommonCallback15(blocked, (PyObject*)m_clientData, funcobj, number, argFlags);
}


wxPGVariantAndBool PyFileProperty::PyStringToValue(const wxString& text, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_StringToValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_StringToValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_result = wxFileProperty::StringToValue(vab.m_value, text, argFlags);
            if ( vab.m_result )
                vab.m_valueValid = true;
            return vab;
        }
    }
    return _CommonCallback16(blocked, (PyObject*)m_clientData, funcobj, text, argFlags);
}


wxPGVariantAndBool PyFileProperty::PyValidateValue(const wxVariant& value, wxPGValidationInfo& validationInfo) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ValidateValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ValidateValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_value = value;
            vab.m_valueValid = true;
            vab.m_result = wxFileProperty::ValidateValue(vab.m_value, validationInfo);
            return vab;
        }
    }
    return _CommonCallback17(blocked, (PyObject*)m_clientData, funcobj, value, validationInfo);
}


void PyFileProperty::RefreshChildren()
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_RefreshChildren_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_RefreshChildren_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxFileProperty::RefreshChildren();
        return;
    }
    _CommonCallback12(blocked, (PyObject*)m_clientData, funcobj);
}


wxString PyFileProperty::ValueToString(wxVariant& value, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ValueToString_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ValueToString_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxFileProperty::ValueToString(value, argFlags);
    }
    return _CommonCallback18(blocked, (PyObject*)m_clientData, funcobj, value, argFlags);
}


class PyIntProperty : public wxIntProperty {
public:
        PyIntProperty( const wxString& label = (*wxPGProperty::sm_wxPG_LABEL),
                   const wxString& name = (*wxPGProperty::sm_wxPG_LABEL),
                   long value = 0 );
    PyIntProperty( const wxString& label,
                   const wxString& name,
                   const wxLongLong& value );
    virtual ~PyIntProperty();
    void _SetSelf(PyObject *self);
    virtual const wxPGEditor* DoGetEditorClass() const;
    virtual bool ValidateValue(wxVariant& value, wxPGValidationInfo& validationInfo) const;
    virtual bool StringToValue(wxVariant& variant, const wxString& text, int argFlags) const;
    virtual bool IntToValue(wxVariant& variant, int number, int argFlags) const;
    virtual wxVariant ChildChanged( wxVariant& thisValue,
                                    int childIndex,
                                    wxVariant& childValue ) const;
    virtual wxVariant DoGetAttribute( const wxString& name ) const;
    virtual wxValidator* DoGetValidator() const;
    virtual wxVariant DoGetValue() const;
    virtual bool DoSetAttribute( const wxString& name, wxVariant& value );
    virtual wxPGCellRenderer* GetCellRenderer( int column ) const;
    virtual int GetChoiceSelection() const;
    virtual wxPGEditorDialogAdapter* GetEditorDialog() const;
    virtual wxString GetValueAsString( int argFlags = 0 ) const;
    virtual void OnCustomPaint( wxDC& dc,
                                const wxRect& rect,
                                wxPGPaintData& paintdata );
    virtual bool OnEvent( wxPropertyGrid* propgrid,
                          wxWindow* wnd_primary,
                          wxEvent& event );
    virtual wxSize OnMeasureImage( int item = -1 ) const;
    virtual void OnSetValue();
    virtual void OnValidationFailure( wxVariant& pendingValue );
    virtual wxString PyGetEditor() const;
    virtual wxPGVariantAndBool PyIntToValue( int number, int argFlags ) const;
    virtual wxPGVariantAndBool PyStringToValue( const wxString& text, int argFlags ) const;
    virtual wxPGVariantAndBool PyValidateValue( const wxVariant& value, wxPGValidationInfo& validationInfo ) const;
    virtual void RefreshChildren();
    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
private:
    void Init() { if ( !gs_funcNamesInitialized ) _InitFuncNames(); }
};

static PyObject* gs_PyIntProperty_pyClass = NULL;


PyIntProperty::PyIntProperty(const wxString& label, const wxString& name, long value)
    : wxIntProperty(label, name, value)
{
    Init();
}

PyIntProperty::PyIntProperty(const wxString& label, const wxString& name, const wxLongLong& value)
    : wxIntProperty(label, name, value)
{
    Init();
}

PyIntProperty::~PyIntProperty()
{
    if (m_clientData) { _deleteOwningObject(m_clientData); m_clientData = NULL; }
}

void PyIntProperty::_SetSelf(PyObject *self)
{
    if ( !gs_PyIntProperty_pyClass )
    {
        gs_PyIntProperty_pyClass = PyObject_GetAttr(self, gs___class___Name);
        Py_DECREF(gs_PyIntProperty_pyClass);
    }
    if ( !m_clientData ) {
        m_clientData = self;
        Py_INCREF(self);
    }
}

const wxPGEditor* PyIntProperty::DoGetEditorClass() const
{
    return wxPropertyGridInterface::GetEditorByName(PyGetEditor());
}

bool PyIntProperty::ValidateValue(wxVariant& value, wxPGValidationInfo& validationInfo) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyValidateValue(value, validationInfo);
        if ( vab.m_valueValid )
            value = vab.m_value;
        return vab.m_result;
    }
    return wxIntProperty::ValidateValue(value, validationInfo);
}

bool PyIntProperty::StringToValue(wxVariant& variant, const wxString& text, int argFlags) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyStringToValue(text, argFlags);
        if ( vab.m_valueValid )
            variant = vab.m_value;
        return vab.m_result;
    }
    return wxIntProperty::StringToValue(variant, text, argFlags);
}

bool PyIntProperty::IntToValue(wxVariant& variant, int number, int argFlags) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyIntToValue(number, argFlags);
        if ( vab.m_valueValid )
            variant = vab.m_value;
        return vab.m_result;
    }
    return wxIntProperty::IntToValue(variant, number, argFlags);
}


wxVariant PyIntProperty::ChildChanged(wxVariant& thisValue, int childIndex, wxVariant& childValue) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ChildChanged_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ChildChanged_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxIntProperty::ChildChanged(thisValue, childIndex, childValue);
    }
    return _CommonCallback0(blocked, (PyObject*)m_clientData, funcobj, thisValue, childIndex, childValue);
}


wxVariant PyIntProperty::DoGetAttribute(const wxString& name) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetAttribute_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetAttribute_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxIntProperty::DoGetAttribute(name);
    }
    return _CommonCallback1(blocked, (PyObject*)m_clientData, funcobj, name);
}


wxValidator* PyIntProperty::DoGetValidator() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetValidator_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetValidator_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxIntProperty::DoGetValidator();
    }
    return _CommonCallback2(blocked, (PyObject*)m_clientData, funcobj);
}


wxVariant PyIntProperty::DoGetValue() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxIntProperty::DoGetValue();
    }
    return _CommonCallback3(blocked, (PyObject*)m_clientData, funcobj);
}


bool PyIntProperty::DoSetAttribute(const wxString& name, wxVariant& value)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoSetAttribute_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoSetAttribute_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxIntProperty::DoSetAttribute(name, value);
    }
    return _CommonCallback4(blocked, (PyObject*)m_clientData, funcobj, name, value);
}


wxPGCellRenderer* PyIntProperty::GetCellRenderer(int column) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetCellRenderer_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetCellRenderer_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxIntProperty::GetCellRenderer(column);
    }
    return _CommonCallback5(blocked, (PyObject*)m_clientData, funcobj, column);
}


int PyIntProperty::GetChoiceSelection() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetChoiceSelection_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetChoiceSelection_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxIntProperty::GetChoiceSelection();
    }
    return _CommonCallback6(blocked, (PyObject*)m_clientData, funcobj);
}


wxPGEditorDialogAdapter* PyIntProperty::GetEditorDialog() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetEditorDialog_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetEditorDialog_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxIntProperty::GetEditorDialog();
    }
    return _CommonCallback7(blocked, (PyObject*)m_clientData, funcobj);
}


wxString PyIntProperty::GetValueAsString(int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetValueAsString_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetValueAsString_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxIntProperty::GetValueAsString(argFlags);
    }
    return _CommonCallback8(blocked, (PyObject*)m_clientData, funcobj, argFlags);
}


void PyIntProperty::OnCustomPaint(wxDC& dc, const wxRect& rect, wxPGPaintData& paintdata)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnCustomPaint_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnCustomPaint_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxIntProperty::OnCustomPaint(dc, rect, paintdata);
        return;
    }
    _CommonCallback9(blocked, (PyObject*)m_clientData, funcobj, dc, rect, paintdata);
}


bool PyIntProperty::OnEvent(wxPropertyGrid* propgrid, wxWindow* wnd_primary, wxEvent& event)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnEvent_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnEvent_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxIntProperty::OnEvent(propgrid, wnd_primary, event);
    }
    return _CommonCallback10(blocked, (PyObject*)m_clientData, funcobj, propgrid, wnd_primary, event);
}


wxSize PyIntProperty::OnMeasureImage(int item) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnMeasureImage_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnMeasureImage_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxIntProperty::OnMeasureImage(item);
    }
    return _CommonCallback11(blocked, (PyObject*)m_clientData, funcobj, item);
}


void PyIntProperty::OnSetValue()
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnSetValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnSetValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxIntProperty::OnSetValue();
        return;
    }
    _CommonCallback12(blocked, (PyObject*)m_clientData, funcobj);
}


void PyIntProperty::OnValidationFailure(wxVariant& pendingValue)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnValidationFailure_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnValidationFailure_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxIntProperty::OnValidationFailure(pendingValue);
        return;
    }
    _CommonCallback13(blocked, (PyObject*)m_clientData, funcobj, pendingValue);
}


wxString PyIntProperty::PyGetEditor() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetEditor_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetEditor_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            return wxT("TextCtrl");
        }
    }
    return _CommonCallback14(blocked, (PyObject*)m_clientData, funcobj);
}


wxPGVariantAndBool PyIntProperty::PyIntToValue(int number, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_IntToValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_IntToValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_result = wxIntProperty::IntToValue(vab.m_value, number, argFlags);
            if ( vab.m_result )
                vab.m_valueValid = true;
            return vab;
        }
    }
    return _CommonCallback15(blocked, (PyObject*)m_clientData, funcobj, number, argFlags);
}


wxPGVariantAndBool PyIntProperty::PyStringToValue(const wxString& text, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_StringToValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_StringToValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_result = wxIntProperty::StringToValue(vab.m_value, text, argFlags);
            if ( vab.m_result )
                vab.m_valueValid = true;
            return vab;
        }
    }
    return _CommonCallback16(blocked, (PyObject*)m_clientData, funcobj, text, argFlags);
}


wxPGVariantAndBool PyIntProperty::PyValidateValue(const wxVariant& value, wxPGValidationInfo& validationInfo) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ValidateValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ValidateValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_value = value;
            vab.m_valueValid = true;
            vab.m_result = wxIntProperty::ValidateValue(vab.m_value, validationInfo);
            return vab;
        }
    }
    return _CommonCallback17(blocked, (PyObject*)m_clientData, funcobj, value, validationInfo);
}


void PyIntProperty::RefreshChildren()
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_RefreshChildren_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_RefreshChildren_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxIntProperty::RefreshChildren();
        return;
    }
    _CommonCallback12(blocked, (PyObject*)m_clientData, funcobj);
}


wxString PyIntProperty::ValueToString(wxVariant& value, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ValueToString_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ValueToString_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxIntProperty::ValueToString(value, argFlags);
    }
    return _CommonCallback18(blocked, (PyObject*)m_clientData, funcobj, value, argFlags);
}


class PyEditor : public wxPGEditor {
public:
        PyEditor();
    virtual ~PyEditor();
    void _SetSelf(PyObject *self);
    virtual bool GetValueFromControl(wxVariant& value, wxPGProperty* property, wxWindow* ctrl) const;
    virtual bool CanContainCustomImage() const;
    virtual wxPGWindowList CreateControls(wxPropertyGrid* propgrid,
                                          wxPGProperty* property,
                                          const wxPoint& pos,
                                          const wxSize& size) const;
    virtual void DeleteItem( wxWindow* ctrl, int index ) const;
    virtual void DrawValue( wxDC& dc,
                            const wxRect& rect,
                            wxPGProperty* property,
                            const wxString& text ) const;
    virtual wxString GetName() const;
    virtual int InsertItem( wxWindow* ctrl,
                            const wxString& label,
                            int index ) const;
    virtual bool OnEvent( wxPropertyGrid* propgrid, wxPGProperty* property,
        wxWindow* wnd_primary, wxEvent& event ) const;
    virtual void OnFocus( wxPGProperty* property, wxWindow* wnd ) const;
    virtual wxPGVariantAndBool PyGetValueFromControl( wxPGProperty* property, wxWindow* ctrl ) const;
    virtual void SetControlAppearance( wxPropertyGrid* pg,
                                       wxPGProperty* property,
                                       wxWindow* ctrl,
                                       const wxPGCell& appearance,
                                       const wxPGCell& oldAppearance,
                                       bool unspecified ) const;
    virtual void SetControlIntValue( wxPGProperty* property,
                                     wxWindow* ctrl,
                                     int value ) const;
    virtual void SetControlStringValue( wxPGProperty* property,
                                        wxWindow* ctrl,
                                        const wxString& txt ) const;
    virtual void SetValueToUnspecified( wxPGProperty* property,
                                        wxWindow* ctrl ) const;
    virtual void UpdateControl( wxPGProperty* property,
                                wxWindow* ctrl ) const;
private:
    void Init() { if ( !gs_funcNamesInitialized ) _InitFuncNames(); }
};

static PyObject* gs_PyEditor_pyClass = NULL;


PyEditor::PyEditor()
    : wxPGEditor()
{
    Init();
}

PyEditor::~PyEditor()
{
    if (m_clientData) { _deleteOwningObject(m_clientData); m_clientData = NULL; }
}

void PyEditor::_SetSelf(PyObject *self)
{
    if ( !gs_PyEditor_pyClass )
    {
        gs_PyEditor_pyClass = PyObject_GetAttr(self, gs___class___Name);
        Py_DECREF(gs_PyEditor_pyClass);
    }
    if ( !m_clientData ) {
        m_clientData = self;
        Py_INCREF(self);
    }
}

bool PyEditor::GetValueFromControl(wxVariant& value, wxPGProperty* property, wxWindow* ctrl) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyGetValueFromControl(property, ctrl);
        if ( vab.m_valueValid )
            value = vab.m_value;
        return vab.m_result;
    }
    return wxPGEditor::GetValueFromControl(value, property, ctrl);
}


bool PyEditor::CanContainCustomImage() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_CanContainCustomImage_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_CanContainCustomImage_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxPGEditor::CanContainCustomImage();
    }
    return _CommonCallback25(blocked, (PyObject*)m_clientData, funcobj);
}


wxPGWindowList PyEditor::CreateControls(wxPropertyGrid* propgrid, wxPGProperty* property, const wxPoint& pos, const wxSize& size) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_CreateControls_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_CreateControls_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        PyErr_SetString(PyExc_TypeError,"this method must be implemented");
        return wxPGWindowList();
    }
    return _CommonCallback26(blocked, (PyObject*)m_clientData, funcobj, propgrid, property, pos, size);
}


void PyEditor::DeleteItem(wxWindow* ctrl, int index) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DeleteItem_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DeleteItem_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxPGEditor::DeleteItem(ctrl, index);
        return;
    }
    _CommonCallback27(blocked, (PyObject*)m_clientData, funcobj, ctrl, index);
}


void PyEditor::DrawValue(wxDC& dc, const wxRect& rect, wxPGProperty* property, const wxString& text) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DrawValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DrawValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxPGEditor::DrawValue(dc, rect, property, text);
        return;
    }
    _CommonCallback28(blocked, (PyObject*)m_clientData, funcobj, dc, rect, property, text);
}


wxString PyEditor::GetName() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetName_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetName_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxPGEditor::GetName();
    }
    return _CommonCallback14(blocked, (PyObject*)m_clientData, funcobj);
}


int PyEditor::InsertItem(wxWindow* ctrl, const wxString& label, int index) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_InsertItem_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_InsertItem_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxPGEditor::InsertItem(ctrl, label, index);
    }
    return _CommonCallback29(blocked, (PyObject*)m_clientData, funcobj, ctrl, label, index);
}


bool PyEditor::OnEvent(wxPropertyGrid* propgrid, wxPGProperty* property, wxWindow* wnd_primary, wxEvent& event) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnEvent_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnEvent_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        PyErr_SetString(PyExc_TypeError,"this method must be implemented");
        return false;
    }
    return _CommonCallback30(blocked, (PyObject*)m_clientData, funcobj, propgrid, property, wnd_primary, event);
}


void PyEditor::OnFocus(wxPGProperty* property, wxWindow* wnd) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnFocus_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnFocus_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxPGEditor::OnFocus(property, wnd);
        return;
    }
    _CommonCallback31(blocked, (PyObject*)m_clientData, funcobj, property, wnd);
}


wxPGVariantAndBool PyEditor::PyGetValueFromControl(wxPGProperty* property, wxWindow* ctrl) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetValueFromControl_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetValueFromControl_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_result = wxPGEditor::GetValueFromControl(vab.m_value, property, ctrl);
            if ( vab.m_result )
                vab.m_valueValid = true;
            return vab;
        }
    }
    return _CommonCallback32(blocked, (PyObject*)m_clientData, funcobj, property, ctrl);
}


void PyEditor::SetControlAppearance(wxPropertyGrid* pg, wxPGProperty* property, wxWindow* ctrl, const wxPGCell& appearance, const wxPGCell& oldAppearance, bool unspecified) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_SetControlAppearance_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_SetControlAppearance_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxPGEditor::SetControlAppearance(pg, property, ctrl, appearance, oldAppearance, unspecified);
        return;
    }
    _CommonCallback33(blocked, (PyObject*)m_clientData, funcobj, pg, property, ctrl, appearance, oldAppearance, unspecified);
}


void PyEditor::SetControlIntValue(wxPGProperty* property, wxWindow* ctrl, int value) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_SetControlIntValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_SetControlIntValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxPGEditor::SetControlIntValue(property, ctrl, value);
        return;
    }
    _CommonCallback34(blocked, (PyObject*)m_clientData, funcobj, property, ctrl, value);
}


void PyEditor::SetControlStringValue(wxPGProperty* property, wxWindow* ctrl, const wxString& txt) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_SetControlStringValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_SetControlStringValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxPGEditor::SetControlStringValue(property, ctrl, txt);
        return;
    }
    _CommonCallback35(blocked, (PyObject*)m_clientData, funcobj, property, ctrl, txt);
}


void PyEditor::SetValueToUnspecified(wxPGProperty* property, wxWindow* ctrl) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_SetValueToUnspecified_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_SetValueToUnspecified_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxPGEditor::SetValueToUnspecified(property, ctrl);
        return;
    }
    _CommonCallback31(blocked, (PyObject*)m_clientData, funcobj, property, ctrl);
}


void PyEditor::UpdateControl(wxPGProperty* property, wxWindow* ctrl) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_UpdateControl_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_UpdateControl_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        PyErr_SetString(PyExc_TypeError,"this method must be implemented");
        return;
    }
    _CommonCallback31(blocked, (PyObject*)m_clientData, funcobj, property, ctrl);
}


class PyChoiceEditor : public wxPGChoiceEditor {
public:
        PyChoiceEditor();
    virtual ~PyChoiceEditor();
    void _SetSelf(PyObject *self);
    virtual bool GetValueFromControl(wxVariant& value, wxPGProperty* property, wxWindow* ctrl) const;
    virtual bool CanContainCustomImage() const;
    virtual wxPGWindowList CreateControls(wxPropertyGrid* propgrid,
                                          wxPGProperty* property,
                                          const wxPoint& pos,
                                          const wxSize& size) const;
    virtual void DeleteItem( wxWindow* ctrl, int index ) const;
    virtual void DrawValue( wxDC& dc,
                            const wxRect& rect,
                            wxPGProperty* property,
                            const wxString& text ) const;
    virtual wxString GetName() const;
    virtual int InsertItem( wxWindow* ctrl,
                            const wxString& label,
                            int index ) const;
    virtual bool OnEvent( wxPropertyGrid* propgrid,
                          wxPGProperty* property,
                          wxWindow* primaryCtrl,
                          wxEvent& event ) const;
    virtual void OnFocus( wxPGProperty* property, wxWindow* wnd ) const;
    virtual wxPGVariantAndBool PyGetValueFromControl( wxPGProperty* property, wxWindow* ctrl ) const;
    virtual void SetControlAppearance( wxPropertyGrid* pg,
                                       wxPGProperty* property,
                                       wxWindow* ctrl,
                                       const wxPGCell& appearance,
                                       const wxPGCell& oldAppearance,
                                       bool unspecified ) const;
    virtual void SetControlIntValue( wxPGProperty* property,
                                     wxWindow* ctrl,
                                     int value ) const;
    virtual void SetControlStringValue( wxPGProperty* property,
                                        wxWindow* ctrl,
                                        const wxString& txt ) const;
    virtual void SetValueToUnspecified( wxPGProperty* property,
                                        wxWindow* ctrl ) const;
    virtual void UpdateControl( wxPGProperty* property,
                                wxWindow* ctrl ) const;
private:
    void Init() { if ( !gs_funcNamesInitialized ) _InitFuncNames(); }
};

static PyObject* gs_PyChoiceEditor_pyClass = NULL;


PyChoiceEditor::PyChoiceEditor()
    : wxPGChoiceEditor()
{
    Init();
}

PyChoiceEditor::~PyChoiceEditor()
{
    if (m_clientData) { _deleteOwningObject(m_clientData); m_clientData = NULL; }
}

void PyChoiceEditor::_SetSelf(PyObject *self)
{
    if ( !gs_PyChoiceEditor_pyClass )
    {
        gs_PyChoiceEditor_pyClass = PyObject_GetAttr(self, gs___class___Name);
        Py_DECREF(gs_PyChoiceEditor_pyClass);
    }
    if ( !m_clientData ) {
        m_clientData = self;
        Py_INCREF(self);
    }
}

bool PyChoiceEditor::GetValueFromControl(wxVariant& value, wxPGProperty* property, wxWindow* ctrl) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyGetValueFromControl(property, ctrl);
        if ( vab.m_valueValid )
            value = vab.m_value;
        return vab.m_result;
    }
    return wxPGChoiceEditor::GetValueFromControl(value, property, ctrl);
}


bool PyChoiceEditor::CanContainCustomImage() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_CanContainCustomImage_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_CanContainCustomImage_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxPGChoiceEditor::CanContainCustomImage();
    }
    return _CommonCallback25(blocked, (PyObject*)m_clientData, funcobj);
}


wxPGWindowList PyChoiceEditor::CreateControls(wxPropertyGrid* propgrid, wxPGProperty* property, const wxPoint& pos, const wxSize& size) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_CreateControls_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_CreateControls_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxPGChoiceEditor::CreateControls(propgrid, property, pos, size);
    }
    return _CommonCallback26(blocked, (PyObject*)m_clientData, funcobj, propgrid, property, pos, size);
}


void PyChoiceEditor::DeleteItem(wxWindow* ctrl, int index) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DeleteItem_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DeleteItem_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxPGChoiceEditor::DeleteItem(ctrl, index);
        return;
    }
    _CommonCallback27(blocked, (PyObject*)m_clientData, funcobj, ctrl, index);
}


void PyChoiceEditor::DrawValue(wxDC& dc, const wxRect& rect, wxPGProperty* property, const wxString& text) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DrawValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DrawValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxPGChoiceEditor::DrawValue(dc, rect, property, text);
        return;
    }
    _CommonCallback28(blocked, (PyObject*)m_clientData, funcobj, dc, rect, property, text);
}


wxString PyChoiceEditor::GetName() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetName_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetName_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxPGChoiceEditor::GetName();
    }
    return _CommonCallback14(blocked, (PyObject*)m_clientData, funcobj);
}


int PyChoiceEditor::InsertItem(wxWindow* ctrl, const wxString& label, int index) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_InsertItem_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_InsertItem_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxPGChoiceEditor::InsertItem(ctrl, label, index);
    }
    return _CommonCallback29(blocked, (PyObject*)m_clientData, funcobj, ctrl, label, index);
}


bool PyChoiceEditor::OnEvent(wxPropertyGrid* propgrid, wxPGProperty* property, wxWindow* primaryCtrl, wxEvent& event) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnEvent_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnEvent_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxPGChoiceEditor::OnEvent(propgrid, property, primaryCtrl, event);
    }
    return _CommonCallback30(blocked, (PyObject*)m_clientData, funcobj, propgrid, property, primaryCtrl, event);
}


void PyChoiceEditor::OnFocus(wxPGProperty* property, wxWindow* wnd) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnFocus_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnFocus_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxPGChoiceEditor::OnFocus(property, wnd);
        return;
    }
    _CommonCallback31(blocked, (PyObject*)m_clientData, funcobj, property, wnd);
}


wxPGVariantAndBool PyChoiceEditor::PyGetValueFromControl(wxPGProperty* property, wxWindow* ctrl) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetValueFromControl_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetValueFromControl_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_result = wxPGChoiceEditor::GetValueFromControl(vab.m_value, property, ctrl);
            if ( vab.m_result )
                vab.m_valueValid = true;
            return vab;
        }
    }
    return _CommonCallback32(blocked, (PyObject*)m_clientData, funcobj, property, ctrl);
}


void PyChoiceEditor::SetControlAppearance(wxPropertyGrid* pg, wxPGProperty* property, wxWindow* ctrl, const wxPGCell& appearance, const wxPGCell& oldAppearance, bool unspecified) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_SetControlAppearance_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_SetControlAppearance_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxPGChoiceEditor::SetControlAppearance(pg, property, ctrl, appearance, oldAppearance, unspecified);
        return;
    }
    _CommonCallback33(blocked, (PyObject*)m_clientData, funcobj, pg, property, ctrl, appearance, oldAppearance, unspecified);
}


void PyChoiceEditor::SetControlIntValue(wxPGProperty* property, wxWindow* ctrl, int value) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_SetControlIntValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_SetControlIntValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxPGChoiceEditor::SetControlIntValue(property, ctrl, value);
        return;
    }
    _CommonCallback34(blocked, (PyObject*)m_clientData, funcobj, property, ctrl, value);
}


void PyChoiceEditor::SetControlStringValue(wxPGProperty* property, wxWindow* ctrl, const wxString& txt) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_SetControlStringValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_SetControlStringValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxPGChoiceEditor::SetControlStringValue(property, ctrl, txt);
        return;
    }
    _CommonCallback35(blocked, (PyObject*)m_clientData, funcobj, property, ctrl, txt);
}


void PyChoiceEditor::SetValueToUnspecified(wxPGProperty* property, wxWindow* ctrl) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_SetValueToUnspecified_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_SetValueToUnspecified_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxPGChoiceEditor::SetValueToUnspecified(property, ctrl);
        return;
    }
    _CommonCallback31(blocked, (PyObject*)m_clientData, funcobj, property, ctrl);
}


void PyChoiceEditor::UpdateControl(wxPGProperty* property, wxWindow* ctrl) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_UpdateControl_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_UpdateControl_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxPGChoiceEditor::UpdateControl(property, ctrl);
        return;
    }
    _CommonCallback31(blocked, (PyObject*)m_clientData, funcobj, property, ctrl);
}


class PyProperty : public wxPGProperty {
public:
        PyProperty();
    PyProperty( const wxString& label, const wxString& name );
    virtual ~PyProperty();
    void _SetSelf(PyObject *self);
    virtual const wxPGEditor* DoGetEditorClass() const;
    virtual bool ValidateValue(wxVariant& value, wxPGValidationInfo& validationInfo) const;
    virtual bool StringToValue(wxVariant& variant, const wxString& text, int argFlags) const;
    virtual bool IntToValue(wxVariant& variant, int number, int argFlags) const;
    virtual wxVariant ChildChanged( wxVariant& thisValue,
                                    int childIndex,
                                    wxVariant& childValue ) const;
    virtual wxVariant DoGetAttribute( const wxString& name ) const;
    virtual wxValidator* DoGetValidator () const;
    virtual wxVariant DoGetValue() const;
    virtual bool DoSetAttribute( const wxString& name, wxVariant& value );
    virtual wxPGCellRenderer* GetCellRenderer( int column ) const;
    virtual int GetChoiceSelection() const;
    virtual wxPGEditorDialogAdapter* GetEditorDialog() const;
    virtual wxString GetValueAsString( int argFlags = 0 ) const;
    virtual void OnCustomPaint( wxDC& dc,
                                const wxRect& rect,
                                wxPGPaintData& paintdata );
    virtual bool OnEvent( wxPropertyGrid* propgrid,
                          wxWindow* wnd_primary,
                          wxEvent& event );
    virtual wxSize OnMeasureImage( int item = -1 ) const;
    virtual void OnSetValue();
    virtual void OnValidationFailure( wxVariant& pendingValue );
    virtual wxString PyGetEditor() const;
    virtual wxPGVariantAndBool PyIntToValue( int number, int argFlags ) const;
    virtual wxPGVariantAndBool PyStringToValue( const wxString& text, int argFlags ) const;
    virtual wxPGVariantAndBool PyValidateValue( const wxVariant& value, wxPGValidationInfo& validationInfo ) const;
    virtual void RefreshChildren();
    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
private:
    void Init() { if ( !gs_funcNamesInitialized ) _InitFuncNames(); }
};

static PyObject* gs_PyProperty_pyClass = NULL;


PyProperty::PyProperty()
    : wxPGProperty()
{
    Init();
}

PyProperty::PyProperty(const wxString& label, const wxString& name)
    : wxPGProperty(label, name)
{
    Init();
}

PyProperty::~PyProperty()
{
    if (m_clientData) { _deleteOwningObject(m_clientData); m_clientData = NULL; }
}

void PyProperty::_SetSelf(PyObject *self)
{
    if ( !gs_PyProperty_pyClass )
    {
        gs_PyProperty_pyClass = PyObject_GetAttr(self, gs___class___Name);
        Py_DECREF(gs_PyProperty_pyClass);
    }
    if ( !m_clientData ) {
        m_clientData = self;
        Py_INCREF(self);
    }
}

const wxPGEditor* PyProperty::DoGetEditorClass() const
{
    return wxPropertyGridInterface::GetEditorByName(PyGetEditor());
}

bool PyProperty::ValidateValue(wxVariant& value, wxPGValidationInfo& validationInfo) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyValidateValue(value, validationInfo);
        if ( vab.m_valueValid )
            value = vab.m_value;
        return vab.m_result;
    }
    return wxPGProperty::ValidateValue(value, validationInfo);
}

bool PyProperty::StringToValue(wxVariant& variant, const wxString& text, int argFlags) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyStringToValue(text, argFlags);
        if ( vab.m_valueValid )
            variant = vab.m_value;
        return vab.m_result;
    }
    return wxPGProperty::StringToValue(variant, text, argFlags);
}

bool PyProperty::IntToValue(wxVariant& variant, int number, int argFlags) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyIntToValue(number, argFlags);
        if ( vab.m_valueValid )
            variant = vab.m_value;
        return vab.m_result;
    }
    return wxPGProperty::IntToValue(variant, number, argFlags);
}


wxVariant PyProperty::ChildChanged(wxVariant& thisValue, int childIndex, wxVariant& childValue) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ChildChanged_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ChildChanged_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxPGProperty::ChildChanged(thisValue, childIndex, childValue);
    }
    return _CommonCallback0(blocked, (PyObject*)m_clientData, funcobj, thisValue, childIndex, childValue);
}


wxVariant PyProperty::DoGetAttribute(const wxString& name) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetAttribute_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetAttribute_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxPGProperty::DoGetAttribute(name);
    }
    return _CommonCallback1(blocked, (PyObject*)m_clientData, funcobj, name);
}


wxValidator* PyProperty::DoGetValidator() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetValidator_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetValidator_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxPGProperty::DoGetValidator();
    }
    return _CommonCallback2(blocked, (PyObject*)m_clientData, funcobj);
}


wxVariant PyProperty::DoGetValue() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxPGProperty::DoGetValue();
    }
    return _CommonCallback3(blocked, (PyObject*)m_clientData, funcobj);
}


bool PyProperty::DoSetAttribute(const wxString& name, wxVariant& value)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoSetAttribute_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoSetAttribute_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxPGProperty::DoSetAttribute(name, value);
    }
    return _CommonCallback4(blocked, (PyObject*)m_clientData, funcobj, name, value);
}


wxPGCellRenderer* PyProperty::GetCellRenderer(int column) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetCellRenderer_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetCellRenderer_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxPGProperty::GetCellRenderer(column);
    }
    return _CommonCallback5(blocked, (PyObject*)m_clientData, funcobj, column);
}


int PyProperty::GetChoiceSelection() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetChoiceSelection_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetChoiceSelection_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxPGProperty::GetChoiceSelection();
    }
    return _CommonCallback6(blocked, (PyObject*)m_clientData, funcobj);
}


wxPGEditorDialogAdapter* PyProperty::GetEditorDialog() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetEditorDialog_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetEditorDialog_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxPGProperty::GetEditorDialog();
    }
    return _CommonCallback7(blocked, (PyObject*)m_clientData, funcobj);
}


wxString PyProperty::GetValueAsString(int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetValueAsString_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetValueAsString_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxPGProperty::GetValueAsString(argFlags);
    }
    return _CommonCallback8(blocked, (PyObject*)m_clientData, funcobj, argFlags);
}


void PyProperty::OnCustomPaint(wxDC& dc, const wxRect& rect, wxPGPaintData& paintdata)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnCustomPaint_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnCustomPaint_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxPGProperty::OnCustomPaint(dc, rect, paintdata);
        return;
    }
    _CommonCallback9(blocked, (PyObject*)m_clientData, funcobj, dc, rect, paintdata);
}


bool PyProperty::OnEvent(wxPropertyGrid* propgrid, wxWindow* wnd_primary, wxEvent& event)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnEvent_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnEvent_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxPGProperty::OnEvent(propgrid, wnd_primary, event);
    }
    return _CommonCallback10(blocked, (PyObject*)m_clientData, funcobj, propgrid, wnd_primary, event);
}


wxSize PyProperty::OnMeasureImage(int item) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnMeasureImage_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnMeasureImage_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxPGProperty::OnMeasureImage(item);
    }
    return _CommonCallback11(blocked, (PyObject*)m_clientData, funcobj, item);
}


void PyProperty::OnSetValue()
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnSetValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnSetValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxPGProperty::OnSetValue();
        return;
    }
    _CommonCallback12(blocked, (PyObject*)m_clientData, funcobj);
}


void PyProperty::OnValidationFailure(wxVariant& pendingValue)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnValidationFailure_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnValidationFailure_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxPGProperty::OnValidationFailure(pendingValue);
        return;
    }
    _CommonCallback13(blocked, (PyObject*)m_clientData, funcobj, pendingValue);
}


wxString PyProperty::PyGetEditor() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetEditor_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetEditor_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            return wxT("TextCtrl");
        }
    }
    return _CommonCallback14(blocked, (PyObject*)m_clientData, funcobj);
}


wxPGVariantAndBool PyProperty::PyIntToValue(int number, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_IntToValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_IntToValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_result = wxPGProperty::IntToValue(vab.m_value, number, argFlags);
            if ( vab.m_result )
                vab.m_valueValid = true;
            return vab;
        }
    }
    return _CommonCallback15(blocked, (PyObject*)m_clientData, funcobj, number, argFlags);
}


wxPGVariantAndBool PyProperty::PyStringToValue(const wxString& text, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_StringToValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_StringToValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_result = wxPGProperty::StringToValue(vab.m_value, text, argFlags);
            if ( vab.m_result )
                vab.m_valueValid = true;
            return vab;
        }
    }
    return _CommonCallback16(blocked, (PyObject*)m_clientData, funcobj, text, argFlags);
}


wxPGVariantAndBool PyProperty::PyValidateValue(const wxVariant& value, wxPGValidationInfo& validationInfo) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ValidateValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ValidateValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_value = value;
            vab.m_valueValid = true;
            vab.m_result = wxPGProperty::ValidateValue(vab.m_value, validationInfo);
            return vab;
        }
    }
    return _CommonCallback17(blocked, (PyObject*)m_clientData, funcobj, value, validationInfo);
}


void PyProperty::RefreshChildren()
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_RefreshChildren_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_RefreshChildren_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxPGProperty::RefreshChildren();
        return;
    }
    _CommonCallback12(blocked, (PyObject*)m_clientData, funcobj);
}


wxString PyProperty::ValueToString(wxVariant& value, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ValueToString_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ValueToString_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxPGProperty::ValueToString(value, argFlags);
    }
    return _CommonCallback18(blocked, (PyObject*)m_clientData, funcobj, value, argFlags);
}


class PyUIntProperty : public wxUIntProperty {
public:
        PyUIntProperty( const wxString& label = (*wxPGProperty::sm_wxPG_LABEL),
                    const wxString& name = (*wxPGProperty::sm_wxPG_LABEL),
                     long value = 0 );
    PyUIntProperty( const wxString& label,
                    const wxString& name,
                    const wxULongLong& value );
    virtual ~PyUIntProperty();
    void _SetSelf(PyObject *self);
    virtual const wxPGEditor* DoGetEditorClass() const;
    virtual bool ValidateValue(wxVariant& value, wxPGValidationInfo& validationInfo) const;
    virtual bool StringToValue(wxVariant& variant, const wxString& text, int argFlags) const;
    virtual bool IntToValue(wxVariant& variant, int number, int argFlags) const;
    virtual wxVariant ChildChanged( wxVariant& thisValue,
                                    int childIndex,
                                    wxVariant& childValue ) const;
    virtual wxVariant DoGetAttribute( const wxString& name ) const;
    virtual wxValidator* DoGetValidator () const;
    virtual wxVariant DoGetValue() const;
    virtual bool DoSetAttribute( const wxString& name, wxVariant& value );
    virtual wxPGCellRenderer* GetCellRenderer( int column ) const;
    virtual int GetChoiceSelection() const;
    virtual wxPGEditorDialogAdapter* GetEditorDialog() const;
    virtual wxString GetValueAsString( int argFlags = 0 ) const;
    virtual void OnCustomPaint( wxDC& dc,
                                const wxRect& rect,
                                wxPGPaintData& paintdata );
    virtual bool OnEvent( wxPropertyGrid* propgrid,
                          wxWindow* wnd_primary,
                          wxEvent& event );
    virtual wxSize OnMeasureImage( int item = -1 ) const;
    virtual void OnSetValue();
    virtual void OnValidationFailure( wxVariant& pendingValue );
    virtual wxString PyGetEditor() const;
    virtual wxPGVariantAndBool PyIntToValue( int number, int argFlags ) const;
    virtual wxPGVariantAndBool PyStringToValue( const wxString& text, int argFlags ) const;
    virtual wxPGVariantAndBool PyValidateValue( const wxVariant& value, wxPGValidationInfo& validationInfo ) const;
    virtual void RefreshChildren();
    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
private:
    void Init() { if ( !gs_funcNamesInitialized ) _InitFuncNames(); }
};

static PyObject* gs_PyUIntProperty_pyClass = NULL;


PyUIntProperty::PyUIntProperty(const wxString& label, const wxString& name, long value)
    : wxUIntProperty(label, name, value)
{
    Init();
}

PyUIntProperty::PyUIntProperty(const wxString& label, const wxString& name, const wxULongLong& value)
    : wxUIntProperty(label, name, value)
{
    Init();
}

PyUIntProperty::~PyUIntProperty()
{
    if (m_clientData) { _deleteOwningObject(m_clientData); m_clientData = NULL; }
}

void PyUIntProperty::_SetSelf(PyObject *self)
{
    if ( !gs_PyUIntProperty_pyClass )
    {
        gs_PyUIntProperty_pyClass = PyObject_GetAttr(self, gs___class___Name);
        Py_DECREF(gs_PyUIntProperty_pyClass);
    }
    if ( !m_clientData ) {
        m_clientData = self;
        Py_INCREF(self);
    }
}

const wxPGEditor* PyUIntProperty::DoGetEditorClass() const
{
    return wxPropertyGridInterface::GetEditorByName(PyGetEditor());
}

bool PyUIntProperty::ValidateValue(wxVariant& value, wxPGValidationInfo& validationInfo) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyValidateValue(value, validationInfo);
        if ( vab.m_valueValid )
            value = vab.m_value;
        return vab.m_result;
    }
    return wxUIntProperty::ValidateValue(value, validationInfo);
}

bool PyUIntProperty::StringToValue(wxVariant& variant, const wxString& text, int argFlags) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyStringToValue(text, argFlags);
        if ( vab.m_valueValid )
            variant = vab.m_value;
        return vab.m_result;
    }
    return wxUIntProperty::StringToValue(variant, text, argFlags);
}

bool PyUIntProperty::IntToValue(wxVariant& variant, int number, int argFlags) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyIntToValue(number, argFlags);
        if ( vab.m_valueValid )
            variant = vab.m_value;
        return vab.m_result;
    }
    return wxUIntProperty::IntToValue(variant, number, argFlags);
}


wxVariant PyUIntProperty::ChildChanged(wxVariant& thisValue, int childIndex, wxVariant& childValue) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ChildChanged_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ChildChanged_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxUIntProperty::ChildChanged(thisValue, childIndex, childValue);
    }
    return _CommonCallback0(blocked, (PyObject*)m_clientData, funcobj, thisValue, childIndex, childValue);
}


wxVariant PyUIntProperty::DoGetAttribute(const wxString& name) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetAttribute_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetAttribute_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxUIntProperty::DoGetAttribute(name);
    }
    return _CommonCallback1(blocked, (PyObject*)m_clientData, funcobj, name);
}


wxValidator* PyUIntProperty::DoGetValidator() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetValidator_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetValidator_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxUIntProperty::DoGetValidator();
    }
    return _CommonCallback2(blocked, (PyObject*)m_clientData, funcobj);
}


wxVariant PyUIntProperty::DoGetValue() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxUIntProperty::DoGetValue();
    }
    return _CommonCallback3(blocked, (PyObject*)m_clientData, funcobj);
}


bool PyUIntProperty::DoSetAttribute(const wxString& name, wxVariant& value)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoSetAttribute_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoSetAttribute_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxUIntProperty::DoSetAttribute(name, value);
    }
    return _CommonCallback4(blocked, (PyObject*)m_clientData, funcobj, name, value);
}


wxPGCellRenderer* PyUIntProperty::GetCellRenderer(int column) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetCellRenderer_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetCellRenderer_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxUIntProperty::GetCellRenderer(column);
    }
    return _CommonCallback5(blocked, (PyObject*)m_clientData, funcobj, column);
}


int PyUIntProperty::GetChoiceSelection() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetChoiceSelection_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetChoiceSelection_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxUIntProperty::GetChoiceSelection();
    }
    return _CommonCallback6(blocked, (PyObject*)m_clientData, funcobj);
}


wxPGEditorDialogAdapter* PyUIntProperty::GetEditorDialog() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetEditorDialog_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetEditorDialog_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxUIntProperty::GetEditorDialog();
    }
    return _CommonCallback7(blocked, (PyObject*)m_clientData, funcobj);
}


wxString PyUIntProperty::GetValueAsString(int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetValueAsString_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetValueAsString_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxUIntProperty::GetValueAsString(argFlags);
    }
    return _CommonCallback8(blocked, (PyObject*)m_clientData, funcobj, argFlags);
}


void PyUIntProperty::OnCustomPaint(wxDC& dc, const wxRect& rect, wxPGPaintData& paintdata)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnCustomPaint_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnCustomPaint_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxUIntProperty::OnCustomPaint(dc, rect, paintdata);
        return;
    }
    _CommonCallback9(blocked, (PyObject*)m_clientData, funcobj, dc, rect, paintdata);
}


bool PyUIntProperty::OnEvent(wxPropertyGrid* propgrid, wxWindow* wnd_primary, wxEvent& event)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnEvent_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnEvent_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxUIntProperty::OnEvent(propgrid, wnd_primary, event);
    }
    return _CommonCallback10(blocked, (PyObject*)m_clientData, funcobj, propgrid, wnd_primary, event);
}


wxSize PyUIntProperty::OnMeasureImage(int item) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnMeasureImage_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnMeasureImage_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxUIntProperty::OnMeasureImage(item);
    }
    return _CommonCallback11(blocked, (PyObject*)m_clientData, funcobj, item);
}


void PyUIntProperty::OnSetValue()
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnSetValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnSetValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxUIntProperty::OnSetValue();
        return;
    }
    _CommonCallback12(blocked, (PyObject*)m_clientData, funcobj);
}


void PyUIntProperty::OnValidationFailure(wxVariant& pendingValue)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnValidationFailure_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnValidationFailure_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxUIntProperty::OnValidationFailure(pendingValue);
        return;
    }
    _CommonCallback13(blocked, (PyObject*)m_clientData, funcobj, pendingValue);
}


wxString PyUIntProperty::PyGetEditor() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetEditor_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetEditor_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            return wxT("TextCtrl");
        }
    }
    return _CommonCallback14(blocked, (PyObject*)m_clientData, funcobj);
}


wxPGVariantAndBool PyUIntProperty::PyIntToValue(int number, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_IntToValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_IntToValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_result = wxUIntProperty::IntToValue(vab.m_value, number, argFlags);
            if ( vab.m_result )
                vab.m_valueValid = true;
            return vab;
        }
    }
    return _CommonCallback15(blocked, (PyObject*)m_clientData, funcobj, number, argFlags);
}


wxPGVariantAndBool PyUIntProperty::PyStringToValue(const wxString& text, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_StringToValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_StringToValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_result = wxUIntProperty::StringToValue(vab.m_value, text, argFlags);
            if ( vab.m_result )
                vab.m_valueValid = true;
            return vab;
        }
    }
    return _CommonCallback16(blocked, (PyObject*)m_clientData, funcobj, text, argFlags);
}


wxPGVariantAndBool PyUIntProperty::PyValidateValue(const wxVariant& value, wxPGValidationInfo& validationInfo) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ValidateValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ValidateValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_value = value;
            vab.m_valueValid = true;
            vab.m_result = wxUIntProperty::ValidateValue(vab.m_value, validationInfo);
            return vab;
        }
    }
    return _CommonCallback17(blocked, (PyObject*)m_clientData, funcobj, value, validationInfo);
}


void PyUIntProperty::RefreshChildren()
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_RefreshChildren_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_RefreshChildren_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxUIntProperty::RefreshChildren();
        return;
    }
    _CommonCallback12(blocked, (PyObject*)m_clientData, funcobj);
}


wxString PyUIntProperty::ValueToString(wxVariant& value, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ValueToString_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ValueToString_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxUIntProperty::ValueToString(value, argFlags);
    }
    return _CommonCallback18(blocked, (PyObject*)m_clientData, funcobj, value, argFlags);
}


class PyLongStringProperty : public wxLongStringProperty {
public:
        PyLongStringProperty( const wxString& label = (*wxPGProperty::sm_wxPG_LABEL),
                          const wxString& name = (*wxPGProperty::sm_wxPG_LABEL),
                          const wxString& value = wxEmptyString );
    virtual ~PyLongStringProperty();
    void _SetSelf(PyObject *self);
    virtual const wxPGEditor* DoGetEditorClass() const;
    virtual bool ValidateValue(wxVariant& value, wxPGValidationInfo& validationInfo) const;
    virtual bool StringToValue(wxVariant& variant, const wxString& text, int argFlags) const;
    virtual bool IntToValue(wxVariant& variant, int number, int argFlags) const;
    virtual wxVariant ChildChanged( wxVariant& thisValue,
                                    int childIndex,
                                    wxVariant& childValue ) const;
    virtual wxVariant DoGetAttribute( const wxString& name ) const;
    virtual wxValidator* DoGetValidator () const;
    virtual wxVariant DoGetValue() const;
    virtual bool DoSetAttribute( const wxString& name, wxVariant& value );
    virtual wxPGCellRenderer* GetCellRenderer( int column ) const;
    virtual int GetChoiceSelection() const;
    virtual wxPGEditorDialogAdapter* GetEditorDialog() const;
    virtual wxString GetValueAsString( int argFlags = 0 ) const;
    virtual bool OnButtonClick( wxPropertyGrid* propgrid, wxString& value );
    virtual void OnCustomPaint( wxDC& dc,
                                const wxRect& rect,
                                wxPGPaintData& paintdata );
    virtual bool OnEvent( wxPropertyGrid* propgrid,
                          wxWindow* primary, wxEvent& event );
    virtual wxSize OnMeasureImage( int item = -1 ) const;
    virtual void OnSetValue();
    virtual void OnValidationFailure( wxVariant& pendingValue );
    virtual wxString PyGetEditor() const;
    virtual wxPGVariantAndBool PyIntToValue( int number, int argFlags ) const;
    virtual wxPGVariantAndBool PyStringToValue( const wxString& text, int argFlags ) const;
    virtual wxPGVariantAndBool PyValidateValue( const wxVariant& value, wxPGValidationInfo& validationInfo ) const;
    virtual void RefreshChildren();
    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
private:
    void Init() { if ( !gs_funcNamesInitialized ) _InitFuncNames(); }
};

static PyObject* gs_PyLongStringProperty_pyClass = NULL;


PyLongStringProperty::PyLongStringProperty(const wxString& label, const wxString& name, const wxString& value)
    : wxLongStringProperty(label, name, value)
{
    Init();
}

PyLongStringProperty::~PyLongStringProperty()
{
    if (m_clientData) { _deleteOwningObject(m_clientData); m_clientData = NULL; }
}

void PyLongStringProperty::_SetSelf(PyObject *self)
{
    if ( !gs_PyLongStringProperty_pyClass )
    {
        gs_PyLongStringProperty_pyClass = PyObject_GetAttr(self, gs___class___Name);
        Py_DECREF(gs_PyLongStringProperty_pyClass);
    }
    if ( !m_clientData ) {
        m_clientData = self;
        Py_INCREF(self);
    }
}

const wxPGEditor* PyLongStringProperty::DoGetEditorClass() const
{
    return wxPropertyGridInterface::GetEditorByName(PyGetEditor());
}

bool PyLongStringProperty::ValidateValue(wxVariant& value, wxPGValidationInfo& validationInfo) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyValidateValue(value, validationInfo);
        if ( vab.m_valueValid )
            value = vab.m_value;
        return vab.m_result;
    }
    return wxLongStringProperty::ValidateValue(value, validationInfo);
}

bool PyLongStringProperty::StringToValue(wxVariant& variant, const wxString& text, int argFlags) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyStringToValue(text, argFlags);
        if ( vab.m_valueValid )
            variant = vab.m_value;
        return vab.m_result;
    }
    return wxLongStringProperty::StringToValue(variant, text, argFlags);
}

bool PyLongStringProperty::IntToValue(wxVariant& variant, int number, int argFlags) const
{
    if ( m_clientData )
    {
        wxPGVariantAndBool vab = PyIntToValue(number, argFlags);
        if ( vab.m_valueValid )
            variant = vab.m_value;
        return vab.m_result;
    }
    return wxLongStringProperty::IntToValue(variant, number, argFlags);
}


wxVariant PyLongStringProperty::ChildChanged(wxVariant& thisValue, int childIndex, wxVariant& childValue) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ChildChanged_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ChildChanged_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxLongStringProperty::ChildChanged(thisValue, childIndex, childValue);
    }
    return _CommonCallback0(blocked, (PyObject*)m_clientData, funcobj, thisValue, childIndex, childValue);
}


wxVariant PyLongStringProperty::DoGetAttribute(const wxString& name) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetAttribute_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetAttribute_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxLongStringProperty::DoGetAttribute(name);
    }
    return _CommonCallback1(blocked, (PyObject*)m_clientData, funcobj, name);
}


wxValidator* PyLongStringProperty::DoGetValidator() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetValidator_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetValidator_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxLongStringProperty::DoGetValidator();
    }
    return _CommonCallback2(blocked, (PyObject*)m_clientData, funcobj);
}


wxVariant PyLongStringProperty::DoGetValue() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoGetValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoGetValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxLongStringProperty::DoGetValue();
    }
    return _CommonCallback3(blocked, (PyObject*)m_clientData, funcobj);
}


bool PyLongStringProperty::DoSetAttribute(const wxString& name, wxVariant& value)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_DoSetAttribute_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_DoSetAttribute_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxLongStringProperty::DoSetAttribute(name, value);
    }
    return _CommonCallback4(blocked, (PyObject*)m_clientData, funcobj, name, value);
}


wxPGCellRenderer* PyLongStringProperty::GetCellRenderer(int column) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetCellRenderer_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetCellRenderer_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxLongStringProperty::GetCellRenderer(column);
    }
    return _CommonCallback5(blocked, (PyObject*)m_clientData, funcobj, column);
}


int PyLongStringProperty::GetChoiceSelection() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetChoiceSelection_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetChoiceSelection_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxLongStringProperty::GetChoiceSelection();
    }
    return _CommonCallback6(blocked, (PyObject*)m_clientData, funcobj);
}


wxPGEditorDialogAdapter* PyLongStringProperty::GetEditorDialog() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetEditorDialog_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetEditorDialog_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxLongStringProperty::GetEditorDialog();
    }
    return _CommonCallback7(blocked, (PyObject*)m_clientData, funcobj);
}


wxString PyLongStringProperty::GetValueAsString(int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetValueAsString_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetValueAsString_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxLongStringProperty::GetValueAsString(argFlags);
    }
    return _CommonCallback8(blocked, (PyObject*)m_clientData, funcobj, argFlags);
}


bool PyLongStringProperty::OnButtonClick(wxPropertyGrid* propgrid, wxString& value)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnButtonClick_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnButtonClick_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxLongStringProperty::OnButtonClick(propgrid, value);
    }
    PyObject* res;
    PyObject* py_propgrid;
    py_propgrid = SWIG_NewPointerObj((void*)propgrid, SWIGTYPE_p_wxPropertyGrid, 0);
    PyObject* py_value;
    #if wxUSE_UNICODE
        py_value = PyUnicode_FromWideChar((&value)->c_str(), (&value)->Len());
    #else
        py_value = PyString_FromStringAndSize((&value)->c_str(), (&value)->Len());
    #endif

    res = PyObject_CallFunctionObjArgs(funcobj, ((PyObject*)m_clientData), py_propgrid, py_value, NULL);
    Py_DECREF(funcobj);
    Py_DECREF(py_value);
    Py_DECREF(py_propgrid);
    if (PyErr_Occurred()) SWIG_fail;
    {
    bool retval;
        if ( !SWIG_IsOK(SWIG_AsVal_bool(res, &retval)) ) {
        PyErr_SetString(PyExc_TypeError,"expected bool");
        SWIG_fail;
    }
    Py_DECREF(res);
    wxPyEndBlockThreads(blocked);
    return retval;
    }
  fail:
    if ( PyErr_Occurred() ) PyErr_Print();
    wxPyEndBlockThreads(blocked);
    return false;
}


void PyLongStringProperty::OnCustomPaint(wxDC& dc, const wxRect& rect, wxPGPaintData& paintdata)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnCustomPaint_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnCustomPaint_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxLongStringProperty::OnCustomPaint(dc, rect, paintdata);
        return;
    }
    _CommonCallback9(blocked, (PyObject*)m_clientData, funcobj, dc, rect, paintdata);
}


bool PyLongStringProperty::OnEvent(wxPropertyGrid* propgrid, wxWindow* primary, wxEvent& event)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnEvent_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnEvent_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxLongStringProperty::OnEvent(propgrid, primary, event);
    }
    return _CommonCallback10(blocked, (PyObject*)m_clientData, funcobj, propgrid, primary, event);
}


wxSize PyLongStringProperty::OnMeasureImage(int item) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnMeasureImage_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnMeasureImage_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxLongStringProperty::OnMeasureImage(item);
    }
    return _CommonCallback11(blocked, (PyObject*)m_clientData, funcobj, item);
}


void PyLongStringProperty::OnSetValue()
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnSetValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnSetValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxLongStringProperty::OnSetValue();
        return;
    }
    _CommonCallback12(blocked, (PyObject*)m_clientData, funcobj);
}


void PyLongStringProperty::OnValidationFailure(wxVariant& pendingValue)
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_OnValidationFailure_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_OnValidationFailure_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxLongStringProperty::OnValidationFailure(pendingValue);
        return;
    }
    _CommonCallback13(blocked, (PyObject*)m_clientData, funcobj, pendingValue);
}


wxString PyLongStringProperty::PyGetEditor() const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_GetEditor_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_GetEditor_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            return wxT("TextCtrl");
        }
    }
    return _CommonCallback14(blocked, (PyObject*)m_clientData, funcobj);
}


wxPGVariantAndBool PyLongStringProperty::PyIntToValue(int number, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_IntToValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_IntToValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_result = wxLongStringProperty::IntToValue(vab.m_value, number, argFlags);
            if ( vab.m_result )
                vab.m_valueValid = true;
            return vab;
        }
    }
    return _CommonCallback15(blocked, (PyObject*)m_clientData, funcobj, number, argFlags);
}


wxPGVariantAndBool PyLongStringProperty::PyStringToValue(const wxString& text, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_StringToValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_StringToValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_result = wxLongStringProperty::StringToValue(vab.m_value, text, argFlags);
            if ( vab.m_result )
                vab.m_valueValid = true;
            return vab;
        }
    }
    return _CommonCallback16(blocked, (PyObject*)m_clientData, funcobj, text, argFlags);
}


wxPGVariantAndBool PyLongStringProperty::PyValidateValue(const wxVariant& value, wxPGValidationInfo& validationInfo) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ValidateValue_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ValidateValue_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        {
            wxPGVariantAndBool vab;
            vab.m_value = value;
            vab.m_valueValid = true;
            vab.m_result = wxLongStringProperty::ValidateValue(vab.m_value, validationInfo);
            return vab;
        }
    }
    return _CommonCallback17(blocked, (PyObject*)m_clientData, funcobj, value, validationInfo);
}


void PyLongStringProperty::RefreshChildren()
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_RefreshChildren_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_RefreshChildren_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        wxLongStringProperty::RefreshChildren();
        return;
    }
    _CommonCallback12(blocked, (PyObject*)m_clientData, funcobj);
}


wxString PyLongStringProperty::ValueToString(wxVariant& value, int argFlags) const
{
    wxPyBlock_t blocked = wxPyBeginBlockThreads();

    PyObject* cls_ = PyObject_GetAttr((PyObject*)m_clientData, gs___class___Name);
    PyObject* funcobj = NULL;
    if ( PyObject_HasAttr(cls_, gs_ValueToString_Name) == 1 ) funcobj = PyObject_GetAttr(cls_, gs_ValueToString_Name);
    Py_DECREF(cls_);
    if ( !funcobj || PyObject_HasAttr((PyObject*)m_clientData, gs__super_call_Name) == 1 )
    {
        wxPyEndBlockThreads(blocked);
        return wxLongStringProperty::ValueToString(value, argFlags);
    }
    return _CommonCallback18(blocked, (PyObject*)m_clientData, funcobj, value, argFlags);
}



#ifdef __cplusplus
extern "C" {
#endif
SWIGINTERN PyObject *_wrap_PGPaintData_m_parent_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGPaintData *arg1 = (wxPGPaintData *) 0 ;
  wxPropertyGrid *arg2 = (wxPropertyGrid *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args,"PGPaintData_m_parent_set",2,2,swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGPaintData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGPaintData_m_parent_set" "', expected argument " "1"" of type '" "wxPGPaintData *""'"); 
  }
  arg1 = reinterpret_cast< wxPGPaintData * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_wxPropertyGrid, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGPaintData_m_parent_set" "', expected argument " "2"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg2 = reinterpret_cast< wxPropertyGrid * >(argp2);
  if (arg1) (arg1)->m_parent = (wxPropertyGrid const *)arg2;
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGPaintData_m_parent_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGPaintData *arg1 = (wxPGPaintData *) 0 ;
  wxPropertyGrid *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGPaintData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGPaintData_m_parent_get" "', expected argument " "1"" of type '" "wxPGPaintData *""'"); 
  }
  arg1 = reinterpret_cast< wxPGPaintData * >(argp1);
  result = (wxPropertyGrid *) ((arg1)->m_parent);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGPaintData_m_choiceItem_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGPaintData *arg1 = (wxPGPaintData *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args,"PGPaintData_m_choiceItem_set",2,2,swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGPaintData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGPaintData_m_choiceItem_set" "', expected argument " "1"" of type '" "wxPGPaintData *""'"); 
  }
  arg1 = reinterpret_cast< wxPGPaintData * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGPaintData_m_choiceItem_set" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->m_choiceItem = arg2;
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGPaintData_m_choiceItem_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGPaintData *arg1 = (wxPGPaintData *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGPaintData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGPaintData_m_choiceItem_get" "', expected argument " "1"" of type '" "wxPGPaintData *""'"); 
  }
  arg1 = reinterpret_cast< wxPGPaintData * >(argp1);
  result = (int) ((arg1)->m_choiceItem);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGPaintData_m_drawnWidth_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGPaintData *arg1 = (wxPGPaintData *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args,"PGPaintData_m_drawnWidth_set",2,2,swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGPaintData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGPaintData_m_drawnWidth_set" "', expected argument " "1"" of type '" "wxPGPaintData *""'"); 
  }
  arg1 = reinterpret_cast< wxPGPaintData * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGPaintData_m_drawnWidth_set" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->m_drawnWidth = arg2;
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGPaintData_m_drawnWidth_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGPaintData *arg1 = (wxPGPaintData *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGPaintData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGPaintData_m_drawnWidth_get" "', expected argument " "1"" of type '" "wxPGPaintData *""'"); 
  }
  arg1 = reinterpret_cast< wxPGPaintData * >(argp1);
  result = (int) ((arg1)->m_drawnWidth);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGPaintData_m_drawnHeight_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGPaintData *arg1 = (wxPGPaintData *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args,"PGPaintData_m_drawnHeight_set",2,2,swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGPaintData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGPaintData_m_drawnHeight_set" "', expected argument " "1"" of type '" "wxPGPaintData *""'"); 
  }
  arg1 = reinterpret_cast< wxPGPaintData * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGPaintData_m_drawnHeight_set" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->m_drawnHeight = arg2;
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGPaintData_m_drawnHeight_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGPaintData *arg1 = (wxPGPaintData *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGPaintData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGPaintData_m_drawnHeight_get" "', expected argument " "1"" of type '" "wxPGPaintData *""'"); 
  }
  arg1 = reinterpret_cast< wxPGPaintData * >(argp1);
  result = (int) ((arg1)->m_drawnHeight);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PGPaintData_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxPGPaintData, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_PGCell__SWIG_0(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  wxPGCell *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGCell *)new wxPGCell();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGCell, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PGCell__SWIG_1(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPGCell *arg1 = 0 ;
  wxPGCell *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_wxPGCell,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_PGCell" "', expected argument " "1"" of type '" "wxPGCell const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_PGCell" "', expected argument " "1"" of type '" "wxPGCell const &""'"); 
  }
  arg1 = reinterpret_cast< wxPGCell * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGCell *)new wxPGCell((wxPGCell const &)*arg1);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGCell, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PGCell__SWIG_2(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxString *arg1 = 0 ;
  wxBitmap const &arg2_defvalue = wxNullBitmap ;
  wxBitmap *arg2 = (wxBitmap *) &arg2_defvalue ;
  wxColour const &arg3_defvalue = wxNullColour ;
  wxColour *arg3 = (wxColour *) &arg3_defvalue ;
  wxColour const &arg4_defvalue = wxNullColour ;
  wxColour *arg4 = (wxColour *) &arg4_defvalue ;
  wxPGCell *result = 0 ;
  bool temp1 = false ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  wxColour temp3 ;
  wxColour temp4 ;
  
  if ((nobjs < 1) || (nobjs > 4)) SWIG_fail;
  {
    arg1 = wxString_in_helper(swig_obj[0]);
    if (arg1 == NULL) SWIG_fail;
    temp1 = true;
  }
  if (swig_obj[1]) {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_wxBitmap,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_PGCell" "', expected argument " "2"" of type '" "wxBitmap const &""'"); 
    }
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_PGCell" "', expected argument " "2"" of type '" "wxBitmap const &""'"); 
    }
    arg2 = reinterpret_cast< wxBitmap * >(argp2);
  }
  if (swig_obj[2]) {
    {
      arg3 = &temp3;
      if ( ! wxColour_helper(swig_obj[2], &arg3)) SWIG_fail;
    }
  }
  if (swig_obj[3]) {
    {
      arg4 = &temp4;
      if ( ! wxColour_helper(swig_obj[3], &arg4)) SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGCell *)new wxPGCell((wxString const &)*arg1,(wxBitmap const &)*arg2,(wxColour const &)*arg3,(wxColour const &)*arg4);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGCell, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PGCell(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  
  if (!(argc = SWIG_Python_UnpackTuple(args,"new_PGCell",0,4,argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_PGCell__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_wxPGCell, 0);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_2;
    return _wrap_new_PGCell__SWIG_1(self, argc, argv);
  }
check_2:
  
  if ((argc >= 1) && (argc <= 4)) {
    return _wrap_new_PGCell__SWIG_2(self, argc, argv);
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"No matching function for overloaded 'new_PGCell'");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PGCell(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGCell *arg1 = (wxPGCell *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGCell, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PGCell" "', expected argument " "1"" of type '" "wxPGCell *""'"); 
  }
  arg1 = reinterpret_cast< wxPGCell * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete arg1;
    
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGCell_GetData__SWIG_0(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPGCell *arg1 = (wxPGCell *) 0 ;
  wxPGCellData *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGCell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGCell_GetData" "', expected argument " "1"" of type '" "wxPGCell *""'"); 
  }
  arg1 = reinterpret_cast< wxPGCell * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGCellData *)(arg1)->GetData();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGCellData, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGCell_GetData__SWIG_1(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPGCell *arg1 = (wxPGCell *) 0 ;
  wxPGCellData *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGCell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGCell_GetData" "', expected argument " "1"" of type '" "wxPGCell const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGCell * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGCellData *)((wxPGCell const *)arg1)->GetData();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGCellData, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGCell_GetData(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  
  if (!(argc = SWIG_Python_UnpackTuple(args,"PGCell_GetData",0,1,argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    return _wrap_PGCell_GetData__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    return _wrap_PGCell_GetData__SWIG_1(self, argc, argv);
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"No matching function for overloaded 'PGCell_GetData'");
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGCell_HasText(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGCell *arg1 = (wxPGCell *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGCell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGCell_HasText" "', expected argument " "1"" of type '" "wxPGCell const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGCell * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPGCell const *)arg1)->HasText();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGCell_SetEmptyData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGCell *arg1 = (wxPGCell *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGCell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGCell_SetEmptyData" "', expected argument " "1"" of type '" "wxPGCell *""'"); 
  }
  arg1 = reinterpret_cast< wxPGCell * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetEmptyData();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGCell_MergeFrom(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGCell *arg1 = (wxPGCell *) 0 ;
  wxPGCell *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "srcCell", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGCell_MergeFrom",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGCell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGCell_MergeFrom" "', expected argument " "1"" of type '" "wxPGCell *""'"); 
  }
  arg1 = reinterpret_cast< wxPGCell * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_wxPGCell,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGCell_MergeFrom" "', expected argument " "2"" of type '" "wxPGCell const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PGCell_MergeFrom" "', expected argument " "2"" of type '" "wxPGCell const &""'"); 
  }
  arg2 = reinterpret_cast< wxPGCell * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->MergeFrom((wxPGCell const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGCell_SetText(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGCell *arg1 = (wxPGCell *) 0 ;
  wxString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "text", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGCell_SetText",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGCell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGCell_SetText" "', expected argument " "1"" of type '" "wxPGCell *""'"); 
  }
  arg1 = reinterpret_cast< wxPGCell * >(argp1);
  {
    arg2 = wxString_in_helper(obj1);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetText((wxString const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGCell_SetBitmap(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGCell *arg1 = (wxPGCell *) 0 ;
  wxBitmap *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "bitmap", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGCell_SetBitmap",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGCell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGCell_SetBitmap" "', expected argument " "1"" of type '" "wxPGCell *""'"); 
  }
  arg1 = reinterpret_cast< wxPGCell * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_wxBitmap,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGCell_SetBitmap" "', expected argument " "2"" of type '" "wxBitmap const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PGCell_SetBitmap" "', expected argument " "2"" of type '" "wxBitmap const &""'"); 
  }
  arg2 = reinterpret_cast< wxBitmap * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetBitmap((wxBitmap const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGCell_SetFgCol(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGCell *arg1 = (wxPGCell *) 0 ;
  wxColour *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  wxColour temp2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "col", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGCell_SetFgCol",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGCell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGCell_SetFgCol" "', expected argument " "1"" of type '" "wxPGCell *""'"); 
  }
  arg1 = reinterpret_cast< wxPGCell * >(argp1);
  {
    arg2 = &temp2;
    if ( ! wxColour_helper(obj1, &arg2)) SWIG_fail;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetFgCol((wxColour const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGCell_SetFont(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGCell *arg1 = (wxPGCell *) 0 ;
  wxFont *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "font", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGCell_SetFont",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGCell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGCell_SetFont" "', expected argument " "1"" of type '" "wxPGCell *""'"); 
  }
  arg1 = reinterpret_cast< wxPGCell * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_wxFont,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGCell_SetFont" "', expected argument " "2"" of type '" "wxFont const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PGCell_SetFont" "', expected argument " "2"" of type '" "wxFont const &""'"); 
  }
  arg2 = reinterpret_cast< wxFont * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetFont((wxFont const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGCell_SetBgCol(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGCell *arg1 = (wxPGCell *) 0 ;
  wxColour *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  wxColour temp2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "col", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGCell_SetBgCol",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGCell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGCell_SetBgCol" "', expected argument " "1"" of type '" "wxPGCell *""'"); 
  }
  arg1 = reinterpret_cast< wxPGCell * >(argp1);
  {
    arg2 = &temp2;
    if ( ! wxColour_helper(obj1, &arg2)) SWIG_fail;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetBgCol((wxColour const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGCell_GetText(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGCell *arg1 = (wxPGCell *) 0 ;
  wxString *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGCell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGCell_GetText" "', expected argument " "1"" of type '" "wxPGCell const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGCell * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxString const &_result_ref = ((wxPGCell const *)arg1)->GetText();
      result = (wxString *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
#if wxUSE_UNICODE
    resultobj = PyUnicode_FromWideChar(result->c_str(), result->Len());
#else
    resultobj = PyString_FromStringAndSize(result->c_str(), result->Len());
#endif
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGCell_GetBitmap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGCell *arg1 = (wxPGCell *) 0 ;
  wxBitmap *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGCell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGCell_GetBitmap" "', expected argument " "1"" of type '" "wxPGCell const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGCell * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxBitmap const &_result_ref = ((wxPGCell const *)arg1)->GetBitmap();
      result = (wxBitmap *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    wxBitmap* resultptr = new wxBitmap(*result);
    resultobj = SWIG_NewPointerObj((void*)(resultptr), SWIGTYPE_p_wxBitmap, 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGCell_GetFgCol(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGCell *arg1 = (wxPGCell *) 0 ;
  wxColour *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGCell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGCell_GetFgCol" "', expected argument " "1"" of type '" "wxPGCell const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGCell * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxColour const &_result_ref = ((wxPGCell const *)arg1)->GetFgCol();
      result = (wxColour *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxColour, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGCell_GetFont(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGCell *arg1 = (wxPGCell *) 0 ;
  wxFont *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGCell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGCell_GetFont" "', expected argument " "1"" of type '" "wxPGCell const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGCell * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxFont const &_result_ref = ((wxPGCell const *)arg1)->GetFont();
      result = (wxFont *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    wxFont* resultptr = new wxFont(*result);
    resultobj = SWIG_NewPointerObj((void*)(resultptr), SWIGTYPE_p_wxFont, 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGCell_GetBgCol(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGCell *arg1 = (wxPGCell *) 0 ;
  wxColour *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGCell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGCell_GetBgCol" "', expected argument " "1"" of type '" "wxPGCell const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGCell * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxColour const &_result_ref = ((wxPGCell const *)arg1)->GetBgCol();
      result = (wxColour *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxColour, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGCell_IsInvalid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGCell *arg1 = (wxPGCell *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGCell, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGCell_IsInvalid" "', expected argument " "1"" of type '" "wxPGCell const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGCell * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPGCell const *)arg1)->IsInvalid();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PGCell_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxPGCell, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PGCell_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_PGChoices__SWIG_0(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  wxPGChoices *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGChoices *)new wxPGChoices();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGChoices, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PGChoices__SWIG_1(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPGChoices *arg1 = 0 ;
  wxPGChoices *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_wxPGChoices,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_PGChoices" "', expected argument " "1"" of type '" "wxPGChoices const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_PGChoices" "', expected argument " "1"" of type '" "wxPGChoices const &""'"); 
  }
  arg1 = reinterpret_cast< wxPGChoices * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGChoices *)new wxPGChoices((wxPGChoices const &)*arg1);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGChoices, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PGChoices__SWIG_2(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxChar **arg1 = (wxChar **) 0 ;
  long *arg2 = (long *) NULL ;
  wxPGChoices *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_p_wxChar, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_PGChoices" "', expected argument " "1"" of type '" "wxChar const *const *""'"); 
  }
  arg1 = reinterpret_cast< wxChar ** >(argp1);
  if (swig_obj[1]) {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_long, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_PGChoices" "', expected argument " "2"" of type '" "long const *""'"); 
    }
    arg2 = reinterpret_cast< long * >(argp2);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGChoices *)new wxPGChoices((wxChar const *const *)arg1,(long const *)arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGChoices, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PGChoices__SWIG_3(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxArrayString *arg1 = 0 ;
  wxArrayInt const &arg2_defvalue = wxArrayInt() ;
  wxArrayInt *arg2 = (wxArrayInt *) &arg2_defvalue ;
  wxPGChoices *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  
  if ((nobjs < 1) || (nobjs > 2)) SWIG_fail;
  {
    if (! PySequence_Check(swig_obj[0])) {
      PyErr_SetString(PyExc_TypeError, "Sequence of strings expected.");
      SWIG_fail;
    }
    arg1 = new wxArrayString;
    temp1 = true;
    int i, len=PySequence_Length(swig_obj[0]);
    for (i=0; i<len; i++) {
      PyObject* item = PySequence_GetItem(swig_obj[0], i);
      wxString* s = wxString_in_helper(item);
      if (PyErr_Occurred())  SWIG_fail;
      arg1->Add(*s);
      delete s;
      Py_DECREF(item);
    }
  }
  if (swig_obj[1]) {
    {
      if (! PySequence_Check(swig_obj[1])) {
        PyErr_SetString(PyExc_TypeError, "Sequence of integers expected.");
        SWIG_fail;
      }
      arg2 = new wxArrayInt;
      temp2 = true;
      int i, len=PySequence_Length(swig_obj[1]);
      for (i=0; i<len; i++) {
        PyObject* item = PySequence_GetItem(swig_obj[1], i);
        PyObject* number  = PyNumber_Int(item);
        if (!number) {
          PyErr_SetString(PyExc_TypeError, "Sequence of integers expected.");
          SWIG_fail;
        }       
        arg2->Add(PyInt_AS_LONG(number));
        Py_DECREF(item);
        Py_DECREF(number);
      }
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGChoices *)new wxPGChoices((wxArrayString const &)*arg1,(wxArrayInt const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGChoices, SWIG_POINTER_NEW |  0 );
  {
    if (temp1) delete arg1;
  }
  {
    if (temp2) delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp1) delete arg1;
  }
  {
    if (temp2) delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PGChoices__SWIG_4(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPGChoicesData *arg1 = (wxPGChoicesData *) 0 ;
  wxPGChoices *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGChoicesData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_PGChoices" "', expected argument " "1"" of type '" "wxPGChoicesData *""'"); 
  }
  arg1 = reinterpret_cast< wxPGChoicesData * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGChoices *)new wxPGChoices(arg1);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGChoices, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PGChoices(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  
  if (!(argc = SWIG_Python_UnpackTuple(args,"new_PGChoices",0,2,argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_PGChoices__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_wxPGChoices, 0);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_2;
    return _wrap_new_PGChoices__SWIG_1(self, argc, argv);
  }
check_2:
  
  if ((argc >= 1) && (argc <= 2)) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_p_wxChar, 0);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_3;
    if (argc > 1) {
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_long, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_3;
    }
    return _wrap_new_PGChoices__SWIG_2(self, argc, argv);
  }
check_3:
  
  if ((argc >= 1) && (argc <= 2)) {
    int _v = 0;
    {
      int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_wxArrayString, 0);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_4;
    return _wrap_new_PGChoices__SWIG_3(self, argc, argv);
  }
check_4:
  
  if (argc == 1) {
    return _wrap_new_PGChoices__SWIG_4(self, argc, argv);
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"No matching function for overloaded 'new_PGChoices'");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PGChoices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGChoices *arg1 = (wxPGChoices *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGChoices, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PGChoices" "', expected argument " "1"" of type '" "wxPGChoices *""'"); 
  }
  arg1 = reinterpret_cast< wxPGChoices * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete arg1;
    
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGChoices_Add__SWIG_0(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPGChoices *arg1 = (wxPGChoices *) 0 ;
  wxChar **arg2 = (wxChar **) 0 ;
  wxPGChoices::ValArrItem *arg3 = (wxPGChoices::ValArrItem *) NULL ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGChoices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGChoices_Add" "', expected argument " "1"" of type '" "wxPGChoices *""'"); 
  }
  arg1 = reinterpret_cast< wxPGChoices * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_p_wxChar, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGChoices_Add" "', expected argument " "2"" of type '" "wxChar const *const *""'"); 
  }
  arg2 = reinterpret_cast< wxChar ** >(argp2);
  if (swig_obj[2]) {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_long, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PGChoices_Add" "', expected argument " "3"" of type '" "wxPGChoices::ValArrItem const *""'"); 
    }
    arg3 = reinterpret_cast< wxPGChoices::ValArrItem * >(argp3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->Add((wxChar const *const *)arg2,(wxPGChoices::ValArrItem const *)arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGChoices_Add__SWIG_1(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPGChoices *arg1 = (wxPGChoices *) 0 ;
  wxArrayString *arg2 = 0 ;
  wxArrayInt const &arg3_defvalue = wxArrayInt() ;
  wxArrayInt *arg3 = (wxArrayInt *) &arg3_defvalue ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  bool temp3 = false ;
  
  if ((nobjs < 2) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGChoices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGChoices_Add" "', expected argument " "1"" of type '" "wxPGChoices *""'"); 
  }
  arg1 = reinterpret_cast< wxPGChoices * >(argp1);
  {
    if (! PySequence_Check(swig_obj[1])) {
      PyErr_SetString(PyExc_TypeError, "Sequence of strings expected.");
      SWIG_fail;
    }
    arg2 = new wxArrayString;
    temp2 = true;
    int i, len=PySequence_Length(swig_obj[1]);
    for (i=0; i<len; i++) {
      PyObject* item = PySequence_GetItem(swig_obj[1], i);
      wxString* s = wxString_in_helper(item);
      if (PyErr_Occurred())  SWIG_fail;
      arg2->Add(*s);
      delete s;
      Py_DECREF(item);
    }
  }
  if (swig_obj[2]) {
    {
      if (! PySequence_Check(swig_obj[2])) {
        PyErr_SetString(PyExc_TypeError, "Sequence of integers expected.");
        SWIG_fail;
      }
      arg3 = new wxArrayInt;
      temp3 = true;
      int i, len=PySequence_Length(swig_obj[2]);
      for (i=0; i<len; i++) {
        PyObject* item = PySequence_GetItem(swig_obj[2], i);
        PyObject* number  = PyNumber_Int(item);
        if (!number) {
          PyErr_SetString(PyExc_TypeError, "Sequence of integers expected.");
          SWIG_fail;
        }       
        arg3->Add(PyInt_AS_LONG(number));
        Py_DECREF(item);
        Py_DECREF(number);
      }
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->Add((wxArrayString const &)*arg2,(wxArrayInt const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    if (temp2) delete arg2;
  }
  {
    if (temp3) delete arg3;
  }
  return resultobj;
fail:
  {
    if (temp2) delete arg2;
  }
  {
    if (temp3) delete arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGChoices_Add__SWIG_2(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPGChoices *arg1 = (wxPGChoices *) 0 ;
  wxString *arg2 = 0 ;
  int arg3 = (int) INT_MAX ;
  wxPGChoiceEntry *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  int val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGChoices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGChoices_Add" "', expected argument " "1"" of type '" "wxPGChoices *""'"); 
  }
  arg1 = reinterpret_cast< wxPGChoices * >(argp1);
  {
    arg2 = wxString_in_helper(swig_obj[1]);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  if (swig_obj[2]) {
    ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PGChoices_Add" "', expected argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxPGChoiceEntry &_result_ref = (arg1)->Add((wxString const &)*arg2,arg3);
      result = (wxPGChoiceEntry *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGChoiceEntry, 0 |  0 );
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGChoices_Add__SWIG_3(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPGChoices *arg1 = (wxPGChoices *) 0 ;
  wxString *arg2 = 0 ;
  wxBitmap *arg3 = 0 ;
  int arg4 = (int) INT_MAX ;
  wxPGChoiceEntry *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGChoices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGChoices_Add" "', expected argument " "1"" of type '" "wxPGChoices *""'"); 
  }
  arg1 = reinterpret_cast< wxPGChoices * >(argp1);
  {
    arg2 = wxString_in_helper(swig_obj[1]);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_wxBitmap,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PGChoices_Add" "', expected argument " "3"" of type '" "wxBitmap const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PGChoices_Add" "', expected argument " "3"" of type '" "wxBitmap const &""'"); 
  }
  arg3 = reinterpret_cast< wxBitmap * >(argp3);
  if (swig_obj[3]) {
    ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "PGChoices_Add" "', expected argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxPGChoiceEntry &_result_ref = (arg1)->Add((wxString const &)*arg2,(wxBitmap const &)*arg3,arg4);
      result = (wxPGChoiceEntry *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGChoiceEntry, 0 |  0 );
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGChoices_Add__SWIG_4(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPGChoices *arg1 = (wxPGChoices *) 0 ;
  wxPGChoiceEntry *arg2 = 0 ;
  wxPGChoiceEntry *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGChoices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGChoices_Add" "', expected argument " "1"" of type '" "wxPGChoices *""'"); 
  }
  arg1 = reinterpret_cast< wxPGChoices * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_wxPGChoiceEntry,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGChoices_Add" "', expected argument " "2"" of type '" "wxPGChoiceEntry const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PGChoices_Add" "', expected argument " "2"" of type '" "wxPGChoiceEntry const &""'"); 
  }
  arg2 = reinterpret_cast< wxPGChoiceEntry * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxPGChoiceEntry &_result_ref = (arg1)->Add((wxPGChoiceEntry const &)*arg2);
      result = (wxPGChoiceEntry *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGChoiceEntry, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGChoices_Add(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  
  if (!(argc = SWIG_Python_UnpackTuple(args,"PGChoices_Add",0,4,argv))) SWIG_fail;
  --argc;
  if ((argc >= 2) && (argc <= 3)) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_p_wxChar, 0);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_1;
    if (argc > 2) {
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_long, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
    }
    return _wrap_PGChoices_Add__SWIG_0(self, argc, argv);
  }
check_1:
  
  if ((argc >= 2) && (argc <= 3)) {
    int _v = 0;
    {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_wxArrayString, 0);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_2;
    if (argc > 2) {
      {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_wxArrayInt, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
    }
    return _wrap_PGChoices_Add__SWIG_1(self, argc, argv);
  }
check_2:
  
  if ((argc >= 2) && (argc <= 3)) {
    int _v = 0;
    {
      {
        _v = PyString_Check(argv[1]) || PyUnicode_Check(argv[1]);
      }
    }
    if (!_v) goto check_3;
    if (argc > 2) {
      {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_3;
    }
    return _wrap_PGChoices_Add__SWIG_2(self, argc, argv);
  }
check_3:
  
  if (argc == 2) {
    return _wrap_PGChoices_Add__SWIG_4(self, argc, argv);
  }
  if ((argc >= 3) && (argc <= 4)) {
    return _wrap_PGChoices_Add__SWIG_3(self, argc, argv);
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"No matching function for overloaded 'PGChoices_Add'");
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGChoices_AddAsSorted(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGChoices *arg1 = (wxPGChoices *) 0 ;
  wxString *arg2 = 0 ;
  int arg3 = (int) INT_MAX ;
  wxPGChoiceEntry *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "label",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PGChoices_AddAsSorted",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGChoices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGChoices_AddAsSorted" "', expected argument " "1"" of type '" "wxPGChoices *""'"); 
  }
  arg1 = reinterpret_cast< wxPGChoices * >(argp1);
  {
    arg2 = wxString_in_helper(obj1);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PGChoices_AddAsSorted" "', expected argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxPGChoiceEntry &_result_ref = (arg1)->AddAsSorted((wxString const &)*arg2,arg3);
      result = (wxPGChoiceEntry *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGChoiceEntry, 0 |  0 );
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGChoices_Assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGChoices *arg1 = (wxPGChoices *) 0 ;
  wxPGChoices *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "a", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGChoices_Assign",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGChoices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGChoices_Assign" "', expected argument " "1"" of type '" "wxPGChoices *""'"); 
  }
  arg1 = reinterpret_cast< wxPGChoices * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_wxPGChoices,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGChoices_Assign" "', expected argument " "2"" of type '" "wxPGChoices const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PGChoices_Assign" "', expected argument " "2"" of type '" "wxPGChoices const &""'"); 
  }
  arg2 = reinterpret_cast< wxPGChoices * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->Assign((wxPGChoices const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGChoices_AssignData(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGChoices *arg1 = (wxPGChoices *) 0 ;
  wxPGChoicesData *arg2 = (wxPGChoicesData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "data", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGChoices_AssignData",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGChoices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGChoices_AssignData" "', expected argument " "1"" of type '" "wxPGChoices *""'"); 
  }
  arg1 = reinterpret_cast< wxPGChoices * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxPGChoicesData, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGChoices_AssignData" "', expected argument " "2"" of type '" "wxPGChoicesData *""'"); 
  }
  arg2 = reinterpret_cast< wxPGChoicesData * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->AssignData(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGChoices_Clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGChoices *arg1 = (wxPGChoices *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGChoices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGChoices_Clear" "', expected argument " "1"" of type '" "wxPGChoices *""'"); 
  }
  arg1 = reinterpret_cast< wxPGChoices * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->Clear();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGChoices_Copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGChoices *arg1 = (wxPGChoices *) 0 ;
  wxPGChoices result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGChoices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGChoices_Copy" "', expected argument " "1"" of type '" "wxPGChoices const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGChoices * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPGChoices const *)arg1)->Copy();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new wxPGChoices(static_cast< const wxPGChoices& >(result))), SWIGTYPE_p_wxPGChoices, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGChoices_EnsureData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGChoices *arg1 = (wxPGChoices *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGChoices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGChoices_EnsureData" "', expected argument " "1"" of type '" "wxPGChoices *""'"); 
  }
  arg1 = reinterpret_cast< wxPGChoices * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->EnsureData();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGChoices_GetId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGChoices *arg1 = (wxPGChoices *) 0 ;
  wxPGChoicesId result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGChoices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGChoices_GetId" "', expected argument " "1"" of type '" "wxPGChoices const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGChoices * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGChoicesId)((wxPGChoices const *)arg1)->GetId();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGChoices_GetLabel(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGChoices *arg1 = (wxPGChoices *) 0 ;
  int arg2 ;
  wxString *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ind", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGChoices_GetLabel",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGChoices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGChoices_GetLabel" "', expected argument " "1"" of type '" "wxPGChoices const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGChoices * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGChoices_GetLabel" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxString const &_result_ref = ((wxPGChoices const *)arg1)->GetLabel(arg2);
      result = (wxString *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
#if wxUSE_UNICODE
    resultobj = PyUnicode_FromWideChar(result->c_str(), result->Len());
#else
    resultobj = PyString_FromStringAndSize(result->c_str(), result->Len());
#endif
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGChoices_GetCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGChoices *arg1 = (wxPGChoices *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGChoices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGChoices_GetCount" "', expected argument " "1"" of type '" "wxPGChoices const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGChoices * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPGChoices const *)arg1)->GetCount();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGChoices_GetValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGChoices *arg1 = (wxPGChoices *) 0 ;
  int arg2 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ind", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGChoices_GetValue",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGChoices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGChoices_GetValue" "', expected argument " "1"" of type '" "wxPGChoices const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGChoices * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGChoices_GetValue" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPGChoices const *)arg1)->GetValue(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGChoices_GetValuesForStrings(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGChoices *arg1 = (wxPGChoices *) 0 ;
  wxArrayString *arg2 = 0 ;
  wxArrayInt result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "strings", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGChoices_GetValuesForStrings",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGChoices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGChoices_GetValuesForStrings" "', expected argument " "1"" of type '" "wxPGChoices const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGChoices * >(argp1);
  {
    if (! PySequence_Check(obj1)) {
      PyErr_SetString(PyExc_TypeError, "Sequence of strings expected.");
      SWIG_fail;
    }
    arg2 = new wxArrayString;
    temp2 = true;
    int i, len=PySequence_Length(obj1);
    for (i=0; i<len; i++) {
      PyObject* item = PySequence_GetItem(obj1, i);
      wxString* s = wxString_in_helper(item);
      if (PyErr_Occurred())  SWIG_fail;
      arg2->Add(*s);
      delete s;
      Py_DECREF(item);
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPGChoices const *)arg1)->GetValuesForStrings((wxArrayString const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxArrayInt2PyList_helper(result);
  }
  {
    if (temp2) delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2) delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGChoices_GetIndicesForStrings(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGChoices *arg1 = (wxPGChoices *) 0 ;
  wxArrayString *arg2 = 0 ;
  wxArrayString *arg3 = (wxArrayString *) NULL ;
  wxArrayInt result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "strings",(char *) "unmatched", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PGChoices_GetIndicesForStrings",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGChoices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGChoices_GetIndicesForStrings" "', expected argument " "1"" of type '" "wxPGChoices const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGChoices * >(argp1);
  {
    if (! PySequence_Check(obj1)) {
      PyErr_SetString(PyExc_TypeError, "Sequence of strings expected.");
      SWIG_fail;
    }
    arg2 = new wxArrayString;
    temp2 = true;
    int i, len=PySequence_Length(obj1);
    for (i=0; i<len; i++) {
      PyObject* item = PySequence_GetItem(obj1, i);
      wxString* s = wxString_in_helper(item);
      if (PyErr_Occurred())  SWIG_fail;
      arg2->Add(*s);
      delete s;
      Py_DECREF(item);
    }
  }
  if (obj2) {
    res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_wxArrayString, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PGChoices_GetIndicesForStrings" "', expected argument " "3"" of type '" "wxArrayString *""'"); 
    }
    arg3 = reinterpret_cast< wxArrayString * >(argp3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPGChoices const *)arg1)->GetIndicesForStrings((wxArrayString const &)*arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxArrayInt2PyList_helper(result);
  }
  {
    if (temp2) delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2) delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGChoices_Index__SWIG_0(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPGChoices *arg1 = (wxPGChoices *) 0 ;
  wxString *arg2 = 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGChoices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGChoices_Index" "', expected argument " "1"" of type '" "wxPGChoices const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGChoices * >(argp1);
  {
    arg2 = wxString_in_helper(swig_obj[1]);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPGChoices const *)arg1)->Index((wxString const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGChoices_Index__SWIG_1(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPGChoices *arg1 = (wxPGChoices *) 0 ;
  int arg2 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGChoices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGChoices_Index" "', expected argument " "1"" of type '" "wxPGChoices const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGChoices * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGChoices_Index" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPGChoices const *)arg1)->Index(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGChoices_Index(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  
  if (!(argc = SWIG_Python_UnpackTuple(args,"PGChoices_Index",0,2,argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    {
      {
        _v = PyString_Check(argv[1]) || PyUnicode_Check(argv[1]);
      }
    }
    if (!_v) goto check_1;
    return _wrap_PGChoices_Index__SWIG_0(self, argc, argv);
  }
check_1:
  
  if (argc == 2) {
    return _wrap_PGChoices_Index__SWIG_1(self, argc, argv);
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"No matching function for overloaded 'PGChoices_Index'");
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGChoices_Insert__SWIG_0(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPGChoices *arg1 = (wxPGChoices *) 0 ;
  wxString *arg2 = 0 ;
  int arg3 ;
  int arg4 = (int) INT_MAX ;
  wxPGChoiceEntry *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGChoices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGChoices_Insert" "', expected argument " "1"" of type '" "wxPGChoices *""'"); 
  }
  arg1 = reinterpret_cast< wxPGChoices * >(argp1);
  {
    arg2 = wxString_in_helper(swig_obj[1]);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PGChoices_Insert" "', expected argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  if (swig_obj[3]) {
    ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "PGChoices_Insert" "', expected argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxPGChoiceEntry &_result_ref = (arg1)->Insert((wxString const &)*arg2,arg3,arg4);
      result = (wxPGChoiceEntry *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGChoiceEntry, 0 |  0 );
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGChoices_Insert__SWIG_1(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPGChoices *arg1 = (wxPGChoices *) 0 ;
  wxPGChoiceEntry *arg2 = 0 ;
  int arg3 ;
  wxPGChoiceEntry *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGChoices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGChoices_Insert" "', expected argument " "1"" of type '" "wxPGChoices *""'"); 
  }
  arg1 = reinterpret_cast< wxPGChoices * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_wxPGChoiceEntry,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGChoices_Insert" "', expected argument " "2"" of type '" "wxPGChoiceEntry const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PGChoices_Insert" "', expected argument " "2"" of type '" "wxPGChoiceEntry const &""'"); 
  }
  arg2 = reinterpret_cast< wxPGChoiceEntry * >(argp2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PGChoices_Insert" "', expected argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxPGChoiceEntry &_result_ref = (arg1)->Insert((wxPGChoiceEntry const &)*arg2,arg3);
      result = (wxPGChoiceEntry *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGChoiceEntry, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGChoices_Insert(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  
  if (!(argc = SWIG_Python_UnpackTuple(args,"PGChoices_Insert",0,4,argv))) SWIG_fail;
  --argc;
  if ((argc >= 3) && (argc <= 4)) {
    int _v = 0;
    {
      {
        _v = PyString_Check(argv[1]) || PyUnicode_Check(argv[1]);
      }
    }
    if (!_v) goto check_1;
    return _wrap_PGChoices_Insert__SWIG_0(self, argc, argv);
  }
check_1:
  
  if (argc == 3) {
    return _wrap_PGChoices_Insert__SWIG_1(self, argc, argv);
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"No matching function for overloaded 'PGChoices_Insert'");
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGChoices_IsOk(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGChoices *arg1 = (wxPGChoices *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGChoices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGChoices_IsOk" "', expected argument " "1"" of type '" "wxPGChoices const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGChoices * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPGChoices const *)arg1)->IsOk();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGChoices_Item__SWIG_0(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPGChoices *arg1 = (wxPGChoices *) 0 ;
  int arg2 ;
  wxPGChoiceEntry *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGChoices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGChoices_Item" "', expected argument " "1"" of type '" "wxPGChoices const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGChoices * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGChoices_Item" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxPGChoiceEntry const &_result_ref = ((wxPGChoices const *)arg1)->Item(arg2);
      result = (wxPGChoiceEntry *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGChoiceEntry, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGChoices_Item__SWIG_1(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPGChoices *arg1 = (wxPGChoices *) 0 ;
  int arg2 ;
  wxPGChoiceEntry *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGChoices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGChoices_Item" "', expected argument " "1"" of type '" "wxPGChoices *""'"); 
  }
  arg1 = reinterpret_cast< wxPGChoices * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGChoices_Item" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxPGChoiceEntry &_result_ref = (arg1)->Item(arg2);
      result = (wxPGChoiceEntry *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGChoiceEntry, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGChoices_Item(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  
  if (!(argc = SWIG_Python_UnpackTuple(args,"PGChoices_Item",0,2,argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    return _wrap_PGChoices_Item__SWIG_1(self, argc, argv);
  }
  if (argc == 2) {
    return _wrap_PGChoices_Item__SWIG_0(self, argc, argv);
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"No matching function for overloaded 'PGChoices_Item'");
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGChoices_RemoveAt(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGChoices *arg1 = (wxPGChoices *) 0 ;
  size_t arg2 ;
  size_t arg3 = (size_t) 1 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  size_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "nIndex",(char *) "count", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PGChoices_RemoveAt",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGChoices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGChoices_RemoveAt" "', expected argument " "1"" of type '" "wxPGChoices *""'"); 
  }
  arg1 = reinterpret_cast< wxPGChoices * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGChoices_RemoveAt" "', expected argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  if (obj2) {
    ecode3 = SWIG_AsVal_size_t(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PGChoices_RemoveAt" "', expected argument " "3"" of type '" "size_t""'");
    } 
    arg3 = static_cast< size_t >(val3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->RemoveAt(arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGChoices_Set__SWIG_0(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPGChoices *arg1 = (wxPGChoices *) 0 ;
  wxChar **arg2 = (wxChar **) 0 ;
  long *arg3 = (long *) NULL ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGChoices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGChoices_Set" "', expected argument " "1"" of type '" "wxPGChoices *""'"); 
  }
  arg1 = reinterpret_cast< wxPGChoices * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_p_wxChar, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGChoices_Set" "', expected argument " "2"" of type '" "wxChar const *const *""'"); 
  }
  arg2 = reinterpret_cast< wxChar ** >(argp2);
  if (swig_obj[2]) {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_long, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PGChoices_Set" "', expected argument " "3"" of type '" "long const *""'"); 
    }
    arg3 = reinterpret_cast< long * >(argp3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->Set((wxChar const *const *)arg2,(long const *)arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGChoices_Set__SWIG_1(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPGChoices *arg1 = (wxPGChoices *) 0 ;
  wxArrayString *arg2 = 0 ;
  wxArrayInt const &arg3_defvalue = wxArrayInt() ;
  wxArrayInt *arg3 = (wxArrayInt *) &arg3_defvalue ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  bool temp3 = false ;
  
  if ((nobjs < 2) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGChoices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGChoices_Set" "', expected argument " "1"" of type '" "wxPGChoices *""'"); 
  }
  arg1 = reinterpret_cast< wxPGChoices * >(argp1);
  {
    if (! PySequence_Check(swig_obj[1])) {
      PyErr_SetString(PyExc_TypeError, "Sequence of strings expected.");
      SWIG_fail;
    }
    arg2 = new wxArrayString;
    temp2 = true;
    int i, len=PySequence_Length(swig_obj[1]);
    for (i=0; i<len; i++) {
      PyObject* item = PySequence_GetItem(swig_obj[1], i);
      wxString* s = wxString_in_helper(item);
      if (PyErr_Occurred())  SWIG_fail;
      arg2->Add(*s);
      delete s;
      Py_DECREF(item);
    }
  }
  if (swig_obj[2]) {
    {
      if (! PySequence_Check(swig_obj[2])) {
        PyErr_SetString(PyExc_TypeError, "Sequence of integers expected.");
        SWIG_fail;
      }
      arg3 = new wxArrayInt;
      temp3 = true;
      int i, len=PySequence_Length(swig_obj[2]);
      for (i=0; i<len; i++) {
        PyObject* item = PySequence_GetItem(swig_obj[2], i);
        PyObject* number  = PyNumber_Int(item);
        if (!number) {
          PyErr_SetString(PyExc_TypeError, "Sequence of integers expected.");
          SWIG_fail;
        }       
        arg3->Add(PyInt_AS_LONG(number));
        Py_DECREF(item);
        Py_DECREF(number);
      }
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->Set((wxArrayString const &)*arg2,(wxArrayInt const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    if (temp2) delete arg2;
  }
  {
    if (temp3) delete arg3;
  }
  return resultobj;
fail:
  {
    if (temp2) delete arg2;
  }
  {
    if (temp3) delete arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGChoices_Set(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  
  if (!(argc = SWIG_Python_UnpackTuple(args,"PGChoices_Set",0,3,argv))) SWIG_fail;
  --argc;
  if ((argc >= 2) && (argc <= 3)) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_p_wxChar, 0);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_1;
    if (argc > 2) {
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_long, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
    }
    return _wrap_PGChoices_Set__SWIG_0(self, argc, argv);
  }
check_1:
  
  if ((argc >= 2) && (argc <= 3)) {
    return _wrap_PGChoices_Set__SWIG_1(self, argc, argv);
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"No matching function for overloaded 'PGChoices_Set'");
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGChoices_AllocExclusive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGChoices *arg1 = (wxPGChoices *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGChoices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGChoices_AllocExclusive" "', expected argument " "1"" of type '" "wxPGChoices *""'"); 
  }
  arg1 = reinterpret_cast< wxPGChoices * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->AllocExclusive();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGChoices_GetData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGChoices *arg1 = (wxPGChoices *) 0 ;
  wxPGChoicesData *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGChoices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGChoices_GetData" "', expected argument " "1"" of type '" "wxPGChoices *""'"); 
  }
  arg1 = reinterpret_cast< wxPGChoices * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGChoicesData *)(arg1)->GetData();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGChoicesData, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGChoices_GetDataPtr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGChoices *arg1 = (wxPGChoices *) 0 ;
  wxPGChoicesData *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGChoices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGChoices_GetDataPtr" "', expected argument " "1"" of type '" "wxPGChoices const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGChoices * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGChoicesData *)((wxPGChoices const *)arg1)->GetDataPtr();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGChoicesData, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGChoices_ExtractData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGChoices *arg1 = (wxPGChoices *) 0 ;
  wxPGChoicesData *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGChoices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGChoices_ExtractData" "', expected argument " "1"" of type '" "wxPGChoices *""'"); 
  }
  arg1 = reinterpret_cast< wxPGChoices * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGChoicesData *)(arg1)->ExtractData();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGChoicesData, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGChoices_GetLabels(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGChoices *arg1 = (wxPGChoices *) 0 ;
  wxArrayString result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGChoices, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGChoices_GetLabels" "', expected argument " "1"" of type '" "wxPGChoices const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGChoices * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPGChoices const *)arg1)->GetLabels();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxArrayString2PyList_helper(result);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PGChoices_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxPGChoices, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PGChoices_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_PGProperty__SWIG_0(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  wxPGProperty *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)new wxPGProperty();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PGProperty__SWIG_1(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxString *arg1 = 0 ;
  wxString *arg2 = 0 ;
  wxPGProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  {
    arg1 = wxString_in_helper(swig_obj[0]);
    if (arg1 == NULL) SWIG_fail;
    temp1 = true;
  }
  {
    arg2 = wxString_in_helper(swig_obj[1]);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)new wxPGProperty((wxString const &)*arg1,(wxString const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PGProperty(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  
  if (!(argc = SWIG_Python_UnpackTuple(args,"new_PGProperty",0,2,argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_PGProperty__SWIG_0(self, argc, argv);
  }
  if (argc == 2) {
    return _wrap_new_PGProperty__SWIG_1(self, argc, argv);
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"No matching function for overloaded 'new_PGProperty'");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PGProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PGProperty" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete arg1;
    
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_OnSetValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_OnSetValue" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->OnSetValue();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_DoGetValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxVariant result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_DoGetValue" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPGProperty const *)arg1)->DoGetValue();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxVariant_to_PyObject(&result);
    if ( !resultobj ) {
      PyErr_SetString(PyExc_TypeError,
        "this wxVariant type cannot be converted to Python object");
      SWIG_fail;
    }
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_ValueToString(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxVariant *arg2 = 0 ;
  int arg3 = (int) 0 ;
  wxString result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "value",(char *) "argFlags", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PGProperty_ValueToString",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_ValueToString" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    arg2 = new wxVariant();
    if ( !PyObject_to_wxVariant(obj1, arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxVariant");
      SWIG_fail;
    }
  }
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PGProperty_ValueToString" "', expected argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPGProperty const *)arg1)->ValueToString(*arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
#if wxUSE_UNICODE
    resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
    resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
  }
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_SetValueFromString(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxString *arg2 = 0 ;
  int arg3 = (int) wxPG_PROGRAMMATIC_VALUE ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "text",(char *) "flags", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PGProperty_SetValueFromString",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_SetValueFromString" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    arg2 = wxString_in_helper(obj1);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PGProperty_SetValueFromString" "', expected argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->SetValueFromString((wxString const &)*arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_SetValueFromInt(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  long arg2 ;
  int arg3 = (int) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "value",(char *) "flags", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PGProperty_SetValueFromInt",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_SetValueFromInt" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  ecode2 = SWIG_AsVal_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGProperty_SetValueFromInt" "', expected argument " "2"" of type '" "long""'");
  } 
  arg2 = static_cast< long >(val2);
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PGProperty_SetValueFromInt" "', expected argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->SetValueFromInt(arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_OnMeasureImage(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  int arg2 = (int) -1 ;
  wxSize result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "item", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:PGProperty_OnMeasureImage",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_OnMeasureImage" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  if (obj1) {
    ecode2 = SWIG_AsVal_int(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGProperty_OnMeasureImage" "', expected argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPGProperty const *)arg1)->OnMeasureImage(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new wxSize(static_cast< const wxSize& >(result))), SWIGTYPE_p_wxSize, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_OnEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxPropertyGrid *arg2 = (wxPropertyGrid *) 0 ;
  wxWindow *arg3 = (wxWindow *) 0 ;
  wxEvent *arg4 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "propgrid",(char *) "wnd_primary",(char *) "event", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:PGProperty_OnEvent",kwnames,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_OnEvent" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGProperty_OnEvent" "', expected argument " "2"" of type '" "wxPropertyGrid *""'"); 
  }
  arg2 = reinterpret_cast< wxPropertyGrid * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_wxWindow, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PGProperty_OnEvent" "', expected argument " "3"" of type '" "wxWindow *""'"); 
  }
  arg3 = reinterpret_cast< wxWindow * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_wxEvent,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "PGProperty_OnEvent" "', expected argument " "4"" of type '" "wxEvent &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PGProperty_OnEvent" "', expected argument " "4"" of type '" "wxEvent &""'"); 
  }
  arg4 = reinterpret_cast< wxEvent * >(argp4);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->OnEvent(arg2,arg3,*arg4);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_ChildChanged(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxVariant *arg2 = 0 ;
  int arg3 ;
  wxVariant *arg4 = 0 ;
  wxVariant result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "thisValue",(char *) "childIndex",(char *) "childValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:PGProperty_ChildChanged",kwnames,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_ChildChanged" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    arg2 = new wxVariant();
    if ( !PyObject_to_wxVariant(obj1, arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxVariant");
      SWIG_fail;
    }
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PGProperty_ChildChanged" "', expected argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    arg4 = new wxVariant();
    if ( !PyObject_to_wxVariant(obj3, arg4) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxVariant");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPGProperty const *)arg1)->ChildChanged(*arg2,arg3,*arg4);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxVariant_to_PyObject(&result);
    if ( !resultobj ) {
      PyErr_SetString(PyExc_TypeError,
        "this wxVariant type cannot be converted to Python object");
      SWIG_fail;
    }
  }
  {
    delete arg2;
  }
  {
    delete arg4;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  {
    delete arg4;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_DoGetEditorClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxPGEditor *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_DoGetEditorClass" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGEditor *)((wxPGProperty const *)arg1)->DoGetEditorClass();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGEditor, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_DoGetValidator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxValidator *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_DoGetValidator" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxValidator *)((wxPGProperty const *)arg1)->DoGetValidator();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxPyMake_wxObject(result, 0); 
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_OnCustomPaint(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxDC *arg2 = 0 ;
  wxRect *arg3 = 0 ;
  wxPGPaintData *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  wxRect temp3 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "dc",(char *) "rect",(char *) "paintdata", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:PGProperty_OnCustomPaint",kwnames,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_OnCustomPaint" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_wxDC,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGProperty_OnCustomPaint" "', expected argument " "2"" of type '" "wxDC &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PGProperty_OnCustomPaint" "', expected argument " "2"" of type '" "wxDC &""'"); 
  }
  arg2 = reinterpret_cast< wxDC * >(argp2);
  {
    arg3 = &temp3;
    if ( ! wxRect_helper(obj2, &arg3)) SWIG_fail;
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_wxPGPaintData,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "PGProperty_OnCustomPaint" "', expected argument " "4"" of type '" "wxPGPaintData &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PGProperty_OnCustomPaint" "', expected argument " "4"" of type '" "wxPGPaintData &""'"); 
  }
  arg4 = reinterpret_cast< wxPGPaintData * >(argp4);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->OnCustomPaint(*arg2,(wxRect const &)*arg3,*arg4);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetCellRenderer(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  int arg2 ;
  wxPGCellRenderer *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "column", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGProperty_GetCellRenderer",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetCellRenderer" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGProperty_GetCellRenderer" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGCellRenderer *)((wxPGProperty const *)arg1)->GetCellRenderer(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGCellRenderer, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetChoiceSelection(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetChoiceSelection" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPGProperty const *)arg1)->GetChoiceSelection();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_RefreshChildren(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_RefreshChildren" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->RefreshChildren();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_DoSetAttribute(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxString *arg2 = 0 ;
  wxVariant *arg3 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "name",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PGProperty_DoSetAttribute",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_DoSetAttribute" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    arg2 = wxString_in_helper(obj1);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  {
    arg3 = new wxVariant();
    if ( !PyObject_to_wxVariant(obj2, arg3) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxVariant");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->DoSetAttribute((wxString const &)*arg2,*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    delete arg3;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  {
    delete arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_DoGetAttribute(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxString *arg2 = 0 ;
  wxVariant result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "name", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGProperty_DoGetAttribute",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_DoGetAttribute" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    arg2 = wxString_in_helper(obj1);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPGProperty const *)arg1)->DoGetAttribute((wxString const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxVariant_to_PyObject(&result);
    if ( !resultobj ) {
      PyErr_SetString(PyExc_TypeError,
        "this wxVariant type cannot be converted to Python object");
      SWIG_fail;
    }
  }
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetEditorDialog(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxPGEditorDialogAdapter *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetEditorDialog" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGEditorDialogAdapter *)((wxPGProperty const *)arg1)->GetEditorDialog();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGEditorDialogAdapter, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_OnValidationFailure(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxVariant *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "pendingValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGProperty_OnValidationFailure",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_OnValidationFailure" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    arg2 = new wxVariant();
    if ( !PyObject_to_wxVariant(obj1, arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxVariant");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->OnValidationFailure(*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_AddChoice(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxString *arg2 = 0 ;
  int arg3 = (int) INT_MAX ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "label",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PGProperty_AddChoice",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_AddChoice" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    arg2 = wxString_in_helper(obj1);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PGProperty_AddChoice" "', expected argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)(arg1)->AddChoice((wxString const &)*arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_AreChildrenComponents(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_AreChildrenComponents" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPGProperty const *)arg1)->AreChildrenComponents();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_DeleteChildren(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_DeleteChildren" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->DeleteChildren();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_DeleteChoice(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "index", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGProperty_DeleteChoice",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_DeleteChoice" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGProperty_DeleteChoice" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->DeleteChoice(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_Enable(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  bool arg2 = (bool) true ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "enable", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:PGProperty_Enable",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_Enable" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  if (obj1) {
    ecode2 = SWIG_AsVal_bool(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGProperty_Enable" "', expected argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->Enable(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_EnableCommonValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  bool arg2 = (bool) true ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "enable", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:PGProperty_EnableCommonValue",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_EnableCommonValue" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  if (obj1) {
    ecode2 = SWIG_AsVal_bool(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGProperty_EnableCommonValue" "', expected argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->EnableCommonValue(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GenerateComposedValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxString result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GenerateComposedValue" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPGProperty const *)arg1)->GenerateComposedValue();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
#if wxUSE_UNICODE
    resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
    resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetLabel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxString *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetLabel" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxString const &_result_ref = ((wxPGProperty const *)arg1)->GetLabel();
      result = (wxString *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
#if wxUSE_UNICODE
    resultobj = PyUnicode_FromWideChar(result->c_str(), result->Len());
#else
    resultobj = PyString_FromStringAndSize(result->c_str(), result->Len());
#endif
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxString result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetName" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPGProperty const *)arg1)->GetName();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
#if wxUSE_UNICODE
    resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
    resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetBaseName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxString *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetBaseName" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxString const &_result_ref = ((wxPGProperty const *)arg1)->GetBaseName();
      result = (wxString *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
#if wxUSE_UNICODE
    resultobj = PyUnicode_FromWideChar(result->c_str(), result->Len());
#else
    resultobj = PyString_FromStringAndSize(result->c_str(), result->Len());
#endif
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetChoices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxPGChoices *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetChoices" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxPGChoices const &_result_ref = ((wxPGProperty const *)arg1)->GetChoices();
      result = (wxPGChoices *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGChoices, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetY(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetY" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPGProperty const *)arg1)->GetY();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxVariant result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetValue" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPGProperty const *)arg1)->GetValue();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxVariant_to_PyObject(&result);
    if ( !resultobj ) {
      PyErr_SetString(PyExc_TypeError,
        "this wxVariant type cannot be converted to Python object");
      SWIG_fail;
    }
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetValuePlain(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxVariant result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetValuePlain" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPGProperty const *)arg1)->GetValuePlain();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxVariant_to_PyObject(&result);
    if ( !resultobj ) {
      PyErr_SetString(PyExc_TypeError,
        "this wxVariant type cannot be converted to Python object");
      SWIG_fail;
    }
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetValueAsString(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  int arg2 = (int) 0 ;
  wxString result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "argFlags", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:PGProperty_GetValueAsString",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetValueAsString" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  if (obj1) {
    ecode2 = SWIG_AsVal_int(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGProperty_GetValueAsString" "', expected argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPGProperty const *)arg1)->GetValueAsString(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
#if wxUSE_UNICODE
    resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
    resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetCell__SWIG_0(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  int arg2 ;
  wxPGCell *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetCell" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGProperty_GetCell" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxPGCell const &_result_ref = ((wxPGProperty const *)arg1)->GetCell(arg2);
      result = (wxPGCell *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGCell, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetCell__SWIG_1(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  int arg2 ;
  wxPGCell *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetCell" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGProperty_GetCell" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxPGCell &_result_ref = (arg1)->GetCell(arg2);
      result = (wxPGCell *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGCell, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetCell(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  
  if (!(argc = SWIG_Python_UnpackTuple(args,"PGProperty_GetCell",0,2,argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    return _wrap_PGProperty_GetCell__SWIG_1(self, argc, argv);
  }
  if (argc == 2) {
    return _wrap_PGProperty_GetCell__SWIG_0(self, argc, argv);
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"No matching function for overloaded 'PGProperty_GetCell'");
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetOrCreateCell(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  int arg2 ;
  wxPGCell *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "column", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGProperty_GetOrCreateCell",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetOrCreateCell" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGProperty_GetOrCreateCell" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxPGCell &_result_ref = (arg1)->GetOrCreateCell(arg2);
      result = (wxPGCell *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGCell, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetDisplayedCommonValueCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetDisplayedCommonValueCount" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPGProperty const *)arg1)->GetDisplayedCommonValueCount();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetDisplayedString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxString result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetDisplayedString" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPGProperty const *)arg1)->GetDisplayedString();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
#if wxUSE_UNICODE
    resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
    resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetHintText(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxString result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetHintText" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPGProperty const *)arg1)->GetHintText();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
#if wxUSE_UNICODE
    resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
    resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetGrid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxPropertyGrid *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetGrid" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPropertyGrid *)((wxPGProperty const *)arg1)->GetGrid();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetGridIfDisplayed(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxPropertyGrid *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetGridIfDisplayed" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPropertyGrid *)((wxPGProperty const *)arg1)->GetGridIfDisplayed();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetMainParent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetMainParent" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)((wxPGProperty const *)arg1)->GetMainParent();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetParent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetParent" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)((wxPGProperty const *)arg1)->GetParent();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_IsTextEditable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_IsTextEditable" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPGProperty const *)arg1)->IsTextEditable();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_IsValueUnspecified(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_IsValueUnspecified" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPGProperty const *)arg1)->IsValueUnspecified();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_HasFlag(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxPGPropertyFlags arg2 ;
  wxPGProperty::FlagType result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "flag", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGProperty_HasFlag",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_HasFlag" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGProperty_HasFlag" "', expected argument " "2"" of type '" "wxPGPropertyFlags""'");
  } 
  arg2 = static_cast< wxPGPropertyFlags >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty::FlagType)((wxPGProperty const *)arg1)->HasFlag(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetAttributes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxPGAttributeStorage *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetAttributes" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxPGAttributeStorage const &_result_ref = ((wxPGProperty const *)arg1)->GetAttributes();
      result = (wxPGAttributeStorage *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxPGAttributeStorage_to_PyObject(result);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetAttributesAsList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxVariant result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetAttributesAsList" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPGProperty const *)arg1)->GetAttributesAsList();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxVariant_to_PyObject(&result);
    if ( !resultobj ) {
      PyErr_SetString(PyExc_TypeError,
        "this wxVariant type cannot be converted to Python object");
      SWIG_fail;
    }
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetFlags(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxPGProperty::FlagType result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetFlags" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty::FlagType)((wxPGProperty const *)arg1)->GetFlags();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetEditorClass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxPGEditor *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetEditorClass" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGEditor *)((wxPGProperty const *)arg1)->GetEditorClass();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGEditor, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetValueType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxString result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetValueType" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPGProperty const *)arg1)->GetValueType();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
#if wxUSE_UNICODE
    resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
    resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetColumnEditor(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  int arg2 ;
  wxPGEditor *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "column", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGProperty_GetColumnEditor",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetColumnEditor" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGProperty_GetColumnEditor" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGEditor *)((wxPGProperty const *)arg1)->GetColumnEditor(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGEditor, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetCommonValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetCommonValue" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPGProperty const *)arg1)->GetCommonValue();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_HasVisibleChildren(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_HasVisibleChildren" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPGProperty const *)arg1)->HasVisibleChildren();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_InsertChild(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  int arg2 ;
  wxPGProperty *arg3 = (wxPGProperty *) 0 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "index",(char *) "childProperty", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PGProperty_InsertChild",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_InsertChild" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGProperty_InsertChild" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PGProperty_InsertChild" "', expected argument " "3"" of type '" "wxPGProperty *""'"); 
  }
  arg3 = reinterpret_cast< wxPGProperty * >(argp3);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)(arg1)->InsertChild(arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_InsertChoice(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxString *arg2 = 0 ;
  int arg3 ;
  int arg4 = (int) INT_MAX ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "label",(char *) "index",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|O:PGProperty_InsertChoice",kwnames,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_InsertChoice" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    arg2 = wxString_in_helper(obj1);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PGProperty_InsertChoice" "', expected argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  if (obj3) {
    ecode4 = SWIG_AsVal_int(obj3, &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "PGProperty_InsertChoice" "', expected argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)(arg1)->InsertChoice((wxString const &)*arg2,arg3,arg4);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_IsCategory(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_IsCategory" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPGProperty const *)arg1)->IsCategory();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_IsRoot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_IsRoot" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPGProperty const *)arg1)->IsRoot();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_IsSubProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_IsSubProperty" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPGProperty const *)arg1)->IsSubProperty();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetLastVisibleSubItem(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetLastVisibleSubItem" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)((wxPGProperty const *)arg1)->GetLastVisibleSubItem();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetDefaultValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxVariant result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetDefaultValue" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPGProperty const *)arg1)->GetDefaultValue();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxVariant_to_PyObject(&result);
    if ( !resultobj ) {
      PyErr_SetString(PyExc_TypeError,
        "this wxVariant type cannot be converted to Python object");
      SWIG_fail;
    }
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetMaxLength(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetMaxLength" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPGProperty const *)arg1)->GetMaxLength();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_AreAllChildrenSpecified(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxVariant *arg2 = (wxVariant *) NULL ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "pendingList", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:PGProperty_AreAllChildrenSpecified",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_AreAllChildrenSpecified" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  if (obj1) {
    res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxVariant, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGProperty_AreAllChildrenSpecified" "', expected argument " "2"" of type '" "wxVariant *""'"); 
    }
    arg2 = reinterpret_cast< wxVariant * >(argp2);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPGProperty const *)arg1)->AreAllChildrenSpecified(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_UpdateParentValues(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_UpdateParentValues" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)(arg1)->UpdateParentValues();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_UsesAutoUnspecified(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_UsesAutoUnspecified" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPGProperty const *)arg1)->UsesAutoUnspecified();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetValueImage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxBitmap *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetValueImage" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxBitmap *)((wxPGProperty const *)arg1)->GetValueImage();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxBitmap, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetAttribute__SWIG_0(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxString *arg2 = 0 ;
  wxVariant result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetAttribute" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    arg2 = wxString_in_helper(swig_obj[1]);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPGProperty const *)arg1)->GetAttribute((wxString const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxVariant_to_PyObject(&result);
    if ( !resultobj ) {
      PyErr_SetString(PyExc_TypeError,
        "this wxVariant type cannot be converted to Python object");
      SWIG_fail;
    }
  }
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetAttribute__SWIG_1(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxString *arg2 = 0 ;
  wxString *arg3 = 0 ;
  wxString result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  bool temp3 = false ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetAttribute" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    arg2 = wxString_in_helper(swig_obj[1]);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  {
    arg3 = wxString_in_helper(swig_obj[2]);
    if (arg3 == NULL) SWIG_fail;
    temp3 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPGProperty const *)arg1)->GetAttribute((wxString const &)*arg2,(wxString const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
#if wxUSE_UNICODE
    resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
    resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetAttribute(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  
  if (!(argc = SWIG_Python_UnpackTuple(args,"PGProperty_GetAttribute",0,3,argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    return _wrap_PGProperty_GetAttribute__SWIG_0(self, argc, argv);
  }
  if (argc == 3) {
    return _wrap_PGProperty_GetAttribute__SWIG_1(self, argc, argv);
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"No matching function for overloaded 'PGProperty_GetAttribute'");
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetAttributeAsLong(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxString *arg2 = 0 ;
  long arg3 ;
  long result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  long val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "name",(char *) "defVal", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PGProperty_GetAttributeAsLong",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetAttributeAsLong" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    arg2 = wxString_in_helper(obj1);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  ecode3 = SWIG_AsVal_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PGProperty_GetAttributeAsLong" "', expected argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (long)((wxPGProperty const *)arg1)->GetAttributeAsLong((wxString const &)*arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetAttributeAsDouble(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxString *arg2 = 0 ;
  double arg3 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "name",(char *) "defVal", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PGProperty_GetAttributeAsDouble",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetAttributeAsDouble" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    arg2 = wxString_in_helper(obj1);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PGProperty_GetAttributeAsDouble" "', expected argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (double)((wxPGProperty const *)arg1)->GetAttributeAsDouble((wxString const &)*arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetDepth(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetDepth" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPGProperty const *)arg1)->GetDepth();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetFlagsAsString(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxPGProperty::FlagType arg2 ;
  wxString result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "flagsMask", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGProperty_GetFlagsAsString",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetFlagsAsString" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGProperty_GetFlagsAsString" "', expected argument " "2"" of type '" "wxPGProperty::FlagType""'");
  } 
  arg2 = static_cast< wxPGProperty::FlagType >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPGProperty const *)arg1)->GetFlagsAsString(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
#if wxUSE_UNICODE
    resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
    resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetIndexInParent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetIndexInParent" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPGProperty const *)arg1)->GetIndexInParent();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_Hide(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  bool arg2 ;
  int arg3 = (int) wxPG_RECURSE ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "hide",(char *) "flags", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PGProperty_Hide",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_Hide" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGProperty_Hide" "', expected argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PGProperty_Hide" "', expected argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->Hide(arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_IsExpanded(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_IsExpanded" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPGProperty const *)arg1)->IsExpanded();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_IsVisible(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_IsVisible" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPGProperty const *)arg1)->IsVisible();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_IsEnabled(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_IsEnabled" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPGProperty const *)arg1)->IsEnabled();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_RecreateEditor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_RecreateEditor" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->RecreateEditor();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_RefreshEditor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_RefreshEditor" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->RefreshEditor();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_SetAttribute(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxString *arg2 = 0 ;
  wxVariant arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "name",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PGProperty_SetAttribute",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_SetAttribute" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    arg2 = wxString_in_helper(obj1);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  {
    if ( !PyObject_to_wxVariant(obj2, &arg3) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxVariant");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetAttribute((wxString const &)*arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_SetAttributes(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxPGAttributeStorage *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "attributes", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGProperty_SetAttributes",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_SetAttributes" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_wxPGAttributeStorage,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGProperty_SetAttributes" "', expected argument " "2"" of type '" "wxPGAttributeStorage const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PGProperty_SetAttributes" "', expected argument " "2"" of type '" "wxPGAttributeStorage const &""'"); 
  }
  arg2 = reinterpret_cast< wxPGAttributeStorage * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetAttributes((wxPGAttributeStorage const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_SetAutoUnspecified(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  bool arg2 = (bool) true ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "enable", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:PGProperty_SetAutoUnspecified",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_SetAutoUnspecified" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  if (obj1) {
    ecode2 = SWIG_AsVal_bool(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGProperty_SetAutoUnspecified" "', expected argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetAutoUnspecified(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_SetBackgroundColour(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxColour *arg2 = 0 ;
  int arg3 = (int) wxPG_RECURSE ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  wxColour temp2 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "colour",(char *) "flags", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PGProperty_SetBackgroundColour",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_SetBackgroundColour" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    arg2 = &temp2;
    if ( ! wxColour_helper(obj1, &arg2)) SWIG_fail;
  }
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PGProperty_SetBackgroundColour" "', expected argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetBackgroundColour((wxColour const &)*arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_SetTextColour(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxColour *arg2 = 0 ;
  int arg3 = (int) wxPG_RECURSE ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  wxColour temp2 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "colour",(char *) "flags", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PGProperty_SetTextColour",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_SetTextColour" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    arg2 = &temp2;
    if ( ! wxColour_helper(obj1, &arg2)) SWIG_fail;
  }
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PGProperty_SetTextColour" "', expected argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetTextColour((wxColour const &)*arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_SetDefaultValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxVariant *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGProperty_SetDefaultValue",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_SetDefaultValue" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    arg2 = new wxVariant();
    if ( !PyObject_to_wxVariant(obj1, arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxVariant");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetDefaultValue(*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_SetEditor(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "editorName", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGProperty_SetEditor",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_SetEditor" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    arg2 = wxString_in_helper(obj1);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetEditor((wxString const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_SetCell(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  int arg2 ;
  wxPGCell *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "column",(char *) "cell", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PGProperty_SetCell",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_SetCell" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGProperty_SetCell" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_wxPGCell,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PGProperty_SetCell" "', expected argument " "3"" of type '" "wxPGCell const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PGProperty_SetCell" "', expected argument " "3"" of type '" "wxPGCell const &""'"); 
  }
  arg3 = reinterpret_cast< wxPGCell * >(argp3);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetCell(arg2,(wxPGCell const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_SetCommonValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "commonValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGProperty_SetCommonValue",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_SetCommonValue" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGProperty_SetCommonValue" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetCommonValue(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_SetFlagsFromString(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "str", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGProperty_SetFlagsFromString",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_SetFlagsFromString" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    arg2 = wxString_in_helper(obj1);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetFlagsFromString((wxString const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_SetModifiedStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "modified", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGProperty_SetModifiedStatus",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_SetModifiedStatus" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGProperty_SetModifiedStatus" "', expected argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetModifiedStatus(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_SetValueInEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxVariant arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGProperty_SetValueInEvent",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_SetValueInEvent" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    if ( !PyObject_to_wxVariant(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxVariant");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    ((wxPGProperty const *)arg1)->SetValueInEvent(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_SetValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxVariant arg2 ;
  wxVariant *arg3 = (wxVariant *) NULL ;
  int arg4 = (int) wxPG_SETVAL_REFRESH_EDITOR ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "value",(char *) "pList",(char *) "flags", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|OO:PGProperty_SetValue",kwnames,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_SetValue" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    if ( !PyObject_to_wxVariant(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxVariant");
      SWIG_fail;
    }
  }
  if (obj2) {
    res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_wxVariant, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PGProperty_SetValue" "', expected argument " "3"" of type '" "wxVariant *""'"); 
    }
    arg3 = reinterpret_cast< wxVariant * >(argp3);
  }
  if (obj3) {
    ecode4 = SWIG_AsVal_int(obj3, &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "PGProperty_SetValue" "', expected argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetValue(arg2,arg3,arg4);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_SetValueImage(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxBitmap *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "bmp", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGProperty_SetValueImage",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_SetValueImage" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_wxBitmap,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGProperty_SetValueImage" "', expected argument " "2"" of type '" "wxBitmap &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PGProperty_SetValueImage" "', expected argument " "2"" of type '" "wxBitmap &""'"); 
  }
  arg2 = reinterpret_cast< wxBitmap * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetValueImage(*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_SetChoiceSelection(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGProperty_SetChoiceSelection",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_SetChoiceSelection" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGProperty_SetChoiceSelection" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetChoiceSelection(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_SetExpanded(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "expanded", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGProperty_SetExpanded",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_SetExpanded" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGProperty_SetExpanded" "', expected argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetExpanded(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_ChangeFlag(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxPGPropertyFlags arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "flag",(char *) "set", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PGProperty_ChangeFlag",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_ChangeFlag" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGProperty_ChangeFlag" "', expected argument " "2"" of type '" "wxPGPropertyFlags""'");
  } 
  arg2 = static_cast< wxPGPropertyFlags >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PGProperty_ChangeFlag" "', expected argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->ChangeFlag(arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_SetFlagRecursively(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxPGPropertyFlags arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "flag",(char *) "set", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PGProperty_SetFlagRecursively",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_SetFlagRecursively" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGProperty_SetFlagRecursively" "', expected argument " "2"" of type '" "wxPGPropertyFlags""'");
  } 
  arg2 = static_cast< wxPGPropertyFlags >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PGProperty_SetFlagRecursively" "', expected argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetFlagRecursively(arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_SetHelpString(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "helpString", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGProperty_SetHelpString",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_SetHelpString" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    arg2 = wxString_in_helper(obj1);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetHelpString((wxString const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_SetLabel(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "label", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGProperty_SetLabel",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_SetLabel" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    arg2 = wxString_in_helper(obj1);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetLabel((wxString const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_SetName(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "newName", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGProperty_SetName",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_SetName" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    arg2 = wxString_in_helper(obj1);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetName((wxString const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_SetParentalType(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "flag", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGProperty_SetParentalType",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_SetParentalType" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGProperty_SetParentalType" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetParentalType(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_SetValueToUnspecified(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_SetValueToUnspecified" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetValueToUnspecified();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_SetValuePlain(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxVariant arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGProperty_SetValuePlain",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_SetValuePlain" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    if ( !PyObject_to_wxVariant(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxVariant");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetValuePlain(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_SetValidator(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxValidator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "validator", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGProperty_SetValidator",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_SetValidator" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_wxValidator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGProperty_SetValidator" "', expected argument " "2"" of type '" "wxValidator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PGProperty_SetValidator" "', expected argument " "2"" of type '" "wxValidator const &""'"); 
  }
  arg2 = reinterpret_cast< wxValidator * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetValidator((wxValidator const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetValidator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxValidator *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetValidator" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxValidator *)((wxPGProperty const *)arg1)->GetValidator();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxPyMake_wxObject(result, 0); 
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_SetMaxLength(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  int arg2 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "maxLen", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGProperty_SetMaxLength",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_SetMaxLength" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGProperty_SetMaxLength" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->SetMaxLength(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_SetWasModified(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  bool arg2 = (bool) true ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "set", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:PGProperty_SetWasModified",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_SetWasModified" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  if (obj1) {
    ecode2 = SWIG_AsVal_bool(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGProperty_SetWasModified" "', expected argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetWasModified(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetHelpString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxString *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetHelpString" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxString const &_result_ref = ((wxPGProperty const *)arg1)->GetHelpString();
      result = (wxString *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
#if wxUSE_UNICODE
    resultobj = PyUnicode_FromWideChar(result->c_str(), result->Len());
#else
    resultobj = PyString_FromStringAndSize(result->c_str(), result->Len());
#endif
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_IsSomeParent(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxPGProperty *arg2 = (wxPGProperty *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "candidate_parent", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGProperty_IsSomeParent",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_IsSomeParent" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGProperty_IsSomeParent" "', expected argument " "2"" of type '" "wxPGProperty *""'"); 
  }
  arg2 = reinterpret_cast< wxPGProperty * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPGProperty const *)arg1)->IsSomeParent(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_AdaptListToValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxVariant *arg2 = 0 ;
  wxVariant *arg3 = (wxVariant *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "list",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PGProperty_AdaptListToValue",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_AdaptListToValue" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    arg2 = new wxVariant();
    if ( !PyObject_to_wxVariant(obj1, arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxVariant");
      SWIG_fail;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_wxVariant, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PGProperty_AdaptListToValue" "', expected argument " "3"" of type '" "wxVariant *""'"); 
  }
  arg3 = reinterpret_cast< wxVariant * >(argp3);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    ((wxPGProperty const *)arg1)->AdaptListToValue(*arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_AddPrivateChild(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxPGProperty *arg2 = (wxPGProperty *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "prop", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGProperty_AddPrivateChild",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_AddPrivateChild" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGProperty_AddPrivateChild" "', expected argument " "2"" of type '" "wxPGProperty *""'"); 
  }
  arg2 = reinterpret_cast< wxPGProperty * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->AddPrivateChild(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_AppendChild(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxPGProperty *arg2 = (wxPGProperty *) 0 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "prop", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGProperty_AppendChild",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_AppendChild" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGProperty_AppendChild" "', expected argument " "2"" of type '" "wxPGProperty *""'"); 
  }
  arg2 = reinterpret_cast< wxPGProperty * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)(arg1)->AppendChild(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetChildrenHeight(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  int arg2 ;
  int arg3 = (int) -1 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "lh",(char *) "iMax", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PGProperty_GetChildrenHeight",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetChildrenHeight" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGProperty_GetChildrenHeight" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PGProperty_GetChildrenHeight" "', expected argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPGProperty const *)arg1)->GetChildrenHeight(arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetChildCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetChildCount" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPGProperty const *)arg1)->GetChildCount();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_Item(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  int arg2 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "i", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGProperty_Item",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_Item" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGProperty_Item" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)((wxPGProperty const *)arg1)->Item(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_Last(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_Last" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)((wxPGProperty const *)arg1)->Last();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_Index(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxPGProperty *arg2 = (wxPGProperty *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "p", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGProperty_Index",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_Index" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGProperty_Index" "', expected argument " "2"" of type '" "wxPGProperty const *""'"); 
  }
  arg2 = reinterpret_cast< wxPGProperty * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPGProperty const *)arg1)->Index((wxPGProperty const *)arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_FixIndicesOfChildren(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  int arg2 = (int) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "starthere", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:PGProperty_FixIndicesOfChildren",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_FixIndicesOfChildren" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  if (obj1) {
    ecode2 = SWIG_AsVal_int(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGProperty_FixIndicesOfChildren" "', expected argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->FixIndicesOfChildren(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetImageOffset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  int arg2 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "imageWidth", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGProperty_GetImageOffset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetImageOffset" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGProperty_GetImageOffset" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPGProperty const *)arg1)->GetImageOffset(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetItemAtY(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  int arg2 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "y", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGProperty_GetItemAtY",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetItemAtY" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGProperty_GetItemAtY" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)((wxPGProperty const *)arg1)->GetItemAtY(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetPropertyByName(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxString *arg2 = 0 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "name", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGProperty_GetPropertyByName",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetPropertyByName" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    arg2 = wxString_in_helper(obj1);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)((wxPGProperty const *)arg1)->GetPropertyByName((wxString const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_SetPyChoices__SWIG_0(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxPGChoices *arg2 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_SetPyChoices" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_wxPGChoices,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGProperty_SetPyChoices" "', expected argument " "2"" of type '" "wxPGChoices const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PGProperty_SetPyChoices" "', expected argument " "2"" of type '" "wxPGChoices const &""'"); 
  }
  arg2 = reinterpret_cast< wxPGChoices * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)wxPGProperty_SetPyChoices__SWIG_0(arg1,(wxPGChoices const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_SetPyChoices__SWIG_1(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxArrayString *arg2 = 0 ;
  wxArrayInt const &arg3_defvalue = wxArrayInt() ;
  wxArrayInt *arg3 = (wxArrayInt *) &arg3_defvalue ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  bool temp3 = false ;
  
  if ((nobjs < 2) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_SetPyChoices" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    if (! PySequence_Check(swig_obj[1])) {
      PyErr_SetString(PyExc_TypeError, "Sequence of strings expected.");
      SWIG_fail;
    }
    arg2 = new wxArrayString;
    temp2 = true;
    int i, len=PySequence_Length(swig_obj[1]);
    for (i=0; i<len; i++) {
      PyObject* item = PySequence_GetItem(swig_obj[1], i);
      wxString* s = wxString_in_helper(item);
      if (PyErr_Occurred())  SWIG_fail;
      arg2->Add(*s);
      delete s;
      Py_DECREF(item);
    }
  }
  if (swig_obj[2]) {
    {
      if (! PySequence_Check(swig_obj[2])) {
        PyErr_SetString(PyExc_TypeError, "Sequence of integers expected.");
        SWIG_fail;
      }
      arg3 = new wxArrayInt;
      temp3 = true;
      int i, len=PySequence_Length(swig_obj[2]);
      for (i=0; i<len; i++) {
        PyObject* item = PySequence_GetItem(swig_obj[2], i);
        PyObject* number  = PyNumber_Int(item);
        if (!number) {
          PyErr_SetString(PyExc_TypeError, "Sequence of integers expected.");
          SWIG_fail;
        }       
        arg3->Add(PyInt_AS_LONG(number));
        Py_DECREF(item);
        Py_DECREF(number);
      }
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)wxPGProperty_SetPyChoices__SWIG_1(arg1,(wxArrayString const &)*arg2,(wxArrayInt const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  {
    if (temp2) delete arg2;
  }
  {
    if (temp3) delete arg3;
  }
  return resultobj;
fail:
  {
    if (temp2) delete arg2;
  }
  {
    if (temp3) delete arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_SetPyChoices(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  
  if (!(argc = SWIG_Python_UnpackTuple(args,"PGProperty_SetPyChoices",0,3,argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_wxPGChoices, 0);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_1;
    return _wrap_PGProperty_SetPyChoices__SWIG_0(self, argc, argv);
  }
check_1:
  
  if ((argc >= 2) && (argc <= 3)) {
    return _wrap_PGProperty_SetPyChoices__SWIG_1(self, argc, argv);
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"No matching function for overloaded 'PGProperty_SetPyChoices'");
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_PyBase_StringToValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxString *arg2 = 0 ;
  int arg3 = (int) 0 ;
  wxPGVariantAndBool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "text",(char *) "argFlags", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PGProperty_PyBase_StringToValue",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_PyBase_StringToValue" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    arg2 = wxString_in_helper(obj1);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PGProperty_PyBase_StringToValue" "', expected argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = wxPGProperty_PyBase_StringToValue(arg1,(wxString const &)*arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxPGVariantAndBool_to_PyObject(result);
  }
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_PyBase_IntToValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxVariant *arg2 = 0 ;
  int arg3 ;
  int arg4 = (int) 0 ;
  wxPGVariantAndBool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "value",(char *) "number",(char *) "argFlags", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|O:PGProperty_PyBase_IntToValue",kwnames,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_PyBase_IntToValue" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    arg2 = new wxVariant();
    if ( !PyObject_to_wxVariant(obj1, arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxVariant");
      SWIG_fail;
    }
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PGProperty_PyBase_IntToValue" "', expected argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  if (obj3) {
    ecode4 = SWIG_AsVal_int(obj3, &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "PGProperty_PyBase_IntToValue" "', expected argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = wxPGProperty_PyBase_IntToValue((wxPGProperty const *)arg1,*arg2,arg3,arg4);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxPGVariantAndBool_to_PyObject(result);
  }
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_GetPyClientData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  PyObject *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_GetPyClientData" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (PyObject *)wxPGProperty_GetPyClientData(arg1);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGProperty_SetPyClientData(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  PyObject *arg2 = (PyObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "clientData", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGProperty_SetPyClientData",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGProperty_SetPyClientData" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  arg2 = obj1;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxPGProperty_SetPyClientData(arg1,arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PGProperty_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxPGProperty, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PGProperty_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_PropertyGridHitTestResult(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridHitTestResult *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args,"new_PropertyGridHitTestResult",0,0,0)) SWIG_fail;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPropertyGridHitTestResult *)new wxPropertyGridHitTestResult();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPropertyGridHitTestResult, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PropertyGridHitTestResult(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridHitTestResult *arg1 = (wxPropertyGridHitTestResult *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridHitTestResult, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PropertyGridHitTestResult" "', expected argument " "1"" of type '" "wxPropertyGridHitTestResult *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridHitTestResult * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete arg1;
    
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridHitTestResult_GetColumn(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridHitTestResult *arg1 = (wxPropertyGridHitTestResult *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridHitTestResult, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridHitTestResult_GetColumn" "', expected argument " "1"" of type '" "wxPropertyGridHitTestResult const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridHitTestResult * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPropertyGridHitTestResult const *)arg1)->GetColumn();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridHitTestResult_GetProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridHitTestResult *arg1 = (wxPropertyGridHitTestResult *) 0 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridHitTestResult, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridHitTestResult_GetProperty" "', expected argument " "1"" of type '" "wxPropertyGridHitTestResult const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridHitTestResult * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)((wxPropertyGridHitTestResult const *)arg1)->GetProperty();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridHitTestResult_GetSplitter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridHitTestResult *arg1 = (wxPropertyGridHitTestResult *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridHitTestResult, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridHitTestResult_GetSplitter" "', expected argument " "1"" of type '" "wxPropertyGridHitTestResult const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridHitTestResult * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPropertyGridHitTestResult const *)arg1)->GetSplitter();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridHitTestResult_GetSplitterHitOffset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridHitTestResult *arg1 = (wxPropertyGridHitTestResult *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridHitTestResult, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridHitTestResult_GetSplitterHitOffset" "', expected argument " "1"" of type '" "wxPropertyGridHitTestResult const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridHitTestResult * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPropertyGridHitTestResult const *)arg1)->GetSplitterHitOffset();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PropertyGridHitTestResult_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxPropertyGridHitTestResult, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PropertyGridHitTestResult_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_PropertyGridIteratorBase(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridIteratorBase *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args,"new_PropertyGridIteratorBase",0,0,0)) SWIG_fail;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPropertyGridIteratorBase *)new wxPropertyGridIteratorBase();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPropertyGridIteratorBase, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridIteratorBase_Assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridIteratorBase *arg1 = (wxPropertyGridIteratorBase *) 0 ;
  wxPropertyGridIteratorBase *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "it", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridIteratorBase_Assign",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridIteratorBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridIteratorBase_Assign" "', expected argument " "1"" of type '" "wxPropertyGridIteratorBase *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridIteratorBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_wxPropertyGridIteratorBase,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PropertyGridIteratorBase_Assign" "', expected argument " "2"" of type '" "wxPropertyGridIteratorBase const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PropertyGridIteratorBase_Assign" "', expected argument " "2"" of type '" "wxPropertyGridIteratorBase const &""'"); 
  }
  arg2 = reinterpret_cast< wxPropertyGridIteratorBase * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->Assign((wxPropertyGridIteratorBase const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridIteratorBase_AtEnd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridIteratorBase *arg1 = (wxPropertyGridIteratorBase *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridIteratorBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridIteratorBase_AtEnd" "', expected argument " "1"" of type '" "wxPropertyGridIteratorBase const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridIteratorBase * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPropertyGridIteratorBase const *)arg1)->AtEnd();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridIteratorBase_GetProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridIteratorBase *arg1 = (wxPropertyGridIteratorBase *) 0 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridIteratorBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridIteratorBase_GetProperty" "', expected argument " "1"" of type '" "wxPropertyGridIteratorBase const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridIteratorBase * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)((wxPropertyGridIteratorBase const *)arg1)->GetProperty();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridIteratorBase_Init__SWIG_0(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPropertyGridIteratorBase *arg1 = (wxPropertyGridIteratorBase *) 0 ;
  wxPropertyGridPageState *arg2 = (wxPropertyGridPageState *) 0 ;
  int arg3 ;
  wxPGProperty *arg4 = (wxPGProperty *) 0 ;
  int arg5 = (int) 1 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridIteratorBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridIteratorBase_Init" "', expected argument " "1"" of type '" "wxPropertyGridIteratorBase *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridIteratorBase * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_wxPropertyGridPageState, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PropertyGridIteratorBase_Init" "', expected argument " "2"" of type '" "wxPropertyGridPageState *""'"); 
  }
  arg2 = reinterpret_cast< wxPropertyGridPageState * >(argp2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PropertyGridIteratorBase_Init" "', expected argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "PropertyGridIteratorBase_Init" "', expected argument " "4"" of type '" "wxPGProperty *""'"); 
  }
  arg4 = reinterpret_cast< wxPGProperty * >(argp4);
  if (swig_obj[4]) {
    ecode5 = SWIG_AsVal_int(swig_obj[4], &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "PropertyGridIteratorBase_Init" "', expected argument " "5"" of type '" "int""'");
    } 
    arg5 = static_cast< int >(val5);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->Init(arg2,arg3,arg4,arg5);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridIteratorBase_Init__SWIG_1(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPropertyGridIteratorBase *arg1 = (wxPropertyGridIteratorBase *) 0 ;
  wxPropertyGridPageState *arg2 = (wxPropertyGridPageState *) 0 ;
  int arg3 ;
  int arg4 = (int) wxTOP ;
  int arg5 = (int) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridIteratorBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridIteratorBase_Init" "', expected argument " "1"" of type '" "wxPropertyGridIteratorBase *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridIteratorBase * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_wxPropertyGridPageState, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PropertyGridIteratorBase_Init" "', expected argument " "2"" of type '" "wxPropertyGridPageState *""'"); 
  }
  arg2 = reinterpret_cast< wxPropertyGridPageState * >(argp2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PropertyGridIteratorBase_Init" "', expected argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  if (swig_obj[3]) {
    ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "PropertyGridIteratorBase_Init" "', expected argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
  }
  if (swig_obj[4]) {
    ecode5 = SWIG_AsVal_int(swig_obj[4], &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "PropertyGridIteratorBase_Init" "', expected argument " "5"" of type '" "int""'");
    } 
    arg5 = static_cast< int >(val5);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->Init(arg2,arg3,arg4,arg5);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridIteratorBase_Init(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  
  if (!(argc = SWIG_Python_UnpackTuple(args,"PropertyGridIteratorBase_Init",0,5,argv))) SWIG_fail;
  --argc;
  if ((argc >= 3) && (argc <= 5)) {
    int _v = 0;
    if (argc > 3) {
      {
        {
          int res = SWIG_AsVal_int(argv[3], NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
    }
    return _wrap_PropertyGridIteratorBase_Init__SWIG_1(self, argc, argv);
  }
check_1:
  
  if ((argc >= 4) && (argc <= 5)) {
    return _wrap_PropertyGridIteratorBase_Init__SWIG_0(self, argc, argv);
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"No matching function for overloaded 'PropertyGridIteratorBase_Init'");
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridIteratorBase_Next(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridIteratorBase *arg1 = (wxPropertyGridIteratorBase *) 0 ;
  bool arg2 = (bool) true ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "iterateChildren", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:PropertyGridIteratorBase_Next",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridIteratorBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridIteratorBase_Next" "', expected argument " "1"" of type '" "wxPropertyGridIteratorBase *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridIteratorBase * >(argp1);
  if (obj1) {
    ecode2 = SWIG_AsVal_bool(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridIteratorBase_Next" "', expected argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->Next(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridIteratorBase_Prev(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridIteratorBase *arg1 = (wxPropertyGridIteratorBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridIteratorBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridIteratorBase_Prev" "', expected argument " "1"" of type '" "wxPropertyGridIteratorBase *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridIteratorBase * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->Prev();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridIteratorBase_SetBaseParent(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridIteratorBase *arg1 = (wxPropertyGridIteratorBase *) 0 ;
  wxPGProperty *arg2 = (wxPGProperty *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "baseParent", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridIteratorBase_SetBaseParent",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridIteratorBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridIteratorBase_SetBaseParent" "', expected argument " "1"" of type '" "wxPropertyGridIteratorBase *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridIteratorBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PropertyGridIteratorBase_SetBaseParent" "', expected argument " "2"" of type '" "wxPGProperty *""'"); 
  }
  arg2 = reinterpret_cast< wxPGProperty * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetBaseParent(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PropertyGridIteratorBase_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxPropertyGridIteratorBase, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PropertyGridIteratorBase_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_PropertyGridIterator__SWIG_0(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPropertyGridPageState *arg1 = (wxPropertyGridPageState *) 0 ;
  int arg2 = (int) wxPG_ITERATE_DEFAULT ;
  wxPGProperty *arg3 = (wxPGProperty *) NULL ;
  int arg4 = (int) 1 ;
  wxPropertyGridIterator *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridPageState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_PropertyGridIterator" "', expected argument " "1"" of type '" "wxPropertyGridPageState *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridPageState * >(argp1);
  if (swig_obj[1]) {
    ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_PropertyGridIterator" "', expected argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
  }
  if (swig_obj[2]) {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_wxPGProperty, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_PropertyGridIterator" "', expected argument " "3"" of type '" "wxPGProperty *""'"); 
    }
    arg3 = reinterpret_cast< wxPGProperty * >(argp3);
  }
  if (swig_obj[3]) {
    ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_PropertyGridIterator" "', expected argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPropertyGridIterator *)new wxPropertyGridIterator(arg1,arg2,arg3,arg4);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPropertyGridIterator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PropertyGridIterator__SWIG_1(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPropertyGridPageState *arg1 = (wxPropertyGridPageState *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 = (int) 0 ;
  wxPropertyGridIterator *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridPageState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_PropertyGridIterator" "', expected argument " "1"" of type '" "wxPropertyGridPageState *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridPageState * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_PropertyGridIterator" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_PropertyGridIterator" "', expected argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  if (swig_obj[3]) {
    ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_PropertyGridIterator" "', expected argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPropertyGridIterator *)new wxPropertyGridIterator(arg1,arg2,arg3,arg4);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPropertyGridIterator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PropertyGridIterator__SWIG_2(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  wxPropertyGridIterator *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPropertyGridIterator *)new wxPropertyGridIterator();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPropertyGridIterator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PropertyGridIterator__SWIG_3(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPropertyGridIterator *arg1 = 0 ;
  wxPropertyGridIterator *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_wxPropertyGridIterator,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_PropertyGridIterator" "', expected argument " "1"" of type '" "wxPropertyGridIterator const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_PropertyGridIterator" "', expected argument " "1"" of type '" "wxPropertyGridIterator const &""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridIterator * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPropertyGridIterator *)new wxPropertyGridIterator((wxPropertyGridIterator const &)*arg1);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPropertyGridIterator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PropertyGridIterator(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  
  if (!(argc = SWIG_Python_UnpackTuple(args,"new_PropertyGridIterator",0,4,argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_PropertyGridIterator__SWIG_2(self, argc, argv);
  }
  if ((argc >= 1) && (argc <= 4)) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_wxPropertyGridPageState, 0);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_2;
    if (argc > 2) {
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_wxPGProperty, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
    }
    return _wrap_new_PropertyGridIterator__SWIG_0(self, argc, argv);
  }
check_2:
  
  if (argc == 1) {
    return _wrap_new_PropertyGridIterator__SWIG_3(self, argc, argv);
  }
  if ((argc >= 3) && (argc <= 4)) {
    return _wrap_new_PropertyGridIterator__SWIG_1(self, argc, argv);
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"No matching function for overloaded 'new_PropertyGridIterator'");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PropertyGridIterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridIterator *arg1 = (wxPropertyGridIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PropertyGridIterator" "', expected argument " "1"" of type '" "wxPropertyGridIterator *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridIterator * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete arg1;
    
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridIterator___ref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridIterator *arg1 = (wxPropertyGridIterator *) 0 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridIterator___ref__" "', expected argument " "1"" of type '" "wxPropertyGridIterator const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridIterator * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)((wxPropertyGridIterator const *)arg1)->operator *();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridIterator_OneStep(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridPageState *arg1 = (wxPropertyGridPageState *) 0 ;
  int arg2 = (int) wxPG_ITERATE_DEFAULT ;
  wxPGProperty *arg3 = (wxPGProperty *) NULL ;
  int arg4 = (int) 1 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char *  kwnames[] = {
    (char *) "state",(char *) "flags",(char *) "property",(char *) "dir", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|OOO:PropertyGridIterator_OneStep",kwnames,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridPageState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridIterator_OneStep" "', expected argument " "1"" of type '" "wxPropertyGridPageState *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridPageState * >(argp1);
  if (obj1) {
    ecode2 = SWIG_AsVal_int(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridIterator_OneStep" "', expected argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
  }
  if (obj2) {
    res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_wxPGProperty, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PropertyGridIterator_OneStep" "', expected argument " "3"" of type '" "wxPGProperty *""'"); 
    }
    arg3 = reinterpret_cast< wxPGProperty * >(argp3);
  }
  if (obj3) {
    ecode4 = SWIG_AsVal_int(obj3, &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "PropertyGridIterator_OneStep" "', expected argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)wxPropertyGridIterator::OneStep(arg1,arg2,arg3,arg4);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PropertyGridIterator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxPropertyGridIterator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PropertyGridIterator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_PropertyGridConstIterator__SWIG_0(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPropertyGridPageState *arg1 = (wxPropertyGridPageState *) 0 ;
  int arg2 = (int) wxPG_ITERATE_DEFAULT ;
  wxPGProperty *arg3 = (wxPGProperty *) NULL ;
  int arg4 = (int) 1 ;
  wxPropertyGridConstIterator *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridPageState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_PropertyGridConstIterator" "', expected argument " "1"" of type '" "wxPropertyGridPageState const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridPageState * >(argp1);
  if (swig_obj[1]) {
    ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_PropertyGridConstIterator" "', expected argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
  }
  if (swig_obj[2]) {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_wxPGProperty, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_PropertyGridConstIterator" "', expected argument " "3"" of type '" "wxPGProperty const *""'"); 
    }
    arg3 = reinterpret_cast< wxPGProperty * >(argp3);
  }
  if (swig_obj[3]) {
    ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_PropertyGridConstIterator" "', expected argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPropertyGridConstIterator *)new wxPropertyGridConstIterator((wxPropertyGridPageState const *)arg1,arg2,(wxPGProperty const *)arg3,arg4);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPropertyGridConstIterator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PropertyGridConstIterator__SWIG_1(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPropertyGridPageState *arg1 = (wxPropertyGridPageState *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 = (int) 0 ;
  wxPropertyGridConstIterator *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridPageState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_PropertyGridConstIterator" "', expected argument " "1"" of type '" "wxPropertyGridPageState const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridPageState * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_PropertyGridConstIterator" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_PropertyGridConstIterator" "', expected argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  if (swig_obj[3]) {
    ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_PropertyGridConstIterator" "', expected argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPropertyGridConstIterator *)new wxPropertyGridConstIterator((wxPropertyGridPageState const *)arg1,arg2,arg3,arg4);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPropertyGridConstIterator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PropertyGridConstIterator__SWIG_2(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  wxPropertyGridConstIterator *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPropertyGridConstIterator *)new wxPropertyGridConstIterator();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPropertyGridConstIterator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PropertyGridConstIterator__SWIG_3(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPropertyGridConstIterator *arg1 = 0 ;
  wxPropertyGridConstIterator *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_wxPropertyGridConstIterator,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_PropertyGridConstIterator" "', expected argument " "1"" of type '" "wxPropertyGridConstIterator const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_PropertyGridConstIterator" "', expected argument " "1"" of type '" "wxPropertyGridConstIterator const &""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridConstIterator * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPropertyGridConstIterator *)new wxPropertyGridConstIterator((wxPropertyGridConstIterator const &)*arg1);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPropertyGridConstIterator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PropertyGridConstIterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridConstIterator *arg1 = (wxPropertyGridConstIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridConstIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PropertyGridConstIterator" "', expected argument " "1"" of type '" "wxPropertyGridConstIterator *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridConstIterator * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete arg1;
    
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridConstIterator___ref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridConstIterator *arg1 = (wxPropertyGridConstIterator *) 0 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridConstIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridConstIterator___ref__" "', expected argument " "1"" of type '" "wxPropertyGridConstIterator const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridConstIterator * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)((wxPropertyGridConstIterator const *)arg1)->operator *();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridConstIterator_OneStep(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridPageState *arg1 = (wxPropertyGridPageState *) 0 ;
  int arg2 = (int) wxPG_ITERATE_DEFAULT ;
  wxPGProperty *arg3 = (wxPGProperty *) NULL ;
  int arg4 = (int) 1 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char *  kwnames[] = {
    (char *) "state",(char *) "flags",(char *) "property",(char *) "dir", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|OOO:PropertyGridConstIterator_OneStep",kwnames,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridPageState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridConstIterator_OneStep" "', expected argument " "1"" of type '" "wxPropertyGridPageState const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridPageState * >(argp1);
  if (obj1) {
    ecode2 = SWIG_AsVal_int(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridConstIterator_OneStep" "', expected argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
  }
  if (obj2) {
    res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_wxPGProperty, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PropertyGridConstIterator_OneStep" "', expected argument " "3"" of type '" "wxPGProperty const *""'"); 
    }
    arg3 = reinterpret_cast< wxPGProperty * >(argp3);
  }
  if (obj3) {
    ecode4 = SWIG_AsVal_int(obj3, &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "PropertyGridConstIterator_OneStep" "', expected argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)wxPropertyGridConstIterator::OneStep((wxPropertyGridPageState const *)arg1,arg2,(wxPGProperty const *)arg3,arg4);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PropertyGridConstIterator__SWIG_4(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPropertyGridIterator *arg1 = 0 ;
  wxPropertyGridConstIterator *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_wxPropertyGridIterator,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_PropertyGridConstIterator" "', expected argument " "1"" of type '" "wxPropertyGridIterator const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_PropertyGridConstIterator" "', expected argument " "1"" of type '" "wxPropertyGridIterator const &""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridIterator * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPropertyGridConstIterator *)new wxPropertyGridConstIterator((wxPropertyGridIterator const &)*arg1);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPropertyGridConstIterator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PropertyGridConstIterator(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  
  if (!(argc = SWIG_Python_UnpackTuple(args,"new_PropertyGridConstIterator",0,4,argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_PropertyGridConstIterator__SWIG_2(self, argc, argv);
  }
  if ((argc >= 1) && (argc <= 4)) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_wxPropertyGridPageState, 0);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_2;
    if (argc > 2) {
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_wxPGProperty, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
    }
    return _wrap_new_PropertyGridConstIterator__SWIG_0(self, argc, argv);
  }
check_2:
  
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_wxPropertyGridConstIterator, 0);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_3;
    return _wrap_new_PropertyGridConstIterator__SWIG_3(self, argc, argv);
  }
check_3:
  
  if (argc == 1) {
    return _wrap_new_PropertyGridConstIterator__SWIG_4(self, argc, argv);
  }
  if ((argc >= 3) && (argc <= 4)) {
    return _wrap_new_PropertyGridConstIterator__SWIG_1(self, argc, argv);
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"No matching function for overloaded 'new_PropertyGridConstIterator'");
  return NULL;
}


SWIGINTERN PyObject *PropertyGridConstIterator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxPropertyGridConstIterator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PropertyGridConstIterator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_PGVIteratorBase_Next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGVIteratorBase *arg1 = (wxPGVIteratorBase *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGVIteratorBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGVIteratorBase_Next" "', expected argument " "1"" of type '" "wxPGVIteratorBase *""'"); 
  }
  arg1 = reinterpret_cast< wxPGVIteratorBase * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->Next();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PGVIteratorBase_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxPGVIteratorBase, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_PGVIterator__SWIG_0(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  wxPGVIterator *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGVIterator *)new wxPGVIterator();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGVIterator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PGVIterator__SWIG_1(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPGVIteratorBase *arg1 = (wxPGVIteratorBase *) 0 ;
  wxPGVIterator *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGVIteratorBase, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_PGVIterator" "', expected argument " "1"" of type '" "wxPGVIteratorBase *""'"); 
  }
  arg1 = reinterpret_cast< wxPGVIteratorBase * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGVIterator *)new wxPGVIterator(arg1);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGVIterator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PGVIterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGVIterator *arg1 = (wxPGVIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGVIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PGVIterator" "', expected argument " "1"" of type '" "wxPGVIterator *""'"); 
  }
  arg1 = reinterpret_cast< wxPGVIterator * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete arg1;
    
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGVIterator_UnRef(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGVIterator *arg1 = (wxPGVIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGVIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGVIterator_UnRef" "', expected argument " "1"" of type '" "wxPGVIterator *""'"); 
  }
  arg1 = reinterpret_cast< wxPGVIterator * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->UnRef();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PGVIterator__SWIG_2(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPGVIterator *arg1 = 0 ;
  wxPGVIterator *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_wxPGVIterator,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_PGVIterator" "', expected argument " "1"" of type '" "wxPGVIterator const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_PGVIterator" "', expected argument " "1"" of type '" "wxPGVIterator const &""'"); 
  }
  arg1 = reinterpret_cast< wxPGVIterator * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGVIterator *)new wxPGVIterator((wxPGVIterator const &)*arg1);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGVIterator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PGVIterator(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  
  if (!(argc = SWIG_Python_UnpackTuple(args,"new_PGVIterator",0,1,argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_PGVIterator__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_wxPGVIteratorBase, 0);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_2;
    return _wrap_new_PGVIterator__SWIG_1(self, argc, argv);
  }
check_2:
  
  if (argc == 1) {
    return _wrap_new_PGVIterator__SWIG_2(self, argc, argv);
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"No matching function for overloaded 'new_PGVIterator'");
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGVIterator_Next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGVIterator *arg1 = (wxPGVIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGVIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGVIterator_Next" "', expected argument " "1"" of type '" "wxPGVIterator *""'"); 
  }
  arg1 = reinterpret_cast< wxPGVIterator * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->Next();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGVIterator_AtEnd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGVIterator *arg1 = (wxPGVIterator *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGVIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGVIterator_AtEnd" "', expected argument " "1"" of type '" "wxPGVIterator const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGVIterator * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPGVIterator const *)arg1)->AtEnd();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGVIterator_GetProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGVIterator *arg1 = (wxPGVIterator *) 0 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGVIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGVIterator_GetProperty" "', expected argument " "1"" of type '" "wxPGVIterator const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGVIterator * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)((wxPGVIterator const *)arg1)->GetProperty();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PGVIterator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxPGVIterator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PGVIterator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_PGTypeOperationFailed(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxString *arg2 = 0 ;
  wxString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  bool temp3 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "p",(char *) "typestr",(char *) "op", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PGTypeOperationFailed",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGTypeOperationFailed" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    arg2 = wxString_in_helper(obj1);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  {
    arg3 = wxString_in_helper(obj2);
    if (arg3 == NULL) SWIG_fail;
    temp3 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxPGTypeOperationFailed((wxPGProperty const *)arg1,(wxString const &)*arg2,(wxString const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGGetFailed(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "p",(char *) "typestr", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGGetFailed",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGGetFailed" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  {
    arg2 = wxString_in_helper(obj1);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxPGGetFailed((wxPGProperty const *)arg1,(wxString const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PropertyGridInterface(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridInterface, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PropertyGridInterface" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete arg1;
    
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_Append(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGProperty *arg2 = (wxPGProperty *) 0 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "property", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_Append",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_Append" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PropertyGridInterface_Append" "', expected argument " "2"" of type '" "wxPGProperty *""'"); 
  }
  arg2 = reinterpret_cast< wxPGProperty * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)(arg1)->Append(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_AppendIn(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  wxPGProperty *arg3 = (wxPGProperty *) 0 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id",(char *) "newproperty", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PropertyGridInterface_AppendIn",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_AppendIn" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PropertyGridInterface_AppendIn" "', expected argument " "3"" of type '" "wxPGProperty *""'"); 
  }
  arg3 = reinterpret_cast< wxPGProperty * >(argp3);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)(arg1)->AppendIn((wxPGPropArgCls const &)*arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_BeginAddChildren(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_BeginAddChildren",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_BeginAddChildren" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->BeginAddChildren((wxPGPropArgCls const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_Clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_Clear" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->Clear();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_ClearSelection(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  bool arg2 = (bool) false ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "validation", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:PropertyGridInterface_ClearSelection",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_ClearSelection" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  if (obj1) {
    ecode2 = SWIG_AsVal_bool(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridInterface_ClearSelection" "', expected argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->ClearSelection(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_ClearModifiedStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_ClearModifiedStatus" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->ClearModifiedStatus();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_Collapse(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_Collapse",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_Collapse" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->Collapse((wxPGPropArgCls const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_CollapseAll(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_CollapseAll" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->CollapseAll();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_ChangePropertyValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  wxVariant arg3 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id",(char *) "newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PropertyGridInterface_ChangePropertyValue",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_ChangePropertyValue" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    if ( !PyObject_to_wxVariant(obj2, &arg3) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxVariant");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->ChangePropertyValue((wxPGPropArgCls const &)*arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_DeleteProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_DeleteProperty",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_DeleteProperty" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->DeleteProperty((wxPGPropArgCls const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_RemoveProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_RemoveProperty",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_RemoveProperty" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)(arg1)->RemoveProperty((wxPGPropArgCls const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_DisableProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_DisableProperty",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_DisableProperty" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->DisableProperty((wxPGPropArgCls const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_EditorValidate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_EditorValidate" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->EditorValidate();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_EnableProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  bool arg3 = (bool) true ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id",(char *) "enable", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PropertyGridInterface_EnableProperty",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_EnableProperty" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  if (obj2) {
    ecode3 = SWIG_AsVal_bool(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PropertyGridInterface_EnableProperty" "', expected argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->EnableProperty((wxPGPropArgCls const &)*arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_EndAddChildren(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_EndAddChildren",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_EndAddChildren" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->EndAddChildren((wxPGPropArgCls const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_Expand(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_Expand",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_Expand" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->Expand((wxPGPropArgCls const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_ExpandAll(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  bool arg2 = (bool) true ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "expand", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:PropertyGridInterface_ExpandAll",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_ExpandAll" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  if (obj1) {
    ecode2 = SWIG_AsVal_bool(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridInterface_ExpandAll" "', expected argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->ExpandAll(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetFirstChild(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_GetFirstChild",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_GetFirstChild" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)(arg1)->GetFirstChild((wxPGPropArgCls const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetIterator__SWIG_0(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  int arg2 = (int) wxPG_ITERATE_DEFAULT ;
  wxPGProperty *arg3 = (wxPGProperty *) NULL ;
  wxPropertyGridIterator result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_GetIterator" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  if (swig_obj[1]) {
    ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridInterface_GetIterator" "', expected argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
  }
  if (swig_obj[2]) {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_wxPGProperty, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PropertyGridInterface_GetIterator" "', expected argument " "3"" of type '" "wxPGProperty *""'"); 
    }
    arg3 = reinterpret_cast< wxPGProperty * >(argp3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (arg1)->GetIterator(arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new wxPropertyGridIterator(static_cast< const wxPropertyGridIterator& >(result))), SWIGTYPE_p_wxPropertyGridIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetIterator__SWIG_1(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  int arg2 = (int) wxPG_ITERATE_DEFAULT ;
  wxPGProperty *arg3 = (wxPGProperty *) NULL ;
  wxPropertyGridConstIterator result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_GetIterator" "', expected argument " "1"" of type '" "wxPropertyGridInterface const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  if (swig_obj[1]) {
    ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridInterface_GetIterator" "', expected argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
  }
  if (swig_obj[2]) {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_wxPGProperty, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PropertyGridInterface_GetIterator" "', expected argument " "3"" of type '" "wxPGProperty *""'"); 
    }
    arg3 = reinterpret_cast< wxPGProperty * >(argp3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPropertyGridInterface const *)arg1)->GetIterator(arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new wxPropertyGridConstIterator(static_cast< const wxPropertyGridConstIterator& >(result))), SWIGTYPE_p_wxPropertyGridConstIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetIterator__SWIG_2(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  int arg2 ;
  int arg3 ;
  wxPropertyGridIterator result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_GetIterator" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridInterface_GetIterator" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PropertyGridInterface_GetIterator" "', expected argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (arg1)->GetIterator(arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new wxPropertyGridIterator(static_cast< const wxPropertyGridIterator& >(result))), SWIGTYPE_p_wxPropertyGridIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetIterator__SWIG_3(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  int arg2 ;
  int arg3 ;
  wxPropertyGridConstIterator result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_GetIterator" "', expected argument " "1"" of type '" "wxPropertyGridInterface const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridInterface_GetIterator" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PropertyGridInterface_GetIterator" "', expected argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPropertyGridInterface const *)arg1)->GetIterator(arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new wxPropertyGridConstIterator(static_cast< const wxPropertyGridConstIterator& >(result))), SWIGTYPE_p_wxPropertyGridConstIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetIterator(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  
  if (!(argc = SWIG_Python_UnpackTuple(args,"PropertyGridInterface_GetIterator",0,3,argv))) SWIG_fail;
  --argc;
  if ((argc >= 1) && (argc <= 3)) {
    int _v = 0;
    if (argc > 2) {
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_wxPGProperty, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
    }
    return _wrap_PropertyGridInterface_GetIterator__SWIG_0(self, argc, argv);
  }
check_1:
  
  if ((argc >= 1) && (argc <= 3)) {
    int _v = 0;
    if (argc > 2) {
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_wxPGProperty, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
    }
    return _wrap_PropertyGridInterface_GetIterator__SWIG_1(self, argc, argv);
  }
check_2:
  
  if (argc == 3) {
    return _wrap_PropertyGridInterface_GetIterator__SWIG_2(self, argc, argv);
  }
  if (argc == 3) {
    return _wrap_PropertyGridInterface_GetIterator__SWIG_3(self, argc, argv);
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"No matching function for overloaded 'PropertyGridInterface_GetIterator'");
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetFirst__SWIG_0(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  int arg2 = (int) wxPG_ITERATE_ALL ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_GetFirst" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  if (swig_obj[1]) {
    ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridInterface_GetFirst" "', expected argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)(arg1)->GetFirst(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetFirst__SWIG_1(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  int arg2 = (int) wxPG_ITERATE_ALL ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_GetFirst" "', expected argument " "1"" of type '" "wxPropertyGridInterface const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  if (swig_obj[1]) {
    ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridInterface_GetFirst" "', expected argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)((wxPropertyGridInterface const *)arg1)->GetFirst(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetFirst(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  
  if (!(argc = SWIG_Python_UnpackTuple(args,"PropertyGridInterface_GetFirst",0,2,argv))) SWIG_fail;
  --argc;
  if ((argc >= 1) && (argc <= 2)) {
    return _wrap_PropertyGridInterface_GetFirst__SWIG_0(self, argc, argv);
  }
  if ((argc >= 1) && (argc <= 2)) {
    return _wrap_PropertyGridInterface_GetFirst__SWIG_1(self, argc, argv);
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"No matching function for overloaded 'PropertyGridInterface_GetFirst'");
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxString *arg2 = 0 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "name", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_GetProperty",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_GetProperty" "', expected argument " "1"" of type '" "wxPropertyGridInterface const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    arg2 = wxString_in_helper(obj1);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)((wxPropertyGridInterface const *)arg1)->GetProperty((wxString const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetPropertyAttributes(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  wxPGAttributeStorage *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_GetPropertyAttributes",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_GetPropertyAttributes" "', expected argument " "1"" of type '" "wxPropertyGridInterface const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxPGAttributeStorage const &_result_ref = ((wxPropertyGridInterface const *)arg1)->GetPropertyAttributes((wxPGPropArgCls const &)*arg2);
      result = (wxPGAttributeStorage *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxPGAttributeStorage_to_PyObject(result);
  }
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetPropertiesWithFlag(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxArrayPGProperty *arg2 = (wxArrayPGProperty *) 0 ;
  wxPGProperty::FlagType arg3 ;
  bool arg4 = (bool) false ;
  int arg5 = (int) wxPG_ITERATE_PROPERTIES|wxPG_ITERATE_HIDDEN|wxPG_ITERATE_CATEGORIES ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "targetArr",(char *) "flags",(char *) "inverse",(char *) "iterFlags", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PropertyGridInterface_GetPropertiesWithFlag",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_GetPropertiesWithFlag" "', expected argument " "1"" of type '" "wxPropertyGridInterface const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxArrayPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PropertyGridInterface_GetPropertiesWithFlag" "', expected argument " "2"" of type '" "wxArrayPGProperty *""'"); 
  }
  arg2 = reinterpret_cast< wxArrayPGProperty * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PropertyGridInterface_GetPropertiesWithFlag" "', expected argument " "3"" of type '" "wxPGProperty::FlagType""'");
  } 
  arg3 = static_cast< wxPGProperty::FlagType >(val3);
  if (obj3) {
    ecode4 = SWIG_AsVal_bool(obj3, &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "PropertyGridInterface_GetPropertiesWithFlag" "', expected argument " "4"" of type '" "bool""'");
    } 
    arg4 = static_cast< bool >(val4);
  }
  if (obj4) {
    ecode5 = SWIG_AsVal_int(obj4, &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "PropertyGridInterface_GetPropertiesWithFlag" "', expected argument " "5"" of type '" "int""'");
    } 
    arg5 = static_cast< int >(val5);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    ((wxPropertyGridInterface const *)arg1)->GetPropertiesWithFlag(arg2,arg3,arg4,arg5);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetPropertyAttribute(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  wxString *arg3 = 0 ;
  wxVariant result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp3 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id",(char *) "attrName", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PropertyGridInterface_GetPropertyAttribute",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_GetPropertyAttribute" "', expected argument " "1"" of type '" "wxPropertyGridInterface const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    arg3 = wxString_in_helper(obj2);
    if (arg3 == NULL) SWIG_fail;
    temp3 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPropertyGridInterface const *)arg1)->GetPropertyAttribute((wxPGPropArgCls const &)*arg2,(wxString const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxVariant_to_PyObject(&result);
    if ( !resultobj ) {
      PyErr_SetString(PyExc_TypeError,
        "this wxVariant type cannot be converted to Python object");
      SWIG_fail;
    }
  }
  {
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetPropertyCategory(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  wxPropertyCategory *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_GetPropertyCategory",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_GetPropertyCategory" "', expected argument " "1"" of type '" "wxPropertyGridInterface const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPropertyCategory *)((wxPropertyGridInterface const *)arg1)->GetPropertyCategory((wxPGPropArgCls const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPropertyCategory, 0 |  0 );
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetPropertyByLabel(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxString *arg2 = 0 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "label", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_GetPropertyByLabel",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_GetPropertyByLabel" "', expected argument " "1"" of type '" "wxPropertyGridInterface const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    arg2 = wxString_in_helper(obj1);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)((wxPropertyGridInterface const *)arg1)->GetPropertyByLabel((wxString const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetPropertyByName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxString *arg2 = 0 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_GetPropertyByName" "', expected argument " "1"" of type '" "wxPropertyGridInterface const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    arg2 = wxString_in_helper(swig_obj[1]);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)((wxPropertyGridInterface const *)arg1)->GetPropertyByName((wxString const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetPropertyByName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxString *arg2 = 0 ;
  wxString *arg3 = 0 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  bool temp3 = false ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_GetPropertyByName" "', expected argument " "1"" of type '" "wxPropertyGridInterface const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    arg2 = wxString_in_helper(swig_obj[1]);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  {
    arg3 = wxString_in_helper(swig_obj[2]);
    if (arg3 == NULL) SWIG_fail;
    temp3 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)((wxPropertyGridInterface const *)arg1)->GetPropertyByName((wxString const &)*arg2,(wxString const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetPropertyByName(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  
  if (!(argc = SWIG_Python_UnpackTuple(args,"PropertyGridInterface_GetPropertyByName",0,3,argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    return _wrap_PropertyGridInterface_GetPropertyByName__SWIG_0(self, argc, argv);
  }
  if (argc == 3) {
    return _wrap_PropertyGridInterface_GetPropertyByName__SWIG_1(self, argc, argv);
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"No matching function for overloaded 'PropertyGridInterface_GetPropertyByName'");
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetPropertyEditor(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  wxPGEditor *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_GetPropertyEditor",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_GetPropertyEditor" "', expected argument " "1"" of type '" "wxPropertyGridInterface const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGEditor *)((wxPropertyGridInterface const *)arg1)->GetPropertyEditor((wxPGPropArgCls const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGEditor, 0 |  0 );
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetPropertyHelpString(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  wxString result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_GetPropertyHelpString",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_GetPropertyHelpString" "', expected argument " "1"" of type '" "wxPropertyGridInterface const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPropertyGridInterface const *)arg1)->GetPropertyHelpString((wxPGPropArgCls const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
#if wxUSE_UNICODE
    resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
    resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
  }
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetPropertyImage(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  wxBitmap *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_GetPropertyImage",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_GetPropertyImage" "', expected argument " "1"" of type '" "wxPropertyGridInterface const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxBitmap *)((wxPropertyGridInterface const *)arg1)->GetPropertyImage((wxPGPropArgCls const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxBitmap, 0 |  0 );
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetPropertyLabel(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  wxString *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_GetPropertyLabel",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_GetPropertyLabel" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxString const &_result_ref = (arg1)->GetPropertyLabel((wxPGPropArgCls const &)*arg2);
      result = (wxString *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
#if wxUSE_UNICODE
    resultobj = PyUnicode_FromWideChar(result->c_str(), result->Len());
#else
    resultobj = PyString_FromStringAndSize(result->c_str(), result->Len());
#endif
  }
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetPropertyName(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGProperty *arg2 = (wxPGProperty *) 0 ;
  wxString result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "property", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_GetPropertyName",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_GetPropertyName" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PropertyGridInterface_GetPropertyName" "', expected argument " "2"" of type '" "wxPGProperty *""'"); 
  }
  arg2 = reinterpret_cast< wxPGProperty * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (arg1)->GetPropertyName(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
#if wxUSE_UNICODE
    resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
    resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetPropertyParent(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_GetPropertyParent",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_GetPropertyParent" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)(arg1)->GetPropertyParent((wxPGPropArgCls const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetPropertyValidator(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  wxValidator *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_GetPropertyValidator",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_GetPropertyValidator" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxValidator *)(arg1)->GetPropertyValidator((wxPGPropArgCls const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxPyMake_wxObject(result, 0); 
  }
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetPropertyValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  wxVariant result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_GetPropertyValue",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_GetPropertyValue" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (arg1)->GetPropertyValue((wxPGPropArgCls const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxVariant_to_PyObject(&result);
    if ( !resultobj ) {
      PyErr_SetString(PyExc_TypeError,
        "this wxVariant type cannot be converted to Python object");
      SWIG_fail;
    }
  }
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetPropertyValueAsString(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  wxString result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_GetPropertyValueAsString",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_GetPropertyValueAsString" "', expected argument " "1"" of type '" "wxPropertyGridInterface const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPropertyGridInterface const *)arg1)->GetPropertyValueAsString((wxPGPropArgCls const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
#if wxUSE_UNICODE
    resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
    resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
  }
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetPropertyValueAsLong(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  long result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_GetPropertyValueAsLong",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_GetPropertyValueAsLong" "', expected argument " "1"" of type '" "wxPropertyGridInterface const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (long)((wxPropertyGridInterface const *)arg1)->GetPropertyValueAsLong((wxPGPropArgCls const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetPropertyValueAsULong(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  long result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_GetPropertyValueAsULong",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_GetPropertyValueAsULong" "', expected argument " "1"" of type '" "wxPropertyGridInterface const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (long)((wxPropertyGridInterface const *)arg1)->GetPropertyValueAsULong((wxPGPropArgCls const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetPropertyValueAsBool(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_GetPropertyValueAsBool",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_GetPropertyValueAsBool" "', expected argument " "1"" of type '" "wxPropertyGridInterface const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPropertyGridInterface const *)arg1)->GetPropertyValueAsBool((wxPGPropArgCls const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetPropertyValueAsDouble(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  double result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_GetPropertyValueAsDouble",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_GetPropertyValueAsDouble" "', expected argument " "1"" of type '" "wxPropertyGridInterface const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (double)((wxPropertyGridInterface const *)arg1)->GetPropertyValueAsDouble((wxPGPropArgCls const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetPropertyValueAsArrayString(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  wxArrayString result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_GetPropertyValueAsArrayString",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_GetPropertyValueAsArrayString" "', expected argument " "1"" of type '" "wxPropertyGridInterface const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPropertyGridInterface const *)arg1)->GetPropertyValueAsArrayString((wxPGPropArgCls const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxArrayString2PyList_helper(result);
  }
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetPropertyValueAsArrayInt(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  wxArrayInt result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_GetPropertyValueAsArrayInt",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_GetPropertyValueAsArrayInt" "', expected argument " "1"" of type '" "wxPropertyGridInterface const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPropertyGridInterface const *)arg1)->GetPropertyValueAsArrayInt((wxPGPropArgCls const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxArrayInt2PyList_helper(result);
  }
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetSelection(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_GetSelection" "', expected argument " "1"" of type '" "wxPropertyGridInterface const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)((wxPropertyGridInterface const *)arg1)->GetSelection();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetSelectedProperties(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxArrayPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_GetSelectedProperties" "', expected argument " "1"" of type '" "wxPropertyGridInterface const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxArrayPGProperty const &_result_ref = ((wxPropertyGridInterface const *)arg1)->GetSelectedProperties();
      result = (wxArrayPGProperty *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxArrayPGPropertyToPyObject(result);
    if ( !resultobj ) SWIG_fail;
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetVIterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  int arg2 ;
  wxPGVIterator result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "flags", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_GetVIterator",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_GetVIterator" "', expected argument " "1"" of type '" "wxPropertyGridInterface const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridInterface_GetVIterator" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPropertyGridInterface const *)arg1)->GetVIterator(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new wxPGVIterator(static_cast< const wxPGVIterator& >(result))), SWIGTYPE_p_wxPGVIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_HideProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  bool arg3 = (bool) true ;
  int arg4 = (int) wxPG_RECURSE ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id",(char *) "hide",(char *) "flags", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|OO:PropertyGridInterface_HideProperty",kwnames,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_HideProperty" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  if (obj2) {
    ecode3 = SWIG_AsVal_bool(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PropertyGridInterface_HideProperty" "', expected argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
  }
  if (obj3) {
    ecode4 = SWIG_AsVal_int(obj3, &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "PropertyGridInterface_HideProperty" "', expected argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->HideProperty((wxPGPropArgCls const &)*arg2,arg3,arg4);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_InitAllTypeHandlers(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if (!SWIG_Python_UnpackTuple(args,"PropertyGridInterface_InitAllTypeHandlers",0,0,0)) SWIG_fail;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxPropertyGridInterface::InitAllTypeHandlers();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_Insert__SWIG_0(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  wxPGProperty *arg3 = (wxPGProperty *) 0 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_Insert" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(swig_obj[1], &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PropertyGridInterface_Insert" "', expected argument " "3"" of type '" "wxPGProperty *""'"); 
  }
  arg3 = reinterpret_cast< wxPGProperty * >(argp3);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)(arg1)->Insert((wxPGPropArgCls const &)*arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_Insert__SWIG_1(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  int arg3 ;
  wxPGProperty *arg4 = (wxPGProperty *) 0 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_Insert" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(swig_obj[1], &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PropertyGridInterface_Insert" "', expected argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "PropertyGridInterface_Insert" "', expected argument " "4"" of type '" "wxPGProperty *""'"); 
  }
  arg4 = reinterpret_cast< wxPGProperty * >(argp4);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)(arg1)->Insert((wxPGPropArgCls const &)*arg2,arg3,arg4);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_Insert(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  
  if (!(argc = SWIG_Python_UnpackTuple(args,"PropertyGridInterface_Insert",0,4,argv))) SWIG_fail;
  --argc;
  if (argc == 3) {
    return _wrap_PropertyGridInterface_Insert__SWIG_0(self, argc, argv);
  }
  if (argc == 4) {
    return _wrap_PropertyGridInterface_Insert__SWIG_1(self, argc, argv);
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"No matching function for overloaded 'PropertyGridInterface_Insert'");
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_IsPropertyCategory(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_IsPropertyCategory",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_IsPropertyCategory" "', expected argument " "1"" of type '" "wxPropertyGridInterface const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPropertyGridInterface const *)arg1)->IsPropertyCategory((wxPGPropArgCls const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_IsPropertyEnabled(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_IsPropertyEnabled",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_IsPropertyEnabled" "', expected argument " "1"" of type '" "wxPropertyGridInterface const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPropertyGridInterface const *)arg1)->IsPropertyEnabled((wxPGPropArgCls const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_IsPropertyExpanded(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_IsPropertyExpanded",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_IsPropertyExpanded" "', expected argument " "1"" of type '" "wxPropertyGridInterface const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPropertyGridInterface const *)arg1)->IsPropertyExpanded((wxPGPropArgCls const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_IsPropertyModified(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_IsPropertyModified",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_IsPropertyModified" "', expected argument " "1"" of type '" "wxPropertyGridInterface const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPropertyGridInterface const *)arg1)->IsPropertyModified((wxPGPropArgCls const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_IsPropertySelected(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_IsPropertySelected",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_IsPropertySelected" "', expected argument " "1"" of type '" "wxPropertyGridInterface const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPropertyGridInterface const *)arg1)->IsPropertySelected((wxPGPropArgCls const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_IsPropertyShown(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_IsPropertyShown",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_IsPropertyShown" "', expected argument " "1"" of type '" "wxPropertyGridInterface const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPropertyGridInterface const *)arg1)->IsPropertyShown((wxPGPropArgCls const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_IsPropertyValueUnspecified(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_IsPropertyValueUnspecified",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_IsPropertyValueUnspecified" "', expected argument " "1"" of type '" "wxPropertyGridInterface const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPropertyGridInterface const *)arg1)->IsPropertyValueUnspecified((wxPGPropArgCls const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_LimitPropertyEditing(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  bool arg3 = (bool) true ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id",(char *) "limit", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PropertyGridInterface_LimitPropertyEditing",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_LimitPropertyEditing" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  if (obj2) {
    ecode3 = SWIG_AsVal_bool(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PropertyGridInterface_LimitPropertyEditing" "', expected argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->LimitPropertyEditing((wxPGPropArgCls const &)*arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_RefreshGrid(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPropertyGridPageState *arg2 = (wxPropertyGridPageState *) NULL ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "state", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:PropertyGridInterface_RefreshGrid",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_RefreshGrid" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  if (obj1) {
    res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxPropertyGridPageState, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PropertyGridInterface_RefreshGrid" "', expected argument " "2"" of type '" "wxPropertyGridPageState *""'"); 
    }
    arg2 = reinterpret_cast< wxPropertyGridPageState * >(argp2);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->RefreshGrid(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_RegisterAdditionalEditors(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  
  if (!SWIG_Python_UnpackTuple(args,"PropertyGridInterface_RegisterAdditionalEditors",0,0,0)) SWIG_fail;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxPropertyGridInterface::RegisterAdditionalEditors();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_ReplaceProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  wxPGProperty *arg3 = (wxPGProperty *) 0 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id",(char *) "property", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PropertyGridInterface_ReplaceProperty",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_ReplaceProperty" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PropertyGridInterface_ReplaceProperty" "', expected argument " "3"" of type '" "wxPGProperty *""'"); 
  }
  arg3 = reinterpret_cast< wxPGProperty * >(argp3);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)(arg1)->ReplaceProperty((wxPGPropArgCls const &)*arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_RestoreEditableState(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxString *arg2 = 0 ;
  int arg3 = (int) wxPropertyGridInterface::AllStates ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "src",(char *) "restoreStates", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PropertyGridInterface_RestoreEditableState",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_RestoreEditableState" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    arg2 = wxString_in_helper(obj1);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PropertyGridInterface_RestoreEditableState" "', expected argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->RestoreEditableState((wxString const &)*arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_SaveEditableState(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  int arg2 = (int) wxPropertyGridInterface::AllStates ;
  wxString result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "includedStates", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:PropertyGridInterface_SaveEditableState",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_SaveEditableState" "', expected argument " "1"" of type '" "wxPropertyGridInterface const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  if (obj1) {
    ecode2 = SWIG_AsVal_int(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridInterface_SaveEditableState" "', expected argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPropertyGridInterface const *)arg1)->SaveEditableState(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
#if wxUSE_UNICODE
    resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
    resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_SetBoolChoices(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString *arg1 = 0 ;
  wxString *arg2 = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "trueChoice",(char *) "falseChoice", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_SetBoolChoices",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    arg1 = wxString_in_helper(obj0);
    if (arg1 == NULL) SWIG_fail;
    temp1 = true;
  }
  {
    arg2 = wxString_in_helper(obj1);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxPropertyGridInterface::SetBoolChoices((wxString const &)*arg1,(wxString const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_SetColumnProportion(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  int arg2 ;
  int arg3 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "column",(char *) "proportion", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PropertyGridInterface_SetColumnProportion",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_SetColumnProportion" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridInterface_SetColumnProportion" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PropertyGridInterface_SetColumnProportion" "', expected argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->SetColumnProportion(arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetColumnProportion(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  int arg2 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "column", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_GetColumnProportion",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_GetColumnProportion" "', expected argument " "1"" of type '" "wxPropertyGridInterface const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridInterface_GetColumnProportion" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPropertyGridInterface const *)arg1)->GetColumnProportion(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_SetPropertyAttribute(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  wxString *arg3 = 0 ;
  wxVariant arg4 ;
  long arg5 = (long) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp3 = false ;
  long val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id",(char *) "attrName",(char *) "value",(char *) "argFlags", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|O:PropertyGridInterface_SetPropertyAttribute",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_SetPropertyAttribute" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    arg3 = wxString_in_helper(obj2);
    if (arg3 == NULL) SWIG_fail;
    temp3 = true;
  }
  {
    if ( !PyObject_to_wxVariant(obj3, &arg4) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxVariant");
      SWIG_fail;
    }
  }
  if (obj4) {
    ecode5 = SWIG_AsVal_long(obj4, &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "PropertyGridInterface_SetPropertyAttribute" "', expected argument " "5"" of type '" "long""'");
    } 
    arg5 = static_cast< long >(val5);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetPropertyAttribute((wxPGPropArgCls const &)*arg2,(wxString const &)*arg3,arg4,arg5);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_SetPropertyAttributeAll(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxString *arg2 = 0 ;
  wxVariant arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "attrName",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PropertyGridInterface_SetPropertyAttributeAll",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_SetPropertyAttributeAll" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    arg2 = wxString_in_helper(obj1);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  {
    if ( !PyObject_to_wxVariant(obj2, &arg3) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxVariant");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetPropertyAttributeAll((wxString const &)*arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_SetPropertyBackgroundColour(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  wxColour *arg3 = 0 ;
  int arg4 = (int) wxPG_RECURSE ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  wxColour temp3 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id",(char *) "colour",(char *) "flags", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|O:PropertyGridInterface_SetPropertyBackgroundColour",kwnames,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_SetPropertyBackgroundColour" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    arg3 = &temp3;
    if ( ! wxColour_helper(obj2, &arg3)) SWIG_fail;
  }
  if (obj3) {
    ecode4 = SWIG_AsVal_int(obj3, &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "PropertyGridInterface_SetPropertyBackgroundColour" "', expected argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetPropertyBackgroundColour((wxPGPropArgCls const &)*arg2,(wxColour const &)*arg3,arg4);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_SetPropertyColoursToDefault(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_SetPropertyColoursToDefault",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_SetPropertyColoursToDefault" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetPropertyColoursToDefault((wxPGPropArgCls const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_SetPropertyTextColour(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  wxColour *arg3 = 0 ;
  int arg4 = (int) wxPG_RECURSE ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  wxColour temp3 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id",(char *) "col",(char *) "flags", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|O:PropertyGridInterface_SetPropertyTextColour",kwnames,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_SetPropertyTextColour" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    arg3 = &temp3;
    if ( ! wxColour_helper(obj2, &arg3)) SWIG_fail;
  }
  if (obj3) {
    ecode4 = SWIG_AsVal_int(obj3, &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "PropertyGridInterface_SetPropertyTextColour" "', expected argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetPropertyTextColour((wxPGPropArgCls const &)*arg2,(wxColour const &)*arg3,arg4);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetPropertyBackgroundColour(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  wxColour result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_GetPropertyBackgroundColour",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_GetPropertyBackgroundColour" "', expected argument " "1"" of type '" "wxPropertyGridInterface const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPropertyGridInterface const *)arg1)->GetPropertyBackgroundColour((wxPGPropArgCls const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new wxColour(static_cast< const wxColour& >(result))), SWIGTYPE_p_wxColour, SWIG_POINTER_OWN |  0 );
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetPropertyTextColour(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  wxColour result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_GetPropertyTextColour",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_GetPropertyTextColour" "', expected argument " "1"" of type '" "wxPropertyGridInterface const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPropertyGridInterface const *)arg1)->GetPropertyTextColour((wxPGPropArgCls const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new wxColour(static_cast< const wxColour& >(result))), SWIGTYPE_p_wxColour, SWIG_POINTER_OWN |  0 );
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_SetPropertyCell(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  int arg3 ;
  wxString const &arg4_defvalue = wxEmptyString ;
  wxString *arg4 = (wxString *) &arg4_defvalue ;
  wxBitmap const &arg5_defvalue = wxNullBitmap ;
  wxBitmap *arg5 = (wxBitmap *) &arg5_defvalue ;
  wxColour const &arg6_defvalue = wxNullColour ;
  wxColour *arg6 = (wxColour *) &arg6_defvalue ;
  wxColour const &arg7_defvalue = wxNullColour ;
  wxColour *arg7 = (wxColour *) &arg7_defvalue ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  bool temp4 = false ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  wxColour temp6 ;
  wxColour temp7 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id",(char *) "column",(char *) "text",(char *) "bitmap",(char *) "fgCol",(char *) "bgCol", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OOOO:PropertyGridInterface_SetPropertyCell",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_SetPropertyCell" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PropertyGridInterface_SetPropertyCell" "', expected argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  if (obj3) {
    {
      arg4 = wxString_in_helper(obj3);
      if (arg4 == NULL) SWIG_fail;
      temp4 = true;
    }
  }
  if (obj4) {
    res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_wxBitmap,  0  | 0);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "PropertyGridInterface_SetPropertyCell" "', expected argument " "5"" of type '" "wxBitmap const &""'"); 
    }
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PropertyGridInterface_SetPropertyCell" "', expected argument " "5"" of type '" "wxBitmap const &""'"); 
    }
    arg5 = reinterpret_cast< wxBitmap * >(argp5);
  }
  if (obj5) {
    {
      arg6 = &temp6;
      if ( ! wxColour_helper(obj5, &arg6)) SWIG_fail;
    }
  }
  if (obj6) {
    {
      arg7 = &temp7;
      if ( ! wxColour_helper(obj6, &arg7)) SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetPropertyCell((wxPGPropArgCls const &)*arg2,arg3,(wxString const &)*arg4,(wxBitmap const &)*arg5,(wxColour const &)*arg6,(wxColour const &)*arg7);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    delete arg2;
  }
  {
    if (temp4)
    delete arg4;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  {
    if (temp4)
    delete arg4;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_SetPropertyEditor(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  wxString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp3 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id",(char *) "editorName", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PropertyGridInterface_SetPropertyEditor",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_SetPropertyEditor" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    arg3 = wxString_in_helper(obj2);
    if (arg3 == NULL) SWIG_fail;
    temp3 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetPropertyEditor((wxPGPropArgCls const &)*arg2,(wxString const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_SetPropertyLabel(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  wxString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp3 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id",(char *) "newproplabel", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PropertyGridInterface_SetPropertyLabel",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_SetPropertyLabel" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    arg3 = wxString_in_helper(obj2);
    if (arg3 == NULL) SWIG_fail;
    temp3 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetPropertyLabel((wxPGPropArgCls const &)*arg2,(wxString const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_SetPropertyName(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  wxString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp3 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id",(char *) "newName", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PropertyGridInterface_SetPropertyName",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_SetPropertyName" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    arg3 = wxString_in_helper(obj2);
    if (arg3 == NULL) SWIG_fail;
    temp3 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetPropertyName((wxPGPropArgCls const &)*arg2,(wxString const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_SetPropertyReadOnly(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  bool arg3 = (bool) true ;
  int arg4 = (int) wxPG_RECURSE ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id",(char *) "set",(char *) "flags", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|OO:PropertyGridInterface_SetPropertyReadOnly",kwnames,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_SetPropertyReadOnly" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  if (obj2) {
    ecode3 = SWIG_AsVal_bool(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PropertyGridInterface_SetPropertyReadOnly" "', expected argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
  }
  if (obj3) {
    ecode4 = SWIG_AsVal_int(obj3, &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "PropertyGridInterface_SetPropertyReadOnly" "', expected argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetPropertyReadOnly((wxPGPropArgCls const &)*arg2,arg3,arg4);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_SetPropertyValueUnspecified(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_SetPropertyValueUnspecified",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_SetPropertyValueUnspecified" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetPropertyValueUnspecified((wxPGPropArgCls const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_SetPropertyHelpString(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  wxString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp3 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id",(char *) "helpString", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PropertyGridInterface_SetPropertyHelpString",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_SetPropertyHelpString" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    arg3 = wxString_in_helper(obj2);
    if (arg3 == NULL) SWIG_fail;
    temp3 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetPropertyHelpString((wxPGPropArgCls const &)*arg2,(wxString const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_SetPropertyImage(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  wxBitmap *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id",(char *) "bmp", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PropertyGridInterface_SetPropertyImage",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_SetPropertyImage" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_wxBitmap,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PropertyGridInterface_SetPropertyImage" "', expected argument " "3"" of type '" "wxBitmap &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PropertyGridInterface_SetPropertyImage" "', expected argument " "3"" of type '" "wxBitmap &""'"); 
  }
  arg3 = reinterpret_cast< wxBitmap * >(argp3);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetPropertyImage((wxPGPropArgCls const &)*arg2,*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_SetPropertyMaxLength(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  int arg3 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id",(char *) "maxLen", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PropertyGridInterface_SetPropertyMaxLength",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_SetPropertyMaxLength" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PropertyGridInterface_SetPropertyMaxLength" "', expected argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->SetPropertyMaxLength((wxPGPropArgCls const &)*arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_SetPropertyValidator(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  wxValidator *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id",(char *) "validator", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PropertyGridInterface_SetPropertyValidator",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_SetPropertyValidator" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_wxValidator,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PropertyGridInterface_SetPropertyValidator" "', expected argument " "3"" of type '" "wxValidator const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PropertyGridInterface_SetPropertyValidator" "', expected argument " "3"" of type '" "wxValidator const &""'"); 
  }
  arg3 = reinterpret_cast< wxValidator * >(argp3);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetPropertyValidator((wxPGPropArgCls const &)*arg2,(wxValidator const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_SetPropertyValueString(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  wxString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp3 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PropertyGridInterface_SetPropertyValueString",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_SetPropertyValueString" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    arg3 = wxString_in_helper(obj2);
    if (arg3 == NULL) SWIG_fail;
    temp3 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetPropertyValueString((wxPGPropArgCls const &)*arg2,(wxString const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_SetPropertyValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  wxVariant arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PropertyGridInterface_SetPropertyValue",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_SetPropertyValue" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    if ( !PyObject_to_wxVariant(obj2, &arg3) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxVariant");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetPropertyValue((wxPGPropArgCls const &)*arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_SetValidationFailureBehavior(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "vfbFlags", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_SetValidationFailureBehavior",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_SetValidationFailureBehavior" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridInterface_SetValidationFailureBehavior" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetValidationFailureBehavior(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_Sort(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  int arg2 = (int) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "flags", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:PropertyGridInterface_Sort",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_Sort" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  if (obj1) {
    ecode2 = SWIG_AsVal_int(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridInterface_Sort" "', expected argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->Sort(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_SortChildren(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  int arg3 = (int) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id",(char *) "flags", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PropertyGridInterface_SortChildren",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_SortChildren" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PropertyGridInterface_SortChildren" "', expected argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SortChildren((wxPGPropArgCls const &)*arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetPropertyByNameA(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxString *arg2 = 0 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "name", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_GetPropertyByNameA",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_GetPropertyByNameA" "', expected argument " "1"" of type '" "wxPropertyGridInterface const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  {
    arg2 = wxString_in_helper(obj1);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)((wxPropertyGridInterface const *)arg1)->GetPropertyByNameA((wxString const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_GetEditorByName(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString *arg1 = 0 ;
  wxPGEditor *result = 0 ;
  bool temp1 = false ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "editorName", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PropertyGridInterface_GetEditorByName",kwnames,&obj0)) SWIG_fail;
  {
    arg1 = wxString_in_helper(obj0);
    if (arg1 == NULL) SWIG_fail;
    temp1 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGEditor *)wxPropertyGridInterface::GetEditorByName((wxString const &)*arg1);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGEditor, 0 |  0 );
  {
    if (temp1)
    delete arg1;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridInterface_RefreshProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridInterface *arg1 = (wxPropertyGridInterface *) 0 ;
  wxPGProperty *arg2 = (wxPGProperty *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "p", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridInterface_RefreshProperty",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridInterface, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridInterface_RefreshProperty" "', expected argument " "1"" of type '" "wxPropertyGridInterface *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridInterface * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PropertyGridInterface_RefreshProperty" "', expected argument " "2"" of type '" "wxPGProperty *""'"); 
  }
  arg2 = reinterpret_cast< wxPGProperty * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->RefreshProperty(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PropertyGridInterface_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxPropertyGridInterface, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_PGCommonValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString *arg1 = 0 ;
  wxPGCellRenderer *arg2 = (wxPGCellRenderer *) 0 ;
  wxPGCommonValue *result = 0 ;
  bool temp1 = false ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "renderer", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:new_PGCommonValue",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    arg1 = wxString_in_helper(obj0);
    if (arg1 == NULL) SWIG_fail;
    temp1 = true;
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxPGCellRenderer, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_PGCommonValue" "', expected argument " "2"" of type '" "wxPGCellRenderer *""'"); 
  }
  arg2 = reinterpret_cast< wxPGCellRenderer * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGCommonValue *)new wxPGCommonValue((wxString const &)*arg1,arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGCommonValue, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PGCommonValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGCommonValue *arg1 = (wxPGCommonValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGCommonValue, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PGCommonValue" "', expected argument " "1"" of type '" "wxPGCommonValue *""'"); 
  }
  arg1 = reinterpret_cast< wxPGCommonValue * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete arg1;
    
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGCommonValue_GetEditableText(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGCommonValue *arg1 = (wxPGCommonValue *) 0 ;
  wxString result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGCommonValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGCommonValue_GetEditableText" "', expected argument " "1"" of type '" "wxPGCommonValue const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGCommonValue * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPGCommonValue const *)arg1)->GetEditableText();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
#if wxUSE_UNICODE
    resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
    resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGCommonValue_GetLabel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGCommonValue *arg1 = (wxPGCommonValue *) 0 ;
  wxString *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGCommonValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGCommonValue_GetLabel" "', expected argument " "1"" of type '" "wxPGCommonValue const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGCommonValue * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxString const &_result_ref = ((wxPGCommonValue const *)arg1)->GetLabel();
      result = (wxString *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
#if wxUSE_UNICODE
    resultobj = PyUnicode_FromWideChar(result->c_str(), result->Len());
#else
    resultobj = PyString_FromStringAndSize(result->c_str(), result->Len());
#endif
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGCommonValue_GetRenderer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGCommonValue *arg1 = (wxPGCommonValue *) 0 ;
  wxPGCellRenderer *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGCommonValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGCommonValue_GetRenderer" "', expected argument " "1"" of type '" "wxPGCommonValue const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGCommonValue * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGCellRenderer *)((wxPGCommonValue const *)arg1)->GetRenderer();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGCellRenderer, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PGCommonValue_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxPGCommonValue, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PGCommonValue_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_PGValidationInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGValidationInfo *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args,"new_PGValidationInfo",0,0,0)) SWIG_fail;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGValidationInfo *)new wxPGValidationInfo();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGValidationInfo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PGValidationInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGValidationInfo *arg1 = (wxPGValidationInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGValidationInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PGValidationInfo" "', expected argument " "1"" of type '" "wxPGValidationInfo *""'"); 
  }
  arg1 = reinterpret_cast< wxPGValidationInfo * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete arg1;
    
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGValidationInfo_GetFailureBehavior(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGValidationInfo *arg1 = (wxPGValidationInfo *) 0 ;
  char result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGValidationInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGValidationInfo_GetFailureBehavior" "', expected argument " "1"" of type '" "wxPGValidationInfo const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGValidationInfo * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (char)((wxPGValidationInfo const *)arg1)->GetFailureBehavior();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_char(static_cast< char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGValidationInfo_GetFailureMessage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGValidationInfo *arg1 = (wxPGValidationInfo *) 0 ;
  wxString *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGValidationInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGValidationInfo_GetFailureMessage" "', expected argument " "1"" of type '" "wxPGValidationInfo const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGValidationInfo * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxString const &_result_ref = ((wxPGValidationInfo const *)arg1)->GetFailureMessage();
      result = (wxString *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
#if wxUSE_UNICODE
    resultobj = PyUnicode_FromWideChar(result->c_str(), result->Len());
#else
    resultobj = PyString_FromStringAndSize(result->c_str(), result->Len());
#endif
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGValidationInfo_GetValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGValidationInfo *arg1 = (wxPGValidationInfo *) 0 ;
  wxVariant *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGValidationInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGValidationInfo_GetValue" "', expected argument " "1"" of type '" "wxPGValidationInfo *""'"); 
  }
  arg1 = reinterpret_cast< wxPGValidationInfo * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxVariant &_result_ref = (arg1)->GetValue();
      result = (wxVariant *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxVariant_to_PyObject(result);
    if ( !resultobj ) {
      PyErr_SetString(PyExc_TypeError,
        "this wxVariant type cannot be converted to Python object");
      SWIG_fail;
    }
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGValidationInfo_SetFailureBehavior(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGValidationInfo *arg1 = (wxPGValidationInfo *) 0 ;
  char arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "failureBehavior", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGValidationInfo_SetFailureBehavior",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGValidationInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGValidationInfo_SetFailureBehavior" "', expected argument " "1"" of type '" "wxPGValidationInfo *""'"); 
  }
  arg1 = reinterpret_cast< wxPGValidationInfo * >(argp1);
  ecode2 = SWIG_AsVal_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGValidationInfo_SetFailureBehavior" "', expected argument " "2"" of type '" "char""'");
  } 
  arg2 = static_cast< char >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetFailureBehavior(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGValidationInfo_SetFailureMessage(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGValidationInfo *arg1 = (wxPGValidationInfo *) 0 ;
  wxString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "message", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGValidationInfo_SetFailureMessage",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGValidationInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGValidationInfo_SetFailureMessage" "', expected argument " "1"" of type '" "wxPGValidationInfo *""'"); 
  }
  arg1 = reinterpret_cast< wxPGValidationInfo * >(argp1);
  {
    arg2 = wxString_in_helper(obj1);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetFailureMessage((wxString const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *PGValidationInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxPGValidationInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PGValidationInfo_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_PropertyGrid(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxWindow *arg1 = (wxWindow *) 0 ;
  int arg2 = (int) wxID_ANY ;
  wxPoint const &arg3_defvalue = wxDefaultPosition ;
  wxPoint *arg3 = (wxPoint *) &arg3_defvalue ;
  wxSize const &arg4_defvalue = wxDefaultSize ;
  wxSize *arg4 = (wxSize *) &arg4_defvalue ;
  long arg5 = (long) (0) ;
  wxString const &arg6_defvalue = wxPropertyGridNameStr ;
  wxString *arg6 = (wxString *) &arg6_defvalue ;
  wxPropertyGrid *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  wxPoint temp3 ;
  wxSize temp4 ;
  long val5 ;
  int ecode5 = 0 ;
  bool temp6 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  char *  kwnames[] = {
    (char *) "parent",(char *) "id",(char *) "pos",(char *) "size",(char *) "style",(char *) "name", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|OOOOO:new_PropertyGrid",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxWindow, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_PropertyGrid" "', expected argument " "1"" of type '" "wxWindow *""'"); 
  }
  arg1 = reinterpret_cast< wxWindow * >(argp1);
  if (obj1) {
    ecode2 = SWIG_AsVal_int(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_PropertyGrid" "', expected argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
  }
  if (obj2) {
    {
      arg3 = &temp3;
      if ( ! wxPoint_helper(obj2, &arg3)) SWIG_fail;
    }
  }
  if (obj3) {
    {
      arg4 = &temp4;
      if ( ! wxSize_helper(obj3, &arg4)) SWIG_fail;
    }
  }
  if (obj4) {
    ecode5 = SWIG_AsVal_long(obj4, &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_PropertyGrid" "', expected argument " "5"" of type '" "long""'");
    } 
    arg5 = static_cast< long >(val5);
  }
  if (obj5) {
    {
      arg6 = wxString_in_helper(obj5);
      if (arg6 == NULL) SWIG_fail;
      temp6 = true;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPropertyGrid *)new wxPropertyGrid(arg1,arg2,(wxPoint const &)*arg3,(wxSize const &)*arg4,arg5,(wxString const &)*arg6);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPropertyGrid, SWIG_POINTER_NEW |  0 );
  {
    if (temp6)
    delete arg6;
  }
  return resultobj;
fail:
  {
    if (temp6)
    delete arg6;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PropertyGrid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PropertyGrid" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete arg1;
    
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_AddActionTrigger(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 = (int) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "action",(char *) "keycode",(char *) "modifiers", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|O:PropertyGrid_AddActionTrigger",kwnames,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_AddActionTrigger" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGrid_AddActionTrigger" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PropertyGrid_AddActionTrigger" "', expected argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  if (obj3) {
    ecode4 = SWIG_AsVal_int(obj3, &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "PropertyGrid_AddActionTrigger" "', expected argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->AddActionTrigger(arg2,arg3,arg4);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_DedicateKey(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "keycode", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGrid_DedicateKey",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_DedicateKey" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGrid_DedicateKey" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->DedicateKey(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_AutoGetTranslation(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  bool arg1 ;
  bool val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "enable", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:PropertyGrid_AutoGetTranslation",kwnames,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "PropertyGrid_AutoGetTranslation" "', expected argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxPropertyGrid::AutoGetTranslation(arg1);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_ChangePropertyValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  wxVariant arg3 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id",(char *) "newValue", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PropertyGrid_ChangePropertyValue",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_ChangePropertyValue" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    if ( !PyObject_to_wxVariant(obj2, &arg3) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxVariant");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->ChangePropertyValue((wxPGPropArgCls const &)*arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_CenterSplitter(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  bool arg2 = (bool) false ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "enableAutoResizing", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:PropertyGrid_CenterSplitter",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_CenterSplitter" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  if (obj1) {
    ecode2 = SWIG_AsVal_bool(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGrid_CenterSplitter" "', expected argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->CenterSplitter(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_ClearActionTriggers(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "action", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGrid_ClearActionTriggers",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_ClearActionTriggers" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGrid_ClearActionTriggers" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->ClearActionTriggers(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_CommitChangesFromEditor(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  int arg2 = (int) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "flags", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:PropertyGrid_CommitChangesFromEditor",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_CommitChangesFromEditor" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  if (obj1) {
    ecode2 = SWIG_AsVal_int(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGrid_CommitChangesFromEditor" "', expected argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->CommitChangesFromEditor(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_Create(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxWindow *arg2 = (wxWindow *) 0 ;
  int arg3 = (int) wxID_ANY ;
  wxPoint const &arg4_defvalue = wxDefaultPosition ;
  wxPoint *arg4 = (wxPoint *) &arg4_defvalue ;
  wxSize const &arg5_defvalue = wxDefaultSize ;
  wxSize *arg5 = (wxSize *) &arg5_defvalue ;
  long arg6 = (long) (0) ;
  wxString const &arg7_defvalue = wxPropertyGridNameStr ;
  wxString *arg7 = (wxString *) &arg7_defvalue ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  wxPoint temp4 ;
  wxSize temp5 ;
  long val6 ;
  int ecode6 = 0 ;
  bool temp7 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "parent",(char *) "id",(char *) "pos",(char *) "size",(char *) "style",(char *) "name", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|OOOOO:PropertyGrid_Create",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_Create" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxWindow, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PropertyGrid_Create" "', expected argument " "2"" of type '" "wxWindow *""'"); 
  }
  arg2 = reinterpret_cast< wxWindow * >(argp2);
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PropertyGrid_Create" "', expected argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  if (obj3) {
    {
      arg4 = &temp4;
      if ( ! wxPoint_helper(obj3, &arg4)) SWIG_fail;
    }
  }
  if (obj4) {
    {
      arg5 = &temp5;
      if ( ! wxSize_helper(obj4, &arg5)) SWIG_fail;
    }
  }
  if (obj5) {
    ecode6 = SWIG_AsVal_long(obj5, &val6);
    if (!SWIG_IsOK(ecode6)) {
      SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "PropertyGrid_Create" "', expected argument " "6"" of type '" "long""'");
    } 
    arg6 = static_cast< long >(val6);
  }
  if (obj6) {
    {
      arg7 = wxString_in_helper(obj6);
      if (arg7 == NULL) SWIG_fail;
      temp7 = true;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->Create(arg2,arg3,(wxPoint const &)*arg4,(wxSize const &)*arg5,arg6,(wxString const &)*arg7);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  {
    if (temp7)
    delete arg7;
  }
  return resultobj;
fail:
  {
    if (temp7)
    delete arg7;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_EditorsValueWasModified(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_EditorsValueWasModified" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->EditorsValueWasModified();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_EditorsValueWasNotModified(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_EditorsValueWasNotModified" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->EditorsValueWasNotModified();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_EnableCategories(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  bool arg2 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "enable", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGrid_EnableCategories",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_EnableCategories" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGrid_EnableCategories" "', expected argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->EnableCategories(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_EnsureVisible(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGrid_EnsureVisible",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_EnsureVisible" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->EnsureVisible((wxPGPropArgCls const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_FitColumns(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxSize result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_FitColumns" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (arg1)->FitColumns();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new wxSize(static_cast< const wxSize& >(result))), SWIGTYPE_p_wxSize, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetPanel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxWindow *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetPanel" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxWindow *)(arg1)->GetPanel();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxPyMake_wxObject(result, 0); 
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetCaptionBackgroundColour(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxColour result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetCaptionBackgroundColour" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPropertyGrid const *)arg1)->GetCaptionBackgroundColour();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new wxColour(static_cast< const wxColour& >(result))), SWIGTYPE_p_wxColour, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetCaptionFont__SWIG_0(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxFont *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetCaptionFont" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxFont &_result_ref = (arg1)->GetCaptionFont();
      result = (wxFont *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    wxFont* resultptr = new wxFont(*result);
    resultobj = SWIG_NewPointerObj((void*)(resultptr), SWIGTYPE_p_wxFont, 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetCaptionFont__SWIG_1(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxFont *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetCaptionFont" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxFont const &_result_ref = ((wxPropertyGrid const *)arg1)->GetCaptionFont();
      result = (wxFont *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    wxFont* resultptr = new wxFont(*result);
    resultobj = SWIG_NewPointerObj((void*)(resultptr), SWIGTYPE_p_wxFont, 1);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetCaptionFont(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  
  if (!(argc = SWIG_Python_UnpackTuple(args,"PropertyGrid_GetCaptionFont",0,1,argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    return _wrap_PropertyGrid_GetCaptionFont__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    return _wrap_PropertyGrid_GetCaptionFont__SWIG_1(self, argc, argv);
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"No matching function for overloaded 'PropertyGrid_GetCaptionFont'");
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetCaptionForegroundColour(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxColour result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetCaptionForegroundColour" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPropertyGrid const *)arg1)->GetCaptionForegroundColour();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new wxColour(static_cast< const wxColour& >(result))), SWIGTYPE_p_wxColour, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetCellBackgroundColour(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxColour result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetCellBackgroundColour" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPropertyGrid const *)arg1)->GetCellBackgroundColour();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new wxColour(static_cast< const wxColour& >(result))), SWIGTYPE_p_wxColour, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetCellDisabledTextColour(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxColour result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetCellDisabledTextColour" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPropertyGrid const *)arg1)->GetCellDisabledTextColour();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new wxColour(static_cast< const wxColour& >(result))), SWIGTYPE_p_wxColour, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetCellTextColour(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxColour result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetCellTextColour" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPropertyGrid const *)arg1)->GetCellTextColour();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new wxColour(static_cast< const wxColour& >(result))), SWIGTYPE_p_wxColour, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetColumnCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetColumnCount" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPropertyGrid const *)arg1)->GetColumnCount();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetEmptySpaceColour(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxColour result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetEmptySpaceColour" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPropertyGrid const *)arg1)->GetEmptySpaceColour();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new wxColour(static_cast< const wxColour& >(result))), SWIGTYPE_p_wxColour, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetFontHeight(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetFontHeight" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPropertyGrid const *)arg1)->GetFontHeight();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetGrid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxPropertyGrid *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetGrid" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPropertyGrid *)(arg1)->GetGrid();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetImageRect(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxPGProperty *arg2 = (wxPGProperty *) 0 ;
  int arg3 ;
  wxRect result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "p",(char *) "item", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PropertyGrid_GetImageRect",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetImageRect" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PropertyGrid_GetImageRect" "', expected argument " "2"" of type '" "wxPGProperty *""'"); 
  }
  arg2 = reinterpret_cast< wxPGProperty * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PropertyGrid_GetImageRect" "', expected argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPropertyGrid const *)arg1)->GetImageRect(arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new wxRect(static_cast< const wxRect& >(result))), SWIGTYPE_p_wxRect, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetImageSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxPGProperty *arg2 = (wxPGProperty *) NULL ;
  int arg3 = (int) -1 ;
  wxSize result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "p",(char *) "item", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|OO:PropertyGrid_GetImageSize",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetImageSize" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  if (obj1) {
    res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxPGProperty, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PropertyGrid_GetImageSize" "', expected argument " "2"" of type '" "wxPGProperty *""'"); 
    }
    arg2 = reinterpret_cast< wxPGProperty * >(argp2);
  }
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PropertyGrid_GetImageSize" "', expected argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPropertyGrid const *)arg1)->GetImageSize(arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new wxSize(static_cast< const wxSize& >(result))), SWIGTYPE_p_wxSize, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetLastItem__SWIG_0(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  int arg2 = (int) wxPG_ITERATE_DEFAULT ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetLastItem" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  if (swig_obj[1]) {
    ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGrid_GetLastItem" "', expected argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)(arg1)->GetLastItem(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetLastItem__SWIG_1(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  int arg2 = (int) wxPG_ITERATE_DEFAULT ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetLastItem" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  if (swig_obj[1]) {
    ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGrid_GetLastItem" "', expected argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)((wxPropertyGrid const *)arg1)->GetLastItem(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetLastItem(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  
  if (!(argc = SWIG_Python_UnpackTuple(args,"PropertyGrid_GetLastItem",0,2,argv))) SWIG_fail;
  --argc;
  if ((argc >= 1) && (argc <= 2)) {
    return _wrap_PropertyGrid_GetLastItem__SWIG_0(self, argc, argv);
  }
  if ((argc >= 1) && (argc <= 2)) {
    return _wrap_PropertyGrid_GetLastItem__SWIG_1(self, argc, argv);
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"No matching function for overloaded 'PropertyGrid_GetLastItem'");
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetLineColour(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxColour result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetLineColour" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPropertyGrid const *)arg1)->GetLineColour();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new wxColour(static_cast< const wxColour& >(result))), SWIGTYPE_p_wxColour, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetMarginColour(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxColour result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetMarginColour" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPropertyGrid const *)arg1)->GetMarginColour();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new wxColour(static_cast< const wxColour& >(result))), SWIGTYPE_p_wxColour, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetMarginWidth(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetMarginWidth" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPropertyGrid const *)arg1)->GetMarginWidth();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetUncommittedPropertyValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxVariant result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetUncommittedPropertyValue" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (arg1)->GetUncommittedPropertyValue();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxVariant_to_PyObject(&result);
    if ( !resultobj ) {
      PyErr_SetString(PyExc_TypeError,
        "this wxVariant type cannot be converted to Python object");
      SWIG_fail;
    }
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetRoot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetRoot" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)((wxPropertyGrid const *)arg1)->GetRoot();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetRowHeight(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetRowHeight" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPropertyGrid const *)arg1)->GetRowHeight();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetSelectedProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetSelectedProperty" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)((wxPropertyGrid const *)arg1)->GetSelectedProperty();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetSelectionBackgroundColour(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxColour result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetSelectionBackgroundColour" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPropertyGrid const *)arg1)->GetSelectionBackgroundColour();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new wxColour(static_cast< const wxColour& >(result))), SWIGTYPE_p_wxColour, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetSelectionForegroundColour(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxColour result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetSelectionForegroundColour" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPropertyGrid const *)arg1)->GetSelectionForegroundColour();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new wxColour(static_cast< const wxColour& >(result))), SWIGTYPE_p_wxColour, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetSplitterPosition(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  int arg2 = (int) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "splitterIndex", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:PropertyGrid_GetSplitterPosition",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetSplitterPosition" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  if (obj1) {
    ecode2 = SWIG_AsVal_int(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGrid_GetSplitterPosition" "', expected argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPropertyGrid const *)arg1)->GetSplitterPosition(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetEditorTextCtrl(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxTextCtrl *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetEditorTextCtrl" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxTextCtrl *)((wxPropertyGrid const *)arg1)->GetEditorTextCtrl();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxPyMake_wxObject(result, (bool)0); 
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetValidationInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxPGValidationInfo *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetValidationInfo" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxPGValidationInfo &_result_ref = (arg1)->GetValidationInfo();
      result = (wxPGValidationInfo *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGValidationInfo, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetVerticalSpacing(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetVerticalSpacing" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPropertyGrid const *)arg1)->GetVerticalSpacing();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_IsEditorFocused(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_IsEditorFocused" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPropertyGrid const *)arg1)->IsEditorFocused();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_IsEditorsValueModified(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_IsEditorsValueModified" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPropertyGrid const *)arg1)->IsEditorsValueModified();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_HitTest(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxPoint *arg2 = 0 ;
  wxPropertyGridHitTestResult result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  wxPoint temp2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "pt", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGrid_HitTest",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_HitTest" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    arg2 = &temp2;
    if ( ! wxPoint_helper(obj1, &arg2)) SWIG_fail;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPropertyGrid const *)arg1)->HitTest((wxPoint const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new wxPropertyGridHitTestResult(static_cast< const wxPropertyGridHitTestResult& >(result))), SWIGTYPE_p_wxPropertyGridHitTestResult, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_IsAnyModified(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_IsAnyModified" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPropertyGrid const *)arg1)->IsAnyModified();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_IsFrozen(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_IsFrozen" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPropertyGrid const *)arg1)->IsFrozen();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_OnTLPChanging(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxWindow *arg2 = (wxWindow *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "newTLP", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGrid_OnTLPChanging",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_OnTLPChanging" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxWindow, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PropertyGrid_OnTLPChanging" "', expected argument " "2"" of type '" "wxWindow *""'"); 
  }
  arg2 = reinterpret_cast< wxWindow * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->OnTLPChanging(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_ResetColours(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_ResetColours" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->ResetColours();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_ResetColumnSizes(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  bool arg2 = (bool) false ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "enableAutoResizing", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:PropertyGrid_ResetColumnSizes",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_ResetColumnSizes" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  if (obj1) {
    ecode2 = SWIG_AsVal_bool(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGrid_ResetColumnSizes" "', expected argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->ResetColumnSizes(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_SelectProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  bool arg3 = (bool) false ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id",(char *) "focus", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PropertyGrid_SelectProperty",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_SelectProperty" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  if (obj2) {
    ecode3 = SWIG_AsVal_bool(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PropertyGrid_SelectProperty" "', expected argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->SelectProperty((wxPGPropArgCls const &)*arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_SetSelection(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxArrayPGProperty *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "newSelection", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGrid_SetSelection",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_SetSelection" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    arg2 = new wxArrayPGProperty();
    temp2 = true;
    if ( !PyObjectTowxArrayPGProperty(obj1, arg2) ) SWIG_fail;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetSelection((wxArrayPGProperty const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    if (temp2) delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2) delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_AddToSelection(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGrid_AddToSelection",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_AddToSelection" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->AddToSelection((wxPGPropArgCls const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_RemoveFromSelection(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGrid_RemoveFromSelection",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_RemoveFromSelection" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->RemoveFromSelection((wxPGPropArgCls const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_MakeColumnEditable(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  int arg2 ;
  bool arg3 = (bool) true ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "column",(char *) "editable", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PropertyGrid_MakeColumnEditable",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_MakeColumnEditable" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGrid_MakeColumnEditable" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (obj2) {
    ecode3 = SWIG_AsVal_bool(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PropertyGrid_MakeColumnEditable" "', expected argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->MakeColumnEditable(arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_BeginLabelEdit(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  int arg2 = (int) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "column", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:PropertyGrid_BeginLabelEdit",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_BeginLabelEdit" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  if (obj1) {
    ecode2 = SWIG_AsVal_int(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGrid_BeginLabelEdit" "', expected argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->BeginLabelEdit(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_EndLabelEdit(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  bool arg2 = (bool) true ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "commit", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:PropertyGrid_EndLabelEdit",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_EndLabelEdit" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  if (obj1) {
    ecode2 = SWIG_AsVal_bool(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGrid_EndLabelEdit" "', expected argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->EndLabelEdit(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetLabelEditor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxTextCtrl *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetLabelEditor" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxTextCtrl *)((wxPropertyGrid const *)arg1)->GetLabelEditor();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxPyMake_wxObject(result, (bool)0); 
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_SetCaptionBackgroundColour(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxColour *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  wxColour temp2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "col", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGrid_SetCaptionBackgroundColour",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_SetCaptionBackgroundColour" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    arg2 = &temp2;
    if ( ! wxColour_helper(obj1, &arg2)) SWIG_fail;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetCaptionBackgroundColour((wxColour const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_SetCaptionTextColour(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxColour *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  wxColour temp2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "col", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGrid_SetCaptionTextColour",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_SetCaptionTextColour" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    arg2 = &temp2;
    if ( ! wxColour_helper(obj1, &arg2)) SWIG_fail;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetCaptionTextColour((wxColour const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_SetCellBackgroundColour(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxColour *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  wxColour temp2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "col", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGrid_SetCellBackgroundColour",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_SetCellBackgroundColour" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    arg2 = &temp2;
    if ( ! wxColour_helper(obj1, &arg2)) SWIG_fail;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetCellBackgroundColour((wxColour const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_SetCellDisabledTextColour(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxColour *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  wxColour temp2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "col", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGrid_SetCellDisabledTextColour",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_SetCellDisabledTextColour" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    arg2 = &temp2;
    if ( ! wxColour_helper(obj1, &arg2)) SWIG_fail;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetCellDisabledTextColour((wxColour const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_SetCellTextColour(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxColour *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  wxColour temp2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "col", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGrid_SetCellTextColour",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_SetCellTextColour" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    arg2 = &temp2;
    if ( ! wxColour_helper(obj1, &arg2)) SWIG_fail;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetCellTextColour((wxColour const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_SetColumnCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "colCount", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGrid_SetColumnCount",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_SetColumnCount" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGrid_SetColumnCount" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetColumnCount(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_SetCurrentCategory(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGrid_SetCurrentCategory",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_SetCurrentCategory" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetCurrentCategory((wxPGPropArgCls const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_SetEmptySpaceColour(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxColour *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  wxColour temp2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "col", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGrid_SetEmptySpaceColour",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_SetEmptySpaceColour" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    arg2 = &temp2;
    if ( ! wxColour_helper(obj1, &arg2)) SWIG_fail;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetEmptySpaceColour((wxColour const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_SetLineColour(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxColour *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  wxColour temp2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "col", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGrid_SetLineColour",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_SetLineColour" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    arg2 = &temp2;
    if ( ! wxColour_helper(obj1, &arg2)) SWIG_fail;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetLineColour((wxColour const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_SetMarginColour(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxColour *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  wxColour temp2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "col", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGrid_SetMarginColour",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_SetMarginColour" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    arg2 = &temp2;
    if ( ! wxColour_helper(obj1, &arg2)) SWIG_fail;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetMarginColour((wxColour const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_SetSelectionBackgroundColour(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxColour *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  wxColour temp2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "col", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGrid_SetSelectionBackgroundColour",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_SetSelectionBackgroundColour" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    arg2 = &temp2;
    if ( ! wxColour_helper(obj1, &arg2)) SWIG_fail;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetSelectionBackgroundColour((wxColour const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_SetSelectionTextColour(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxColour *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  wxColour temp2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "col", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGrid_SetSelectionTextColour",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_SetSelectionTextColour" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    arg2 = &temp2;
    if ( ! wxColour_helper(obj1, &arg2)) SWIG_fail;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetSelectionTextColour((wxColour const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_SetSplitterPosition(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  int arg2 ;
  int arg3 = (int) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "newXPos",(char *) "col", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PropertyGrid_SetSplitterPosition",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_SetSplitterPosition" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGrid_SetSplitterPosition" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PropertyGrid_SetSplitterPosition" "', expected argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetSplitterPosition(arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_SetSortFunction(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxPGSortCallback arg2 = (wxPGSortCallback) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "sortFunction", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGrid_SetSortFunction",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_SetSortFunction" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_p_wxPropertyGrid_p_wxPGProperty_p_wxPGProperty__int);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "PropertyGrid_SetSortFunction" "', expected argument " "2"" of type '" "wxPGSortCallback""'"); 
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetSortFunction(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetSortFunction(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxPGSortCallback result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetSortFunction" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGSortCallback)((wxPropertyGrid const *)arg1)->GetSortFunction();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewFunctionPtrObj((void *)(result), SWIGTYPE_p_f_p_wxPropertyGrid_p_wxPGProperty_p_wxPGProperty__int);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_SetUnspecifiedValueAppearance(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxPGCell *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "cell", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGrid_SetUnspecifiedValueAppearance",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_SetUnspecifiedValueAppearance" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_wxPGCell,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PropertyGrid_SetUnspecifiedValueAppearance" "', expected argument " "2"" of type '" "wxPGCell const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PropertyGrid_SetUnspecifiedValueAppearance" "', expected argument " "2"" of type '" "wxPGCell const &""'"); 
  }
  arg2 = reinterpret_cast< wxPGCell * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetUnspecifiedValueAppearance((wxPGCell const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetUnspecifiedValueAppearance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxPGCell *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetUnspecifiedValueAppearance" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxPGCell const &_result_ref = ((wxPropertyGrid const *)arg1)->GetUnspecifiedValueAppearance();
      result = (wxPGCell *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGCell, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetUnspecifiedValueText(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  int arg2 = (int) 0 ;
  wxString result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "argFlags", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:PropertyGrid_GetUnspecifiedValueText",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetUnspecifiedValueText" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  if (obj1) {
    ecode2 = SWIG_AsVal_int(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGrid_GetUnspecifiedValueText" "', expected argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPropertyGrid const *)arg1)->GetUnspecifiedValueText(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
#if wxUSE_UNICODE
    resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
    resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_SetVirtualWidth(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "width", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGrid_SetVirtualWidth",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_SetVirtualWidth" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGrid_SetVirtualWidth" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetVirtualWidth(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_SetSplitterLeft(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  bool arg2 = (bool) false ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "privateChildrenToo", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:PropertyGrid_SetSplitterLeft",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_SetSplitterLeft" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  if (obj1) {
    ecode2 = SWIG_AsVal_bool(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGrid_SetSplitterLeft" "', expected argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetSplitterLeft(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_SetVerticalSpacing(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "vspacing", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGrid_SetVerticalSpacing",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_SetVerticalSpacing" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGrid_SetVerticalSpacing" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetVerticalSpacing(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_ShowPropertyError(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  wxString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp3 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id",(char *) "msg", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PropertyGrid_ShowPropertyError",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_ShowPropertyError" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    arg3 = wxString_in_helper(obj2);
    if (arg3 == NULL) SWIG_fail;
    temp3 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->ShowPropertyError((wxPGPropArgCls const &)*arg2,(wxString const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_HasVirtualWidth(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_HasVirtualWidth" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPropertyGrid const *)arg1)->HasVirtualWidth();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetCommonValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  int arg2 ;
  wxPGCommonValue *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "i", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGrid_GetCommonValue",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetCommonValue" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGrid_GetCommonValue" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGCommonValue *)((wxPropertyGrid const *)arg1)->GetCommonValue(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGCommonValue, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetCommonValueCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetCommonValueCount" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPropertyGrid const *)arg1)->GetCommonValueCount();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetCommonValueLabel(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  int arg2 ;
  wxString result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "i", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGrid_GetCommonValueLabel",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetCommonValueLabel" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGrid_GetCommonValueLabel" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPropertyGrid const *)arg1)->GetCommonValueLabel(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
#if wxUSE_UNICODE
    resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
    resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetUnspecifiedCommonValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetUnspecifiedCommonValue" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPropertyGrid const *)arg1)->GetUnspecifiedCommonValue();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_SetUnspecifiedCommonValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "index", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGrid_SetUnspecifiedCommonValue",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_SetUnspecifiedCommonValue" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGrid_SetUnspecifiedCommonValue" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetUnspecifiedCommonValue(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GenerateEditorButton(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxPoint *arg2 = 0 ;
  wxSize *arg3 = 0 ;
  wxWindow *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  wxPoint temp2 ;
  wxSize temp3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "pos",(char *) "sz", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PropertyGrid_GenerateEditorButton",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GenerateEditorButton" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    arg2 = &temp2;
    if ( ! wxPoint_helper(obj1, &arg2)) SWIG_fail;
  }
  {
    arg3 = &temp3;
    if ( ! wxSize_helper(obj2, &arg3)) SWIG_fail;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxWindow *)(arg1)->GenerateEditorButton((wxPoint const &)*arg2,(wxSize const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxPyMake_wxObject(result, 0); 
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_FixPosForTextCtrl(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxWindow *arg2 = (wxWindow *) 0 ;
  int arg3 = (int) 1 ;
  wxPoint const &arg4_defvalue = wxPoint(0, 0) ;
  wxPoint *arg4 = (wxPoint *) &arg4_defvalue ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  wxPoint temp4 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ctrl",(char *) "forColumn",(char *) "offset", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|OO:PropertyGrid_FixPosForTextCtrl",kwnames,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_FixPosForTextCtrl" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxWindow, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PropertyGrid_FixPosForTextCtrl" "', expected argument " "2"" of type '" "wxWindow *""'"); 
  }
  arg2 = reinterpret_cast< wxWindow * >(argp2);
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PropertyGrid_FixPosForTextCtrl" "', expected argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  if (obj3) {
    {
      arg4 = &temp4;
      if ( ! wxPoint_helper(obj3, &arg4)) SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->FixPosForTextCtrl(arg2,arg3,(wxPoint const &)*arg4);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GenerateEditorTextCtrl(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxPoint *arg2 = 0 ;
  wxSize *arg3 = 0 ;
  wxString *arg4 = 0 ;
  wxWindow *arg5 = (wxWindow *) 0 ;
  int arg6 = (int) 0 ;
  int arg7 = (int) 0 ;
  int arg8 = (int) 1 ;
  wxWindow *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  wxPoint temp2 ;
  wxSize temp3 ;
  bool temp4 = false ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  int val7 ;
  int ecode7 = 0 ;
  int val8 ;
  int ecode8 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "pos",(char *) "sz",(char *) "value",(char *) "secondary",(char *) "extraStyle",(char *) "maxLen",(char *) "forColumn", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOO|OOO:PropertyGrid_GenerateEditorTextCtrl",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GenerateEditorTextCtrl" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    arg2 = &temp2;
    if ( ! wxPoint_helper(obj1, &arg2)) SWIG_fail;
  }
  {
    arg3 = &temp3;
    if ( ! wxSize_helper(obj2, &arg3)) SWIG_fail;
  }
  {
    arg4 = wxString_in_helper(obj3);
    if (arg4 == NULL) SWIG_fail;
    temp4 = true;
  }
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_wxWindow, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "PropertyGrid_GenerateEditorTextCtrl" "', expected argument " "5"" of type '" "wxWindow *""'"); 
  }
  arg5 = reinterpret_cast< wxWindow * >(argp5);
  if (obj5) {
    ecode6 = SWIG_AsVal_int(obj5, &val6);
    if (!SWIG_IsOK(ecode6)) {
      SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "PropertyGrid_GenerateEditorTextCtrl" "', expected argument " "6"" of type '" "int""'");
    } 
    arg6 = static_cast< int >(val6);
  }
  if (obj6) {
    ecode7 = SWIG_AsVal_int(obj6, &val7);
    if (!SWIG_IsOK(ecode7)) {
      SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "PropertyGrid_GenerateEditorTextCtrl" "', expected argument " "7"" of type '" "int""'");
    } 
    arg7 = static_cast< int >(val7);
  }
  if (obj7) {
    ecode8 = SWIG_AsVal_int(obj7, &val8);
    if (!SWIG_IsOK(ecode8)) {
      SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "PropertyGrid_GenerateEditorTextCtrl" "', expected argument " "8"" of type '" "int""'");
    } 
    arg8 = static_cast< int >(val8);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxWindow *)(arg1)->GenerateEditorTextCtrl((wxPoint const &)*arg2,(wxSize const &)*arg3,(wxString const &)*arg4,arg5,arg6,arg7,arg8);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxPyMake_wxObject(result, 0); 
  }
  {
    if (temp4)
    delete arg4;
  }
  return resultobj;
fail:
  {
    if (temp4)
    delete arg4;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GenerateEditorTextCtrlAndButton(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxPoint *arg2 = 0 ;
  wxSize *arg3 = 0 ;
  wxWindow **arg4 = (wxWindow **) 0 ;
  int arg5 ;
  wxPGProperty *arg6 = (wxPGProperty *) 0 ;
  wxWindow *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  wxPoint temp2 ;
  wxSize temp3 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "pos",(char *) "sz",(char *) "psecondary",(char *) "limited_editing",(char *) "property", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO:PropertyGrid_GenerateEditorTextCtrlAndButton",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GenerateEditorTextCtrlAndButton" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    arg2 = &temp2;
    if ( ! wxPoint_helper(obj1, &arg2)) SWIG_fail;
  }
  {
    arg3 = &temp3;
    if ( ! wxSize_helper(obj2, &arg3)) SWIG_fail;
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_p_wxWindow, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "PropertyGrid_GenerateEditorTextCtrlAndButton" "', expected argument " "4"" of type '" "wxWindow **""'"); 
  }
  arg4 = reinterpret_cast< wxWindow ** >(argp4);
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "PropertyGrid_GenerateEditorTextCtrlAndButton" "', expected argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "PropertyGrid_GenerateEditorTextCtrlAndButton" "', expected argument " "6"" of type '" "wxPGProperty *""'"); 
  }
  arg6 = reinterpret_cast< wxPGProperty * >(argp6);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxWindow *)(arg1)->GenerateEditorTextCtrlAndButton((wxPoint const &)*arg2,(wxSize const &)*arg3,arg4,arg5,arg6);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxPyMake_wxObject(result, 0); 
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetGoodEditorDialogPosition(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxPGProperty *arg2 = (wxPGProperty *) 0 ;
  wxSize *arg3 = 0 ;
  wxPoint result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  wxSize temp3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "p",(char *) "sz", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PropertyGrid_GetGoodEditorDialogPosition",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetGoodEditorDialogPosition" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PropertyGrid_GetGoodEditorDialogPosition" "', expected argument " "2"" of type '" "wxPGProperty *""'"); 
  }
  arg2 = reinterpret_cast< wxPGProperty * >(argp2);
  {
    arg3 = &temp3;
    if ( ! wxSize_helper(obj2, &arg3)) SWIG_fail;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (arg1)->GetGoodEditorDialogPosition(arg2,(wxSize const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new wxPoint(static_cast< const wxPoint& >(result))), SWIGTYPE_p_wxPoint, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_ExpandEscapeSequences(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString *arg1 = 0 ;
  wxString *arg2 = 0 ;
  wxString *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "dst_str",(char *) "src_str", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGrid_ExpandEscapeSequences",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    arg1 = wxString_in_helper(obj0);
    if (arg1 == NULL) SWIG_fail;
    temp1 = true;
  }
  {
    arg2 = wxString_in_helper(obj1);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxString &_result_ref = wxPropertyGrid::ExpandEscapeSequences(*arg1,*arg2);
      result = (wxString *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
#if wxUSE_UNICODE
    resultobj = PyUnicode_FromWideChar(result->c_str(), result->Len());
#else
    resultobj = PyString_FromStringAndSize(result->c_str(), result->Len());
#endif
  }
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_CreateEscapeSequences(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString *arg1 = 0 ;
  wxString *arg2 = 0 ;
  wxString *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "dst_str",(char *) "src_str", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGrid_CreateEscapeSequences",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    arg1 = wxString_in_helper(obj0);
    if (arg1 == NULL) SWIG_fail;
    temp1 = true;
  }
  {
    arg2 = wxString_in_helper(obj1);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxString &_result_ref = wxPropertyGrid::CreateEscapeSequences(*arg1,*arg2);
      result = (wxString *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
#if wxUSE_UNICODE
    resultobj = PyUnicode_FromWideChar(result->c_str(), result->Len());
#else
    resultobj = PyString_FromStringAndSize(result->c_str(), result->Len());
#endif
  }
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetPropertyRect(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxPGProperty *arg2 = (wxPGProperty *) 0 ;
  wxPGProperty *arg3 = (wxPGProperty *) 0 ;
  wxRect result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "p1",(char *) "p2", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PropertyGrid_GetPropertyRect",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetPropertyRect" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PropertyGrid_GetPropertyRect" "', expected argument " "2"" of type '" "wxPGProperty const *""'"); 
  }
  arg2 = reinterpret_cast< wxPGProperty * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PropertyGrid_GetPropertyRect" "', expected argument " "3"" of type '" "wxPGProperty const *""'"); 
  }
  arg3 = reinterpret_cast< wxPGProperty * >(argp3);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPropertyGrid const *)arg1)->GetPropertyRect((wxPGProperty const *)arg2,(wxPGProperty const *)arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new wxRect(static_cast< const wxRect& >(result))), SWIGTYPE_p_wxRect, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetEditorControl(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxWindow *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetEditorControl" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxWindow *)((wxPropertyGrid const *)arg1)->GetEditorControl();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxPyMake_wxObject(result, 0); 
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetPrimaryEditor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxWindow *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetPrimaryEditor" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxWindow *)((wxPropertyGrid const *)arg1)->GetPrimaryEditor();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxPyMake_wxObject(result, 0); 
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetEditorControlSecondary(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxWindow *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetEditorControlSecondary" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxWindow *)((wxPropertyGrid const *)arg1)->GetEditorControlSecondary();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxPyMake_wxObject(result, 0); 
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_RefreshEditor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_RefreshEditor" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->RefreshEditor();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_HandleCustomEditorEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxEvent *arg2 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "event", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGrid_HandleCustomEditorEvent",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_HandleCustomEditorEvent" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_wxEvent,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PropertyGrid_HandleCustomEditorEvent" "', expected argument " "2"" of type '" "wxEvent &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PropertyGrid_HandleCustomEditorEvent" "', expected argument " "2"" of type '" "wxEvent &""'"); 
  }
  arg2 = reinterpret_cast< wxEvent * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->HandleCustomEditorEvent(*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetInternalFlags(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  long result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetInternalFlags" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (long)((wxPropertyGrid const *)arg1)->GetInternalFlags();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_HasInternalFlag(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  long arg2 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "flag", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGrid_HasInternalFlag",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_HasInternalFlag" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  ecode2 = SWIG_AsVal_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGrid_HasInternalFlag" "', expected argument " "2"" of type '" "long""'");
  } 
  arg2 = static_cast< long >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPropertyGrid const *)arg1)->HasInternalFlag(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_SetInternalFlag(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "flag", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGrid_SetInternalFlag",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_SetInternalFlag" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  ecode2 = SWIG_AsVal_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGrid_SetInternalFlag" "', expected argument " "2"" of type '" "long""'");
  } 
  arg2 = static_cast< long >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetInternalFlag(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_ClearInternalFlag(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "flag", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGrid_ClearInternalFlag",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_ClearInternalFlag" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  ecode2 = SWIG_AsVal_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGrid_ClearInternalFlag" "', expected argument " "2"" of type '" "long""'");
  } 
  arg2 = static_cast< long >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->ClearInternalFlag(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_DoubleToString(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString *arg1 = 0 ;
  double arg2 ;
  int arg3 ;
  bool arg4 ;
  wxString *arg5 = (wxString *) NULL ;
  wxString *result = 0 ;
  bool temp1 = false ;
  double val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  bool val4 ;
  int ecode4 = 0 ;
  bool temp5 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char *  kwnames[] = {
    (char *) "target",(char *) "value",(char *) "precision",(char *) "removeZeroes",(char *) "precTemplate", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|O:PropertyGrid_DoubleToString",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  {
    arg1 = wxString_in_helper(obj0);
    if (arg1 == NULL) SWIG_fail;
    temp1 = true;
  }
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGrid_DoubleToString" "', expected argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PropertyGrid_DoubleToString" "', expected argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_bool(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "PropertyGrid_DoubleToString" "', expected argument " "4"" of type '" "bool""'");
  } 
  arg4 = static_cast< bool >(val4);
  if (obj4) {
    {
      arg5 = wxString_in_helper(obj4);
      if (arg5 == NULL) SWIG_fail;
      temp5 = true;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxString const &_result_ref = wxPropertyGrid::DoubleToString(*arg1,arg2,arg3,arg4,arg5);
      result = (wxString *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
#if wxUSE_UNICODE
    resultobj = PyUnicode_FromWideChar(result->c_str(), result->Len());
#else
    resultobj = PyString_FromStringAndSize(result->c_str(), result->Len());
#endif
  }
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp5)
    delete arg5;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp5)
    delete arg5;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_ValueChangeInEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxVariant arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "variant", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGrid_ValueChangeInEvent",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_ValueChangeInEvent" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    if ( !PyObject_to_wxVariant(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxVariant");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->ValueChangeInEvent(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_WasValueChangedInEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_WasValueChangedInEvent" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPropertyGrid const *)arg1)->WasValueChangedInEvent();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_IsMainButtonEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxEvent *arg2 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "event", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGrid_IsMainButtonEvent",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_IsMainButtonEvent" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_wxEvent,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PropertyGrid_IsMainButtonEvent" "', expected argument " "2"" of type '" "wxEvent const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PropertyGrid_IsMainButtonEvent" "', expected argument " "2"" of type '" "wxEvent const &""'"); 
  }
  arg2 = reinterpret_cast< wxEvent * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->IsMainButtonEvent((wxEvent const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_DoHidePropertyError(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxPGProperty *arg2 = (wxPGProperty *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "property", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGrid_DoHidePropertyError",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_DoHidePropertyError" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PropertyGrid_DoHidePropertyError" "', expected argument " "2"" of type '" "wxPGProperty *""'"); 
  }
  arg2 = reinterpret_cast< wxPGProperty * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->DoHidePropertyError(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetSpacingY(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetSpacingY" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPropertyGrid const *)arg1)->GetSpacingY();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_SetupTextCtrlValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxString arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "text", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGrid_SetupTextCtrlValue",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_SetupTextCtrlValue" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    wxString* sptr = wxString_in_helper(obj1);
    if (sptr == NULL) SWIG_fail;
    arg2 = *sptr;
    delete sptr;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetupTextCtrlValue(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_UnfocusEditor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_UnfocusEditor" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->UnfocusEditor();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetPropertyDefaultCell(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxPGCell *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetPropertyDefaultCell" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxPGCell &_result_ref = (arg1)->GetPropertyDefaultCell();
      result = (wxPGCell *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGCell, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetCategoryDefaultCell(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxPGCell *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetCategoryDefaultCell" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxPGCell &_result_ref = (arg1)->GetCategoryDefaultCell();
      result = (wxPGCell *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGCell, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGrid_GetItemAtY(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  int arg2 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "y", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGrid_GetItemAtY",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGrid_GetItemAtY" "', expected argument " "1"" of type '" "wxPropertyGrid const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGrid_GetItemAtY" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)((wxPropertyGrid const *)arg1)->GetItemAtY(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PropertyGrid_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxPropertyGrid, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PropertyGrid_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_PropertyGridEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxEventType arg1 = (wxEventType) 0 ;
  int arg2 = (int) 0 ;
  wxPropertyGridEvent *result = 0 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "commandType",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OO:new_PropertyGridEvent",kwnames,&obj0,&obj1)) SWIG_fail;
  if (obj0) {
    ecode1 = SWIG_AsVal_int(obj0, &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_PropertyGridEvent" "', expected argument " "1"" of type '" "wxEventType""'");
    } 
    arg1 = static_cast< wxEventType >(val1);
  }
  if (obj1) {
    ecode2 = SWIG_AsVal_int(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_PropertyGridEvent" "', expected argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPropertyGridEvent *)new wxPropertyGridEvent(arg1,arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPropertyGridEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PropertyGridEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridEvent *arg1 = (wxPropertyGridEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridEvent, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PropertyGridEvent" "', expected argument " "1"" of type '" "wxPropertyGridEvent *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridEvent * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete arg1;
    
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridEvent_GetColumn(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridEvent *arg1 = (wxPropertyGridEvent *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridEvent_GetColumn" "', expected argument " "1"" of type '" "wxPropertyGridEvent const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridEvent * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPropertyGridEvent const *)arg1)->GetColumn();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridEvent_GetMainParent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridEvent *arg1 = (wxPropertyGridEvent *) 0 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridEvent_GetMainParent" "', expected argument " "1"" of type '" "wxPropertyGridEvent const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridEvent * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)((wxPropertyGridEvent const *)arg1)->GetMainParent();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridEvent_GetProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridEvent *arg1 = (wxPropertyGridEvent *) 0 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridEvent_GetProperty" "', expected argument " "1"" of type '" "wxPropertyGridEvent const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridEvent * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)((wxPropertyGridEvent const *)arg1)->GetProperty();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridEvent_GetValidationInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridEvent *arg1 = (wxPropertyGridEvent *) 0 ;
  wxPGValidationInfo *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridEvent_GetValidationInfo" "', expected argument " "1"" of type '" "wxPropertyGridEvent *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridEvent * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxPGValidationInfo &_result_ref = (arg1)->GetValidationInfo();
      result = (wxPGValidationInfo *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGValidationInfo, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridEvent_CanVeto(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridEvent *arg1 = (wxPropertyGridEvent *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridEvent_CanVeto" "', expected argument " "1"" of type '" "wxPropertyGridEvent const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridEvent * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPropertyGridEvent const *)arg1)->CanVeto();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridEvent_Veto(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridEvent *arg1 = (wxPropertyGridEvent *) 0 ;
  bool arg2 = (bool) true ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "veto", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:PropertyGridEvent_Veto",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridEvent_Veto" "', expected argument " "1"" of type '" "wxPropertyGridEvent *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridEvent * >(argp1);
  if (obj1) {
    ecode2 = SWIG_AsVal_bool(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridEvent_Veto" "', expected argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->Veto(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridEvent_GetPropertyName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridEvent *arg1 = (wxPropertyGridEvent *) 0 ;
  wxString result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridEvent_GetPropertyName" "', expected argument " "1"" of type '" "wxPropertyGridEvent const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridEvent * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPropertyGridEvent const *)arg1)->GetPropertyName();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
#if wxUSE_UNICODE
    resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
    resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridEvent_GetPropertyValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridEvent *arg1 = (wxPropertyGridEvent *) 0 ;
  wxVariant result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridEvent_GetPropertyValue" "', expected argument " "1"" of type '" "wxPropertyGridEvent const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridEvent * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPropertyGridEvent const *)arg1)->GetPropertyValue();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxVariant_to_PyObject(&result);
    if ( !resultobj ) {
      PyErr_SetString(PyExc_TypeError,
        "this wxVariant type cannot be converted to Python object");
      SWIG_fail;
    }
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridEvent_GetValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridEvent *arg1 = (wxPropertyGridEvent *) 0 ;
  wxVariant result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridEvent_GetValue" "', expected argument " "1"" of type '" "wxPropertyGridEvent const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridEvent * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPropertyGridEvent const *)arg1)->GetValue();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxVariant_to_PyObject(&result);
    if ( !resultobj ) {
      PyErr_SetString(PyExc_TypeError,
        "this wxVariant type cannot be converted to Python object");
      SWIG_fail;
    }
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridEvent_SetValidationFailureBehavior(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridEvent *arg1 = (wxPropertyGridEvent *) 0 ;
  char arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "flags", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridEvent_SetValidationFailureBehavior",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridEvent_SetValidationFailureBehavior" "', expected argument " "1"" of type '" "wxPropertyGridEvent *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridEvent * >(argp1);
  ecode2 = SWIG_AsVal_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridEvent_SetValidationFailureBehavior" "', expected argument " "2"" of type '" "char""'");
  } 
  arg2 = static_cast< char >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetValidationFailureBehavior(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridEvent_SetValidationFailureMessage(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridEvent *arg1 = (wxPropertyGridEvent *) 0 ;
  wxString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "message", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridEvent_SetValidationFailureMessage",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridEvent_SetValidationFailureMessage" "', expected argument " "1"" of type '" "wxPropertyGridEvent *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridEvent * >(argp1);
  {
    arg2 = wxString_in_helper(obj1);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetValidationFailureMessage((wxString const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridEvent_SetColumn(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridEvent *arg1 = (wxPropertyGridEvent *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "column", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridEvent_SetColumn",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridEvent_SetColumn" "', expected argument " "1"" of type '" "wxPropertyGridEvent *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridEvent * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridEvent_SetColumn" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetColumn(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridEvent_SetCanVeto(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridEvent *arg1 = (wxPropertyGridEvent *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "canVeto", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridEvent_SetCanVeto",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridEvent_SetCanVeto" "', expected argument " "1"" of type '" "wxPropertyGridEvent *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridEvent * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridEvent_SetCanVeto" "', expected argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetCanVeto(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridEvent_WasVetoed(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridEvent *arg1 = (wxPropertyGridEvent *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridEvent_WasVetoed" "', expected argument " "1"" of type '" "wxPropertyGridEvent const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridEvent * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPropertyGridEvent const *)arg1)->WasVetoed();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridEvent_SetProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridEvent *arg1 = (wxPropertyGridEvent *) 0 ;
  wxPGProperty *arg2 = (wxPGProperty *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "p", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridEvent_SetProperty",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridEvent_SetProperty" "', expected argument " "1"" of type '" "wxPropertyGridEvent *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridEvent * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PropertyGridEvent_SetProperty" "', expected argument " "2"" of type '" "wxPGProperty *""'"); 
  }
  arg2 = reinterpret_cast< wxPGProperty * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetProperty(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PropertyGridEvent_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxPropertyGridEvent, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PropertyGridEvent_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_delete_PropertyGridPopulator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridPopulator *arg1 = (wxPropertyGridPopulator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridPopulator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PropertyGridPopulator" "', expected argument " "1"" of type '" "wxPropertyGridPopulator *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridPopulator * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete arg1;
    
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridPopulator_SetState(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridPopulator *arg1 = (wxPropertyGridPopulator *) 0 ;
  wxPropertyGridPageState *arg2 = (wxPropertyGridPageState *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "state", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridPopulator_SetState",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridPopulator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridPopulator_SetState" "', expected argument " "1"" of type '" "wxPropertyGridPopulator *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridPopulator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxPropertyGridPageState, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PropertyGridPopulator_SetState" "', expected argument " "2"" of type '" "wxPropertyGridPageState *""'"); 
  }
  arg2 = reinterpret_cast< wxPropertyGridPageState * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetState(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridPopulator_SetGrid(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridPopulator *arg1 = (wxPropertyGridPopulator *) 0 ;
  wxPropertyGrid *arg2 = (wxPropertyGrid *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "pg", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridPopulator_SetGrid",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridPopulator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridPopulator_SetGrid" "', expected argument " "1"" of type '" "wxPropertyGridPopulator *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridPopulator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PropertyGridPopulator_SetGrid" "', expected argument " "2"" of type '" "wxPropertyGrid *""'"); 
  }
  arg2 = reinterpret_cast< wxPropertyGrid * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetGrid(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridPopulator_Add(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridPopulator *arg1 = (wxPropertyGridPopulator *) 0 ;
  wxString *arg2 = 0 ;
  wxString *arg3 = 0 ;
  wxString *arg4 = 0 ;
  wxString *arg5 = (wxString *) 0 ;
  wxPGChoices *arg6 = (wxPGChoices *) NULL ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  bool temp3 = false ;
  bool temp4 = false ;
  bool temp5 = false ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "propClass",(char *) "propLabel",(char *) "propName",(char *) "propValue",(char *) "pChoices", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOO|O:PropertyGridPopulator_Add",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridPopulator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridPopulator_Add" "', expected argument " "1"" of type '" "wxPropertyGridPopulator *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridPopulator * >(argp1);
  {
    arg2 = wxString_in_helper(obj1);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  {
    arg3 = wxString_in_helper(obj2);
    if (arg3 == NULL) SWIG_fail;
    temp3 = true;
  }
  {
    arg4 = wxString_in_helper(obj3);
    if (arg4 == NULL) SWIG_fail;
    temp4 = true;
  }
  {
    arg5 = wxString_in_helper(obj4);
    if (arg5 == NULL) SWIG_fail;
    temp5 = true;
  }
  if (obj5) {
    res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_wxPGChoices, 0 |  0 );
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "PropertyGridPopulator_Add" "', expected argument " "6"" of type '" "wxPGChoices *""'"); 
    }
    arg6 = reinterpret_cast< wxPGChoices * >(argp6);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)(arg1)->Add((wxString const &)*arg2,(wxString const &)*arg3,(wxString const &)*arg4,(wxString const *)arg5,arg6);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  {
    if (temp4)
    delete arg4;
  }
  {
    if (temp5)
    delete arg5;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  {
    if (temp4)
    delete arg4;
  }
  {
    if (temp5)
    delete arg5;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridPopulator_AddChildren(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridPopulator *arg1 = (wxPropertyGridPopulator *) 0 ;
  wxPGProperty *arg2 = (wxPGProperty *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "property", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridPopulator_AddChildren",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridPopulator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridPopulator_AddChildren" "', expected argument " "1"" of type '" "wxPropertyGridPopulator *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridPopulator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PropertyGridPopulator_AddChildren" "', expected argument " "2"" of type '" "wxPGProperty *""'"); 
  }
  arg2 = reinterpret_cast< wxPGProperty * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->AddChildren(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridPopulator_AddAttribute(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridPopulator *arg1 = (wxPropertyGridPopulator *) 0 ;
  wxString *arg2 = 0 ;
  wxString *arg3 = 0 ;
  wxString *arg4 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  bool temp3 = false ;
  bool temp4 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "name",(char *) "type",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:PropertyGridPopulator_AddAttribute",kwnames,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridPopulator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridPopulator_AddAttribute" "', expected argument " "1"" of type '" "wxPropertyGridPopulator *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridPopulator * >(argp1);
  {
    arg2 = wxString_in_helper(obj1);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  {
    arg3 = wxString_in_helper(obj2);
    if (arg3 == NULL) SWIG_fail;
    temp3 = true;
  }
  {
    arg4 = wxString_in_helper(obj3);
    if (arg4 == NULL) SWIG_fail;
    temp4 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->AddAttribute((wxString const &)*arg2,(wxString const &)*arg3,(wxString const &)*arg4);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  {
    if (temp4)
    delete arg4;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  {
    if (temp4)
    delete arg4;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridPopulator_DoScanForChildren(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridPopulator *arg1 = (wxPropertyGridPopulator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridPopulator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridPopulator_DoScanForChildren" "', expected argument " "1"" of type '" "wxPropertyGridPopulator *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridPopulator * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->DoScanForChildren();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridPopulator_GetCurParent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridPopulator *arg1 = (wxPropertyGridPopulator *) 0 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridPopulator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridPopulator_GetCurParent" "', expected argument " "1"" of type '" "wxPropertyGridPopulator const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridPopulator * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)((wxPropertyGridPopulator const *)arg1)->GetCurParent();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridPopulator_GetState__SWIG_0(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPropertyGridPopulator *arg1 = (wxPropertyGridPopulator *) 0 ;
  wxPropertyGridPageState *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridPopulator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridPopulator_GetState" "', expected argument " "1"" of type '" "wxPropertyGridPopulator *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridPopulator * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPropertyGridPageState *)(arg1)->GetState();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPropertyGridPageState, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridPopulator_GetState__SWIG_1(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPropertyGridPopulator *arg1 = (wxPropertyGridPopulator *) 0 ;
  wxPropertyGridPageState *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridPopulator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridPopulator_GetState" "', expected argument " "1"" of type '" "wxPropertyGridPopulator const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridPopulator * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPropertyGridPageState *)((wxPropertyGridPopulator const *)arg1)->GetState();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPropertyGridPageState, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridPopulator_GetState(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  
  if (!(argc = SWIG_Python_UnpackTuple(args,"PropertyGridPopulator_GetState",0,1,argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    return _wrap_PropertyGridPopulator_GetState__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    return _wrap_PropertyGridPopulator_GetState__SWIG_1(self, argc, argv);
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"No matching function for overloaded 'PropertyGridPopulator_GetState'");
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridPopulator_ToLongPCT(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString *arg1 = 0 ;
  long *arg2 = (long *) 0 ;
  long arg3 ;
  bool result;
  bool temp1 = false ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  long val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "s",(char *) "pval",(char *) "max", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PropertyGridPopulator_ToLongPCT",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  {
    arg1 = wxString_in_helper(obj0);
    if (arg1 == NULL) SWIG_fail;
    temp1 = true;
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_long, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PropertyGridPopulator_ToLongPCT" "', expected argument " "2"" of type '" "long *""'"); 
  }
  arg2 = reinterpret_cast< long * >(argp2);
  ecode3 = SWIG_AsVal_long(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PropertyGridPopulator_ToLongPCT" "', expected argument " "3"" of type '" "long""'");
  } 
  arg3 = static_cast< long >(val3);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)wxPropertyGridPopulator::ToLongPCT((wxString const &)*arg1,arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  {
    if (temp1)
    delete arg1;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridPopulator_ParseChoices(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridPopulator *arg1 = (wxPropertyGridPopulator *) 0 ;
  wxString *arg2 = 0 ;
  wxString *arg3 = 0 ;
  wxPGChoices result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  bool temp3 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "choicesString",(char *) "idString", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PropertyGridPopulator_ParseChoices",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridPopulator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridPopulator_ParseChoices" "', expected argument " "1"" of type '" "wxPropertyGridPopulator *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridPopulator * >(argp1);
  {
    arg2 = wxString_in_helper(obj1);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  {
    arg3 = wxString_in_helper(obj2);
    if (arg3 == NULL) SWIG_fail;
    temp3 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (arg1)->ParseChoices((wxString const &)*arg2,(wxString const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new wxPGChoices(static_cast< const wxPGChoices& >(result))), SWIGTYPE_p_wxPGChoices, SWIG_POINTER_OWN |  0 );
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridPopulator_ProcessError(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridPopulator *arg1 = (wxPropertyGridPopulator *) 0 ;
  wxString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "msg", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridPopulator_ProcessError",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridPopulator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridPopulator_ProcessError" "', expected argument " "1"" of type '" "wxPropertyGridPopulator *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridPopulator * >(argp1);
  {
    arg2 = wxString_in_helper(obj1);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->ProcessError((wxString const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *PropertyGridPopulator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxPropertyGridPopulator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_PGWindowList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGWindowList *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args,"new_PGWindowList",0,0,0)) SWIG_fail;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGWindowList *)new wxPGWindowList();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGWindowList, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGWindowList_SetSecondary(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGWindowList *arg1 = (wxPGWindowList *) 0 ;
  wxWindow *arg2 = (wxWindow *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "secondary", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGWindowList_SetSecondary",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGWindowList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGWindowList_SetSecondary" "', expected argument " "1"" of type '" "wxPGWindowList *""'"); 
  }
  arg1 = reinterpret_cast< wxPGWindowList * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxWindow, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGWindowList_SetSecondary" "', expected argument " "2"" of type '" "wxWindow *""'"); 
  }
  arg2 = reinterpret_cast< wxWindow * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetSecondary(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGWindowList_m_primary_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGWindowList *arg1 = (wxPGWindowList *) 0 ;
  wxWindow *arg2 = (wxWindow *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args,"PGWindowList_m_primary_set",2,2,swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGWindowList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGWindowList_m_primary_set" "', expected argument " "1"" of type '" "wxPGWindowList *""'"); 
  }
  arg1 = reinterpret_cast< wxPGWindowList * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_wxWindow, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGWindowList_m_primary_set" "', expected argument " "2"" of type '" "wxWindow *""'"); 
  }
  arg2 = reinterpret_cast< wxWindow * >(argp2);
  if (arg1) (arg1)->m_primary = arg2;
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGWindowList_m_primary_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGWindowList *arg1 = (wxPGWindowList *) 0 ;
  wxWindow *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGWindowList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGWindowList_m_primary_get" "', expected argument " "1"" of type '" "wxPGWindowList *""'"); 
  }
  arg1 = reinterpret_cast< wxPGWindowList * >(argp1);
  result = (wxWindow *) ((arg1)->m_primary);
  {
    resultobj = wxPyMake_wxObject(result, 0); 
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGWindowList_m_secondary_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGWindowList *arg1 = (wxPGWindowList *) 0 ;
  wxWindow *arg2 = (wxWindow *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args,"PGWindowList_m_secondary_set",2,2,swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGWindowList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGWindowList_m_secondary_set" "', expected argument " "1"" of type '" "wxPGWindowList *""'"); 
  }
  arg1 = reinterpret_cast< wxPGWindowList * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_wxWindow, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGWindowList_m_secondary_set" "', expected argument " "2"" of type '" "wxWindow *""'"); 
  }
  arg2 = reinterpret_cast< wxWindow * >(argp2);
  if (arg1) (arg1)->m_secondary = arg2;
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGWindowList_m_secondary_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGWindowList *arg1 = (wxPGWindowList *) 0 ;
  wxWindow *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGWindowList, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGWindowList_m_secondary_get" "', expected argument " "1"" of type '" "wxPGWindowList *""'"); 
  }
  arg1 = reinterpret_cast< wxPGWindowList * >(argp1);
  result = (wxWindow *) ((arg1)->m_secondary);
  {
    resultobj = wxPyMake_wxObject(result, 0); 
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PGWindowList_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxPGWindowList, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PGWindowList_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_delete_PGEditor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGEditor *arg1 = (wxPGEditor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGEditor, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PGEditor" "', expected argument " "1"" of type '" "wxPGEditor *""'"); 
  }
  arg1 = reinterpret_cast< wxPGEditor * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete arg1;
    
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGEditor_GetName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGEditor *arg1 = (wxPGEditor *) 0 ;
  wxString result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGEditor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGEditor_GetName" "', expected argument " "1"" of type '" "wxPGEditor const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGEditor * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPGEditor const *)arg1)->GetName();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
#if wxUSE_UNICODE
    resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
    resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGEditor_CreateControls(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGEditor *arg1 = (wxPGEditor *) 0 ;
  wxPropertyGrid *arg2 = (wxPropertyGrid *) 0 ;
  wxPGProperty *arg3 = (wxPGProperty *) 0 ;
  wxPoint *arg4 = 0 ;
  wxSize *arg5 = 0 ;
  wxPGWindowList result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  wxPoint temp4 ;
  wxSize temp5 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "propgrid",(char *) "property",(char *) "pos",(char *) "size", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOO:PGEditor_CreateControls",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGEditor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGEditor_CreateControls" "', expected argument " "1"" of type '" "wxPGEditor const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGEditor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGEditor_CreateControls" "', expected argument " "2"" of type '" "wxPropertyGrid *""'"); 
  }
  arg2 = reinterpret_cast< wxPropertyGrid * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PGEditor_CreateControls" "', expected argument " "3"" of type '" "wxPGProperty *""'"); 
  }
  arg3 = reinterpret_cast< wxPGProperty * >(argp3);
  {
    arg4 = &temp4;
    if ( ! wxPoint_helper(obj3, &arg4)) SWIG_fail;
  }
  {
    arg5 = &temp5;
    if ( ! wxSize_helper(obj4, &arg5)) SWIG_fail;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPGEditor const *)arg1)->CreateControls(arg2,arg3,(wxPoint const &)*arg4,(wxSize const &)*arg5);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxPGWindowList_to_PyObject(&result);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGEditor_UpdateControl(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGEditor *arg1 = (wxPGEditor *) 0 ;
  wxPGProperty *arg2 = (wxPGProperty *) 0 ;
  wxWindow *arg3 = (wxWindow *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "property",(char *) "ctrl", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PGEditor_UpdateControl",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGEditor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGEditor_UpdateControl" "', expected argument " "1"" of type '" "wxPGEditor const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGEditor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGEditor_UpdateControl" "', expected argument " "2"" of type '" "wxPGProperty *""'"); 
  }
  arg2 = reinterpret_cast< wxPGProperty * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_wxWindow, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PGEditor_UpdateControl" "', expected argument " "3"" of type '" "wxWindow *""'"); 
  }
  arg3 = reinterpret_cast< wxWindow * >(argp3);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    ((wxPGEditor const *)arg1)->UpdateControl(arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGEditor_DrawValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGEditor *arg1 = (wxPGEditor *) 0 ;
  wxDC *arg2 = 0 ;
  wxRect *arg3 = 0 ;
  wxPGProperty *arg4 = (wxPGProperty *) 0 ;
  wxString *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  wxRect temp3 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool temp5 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "dc",(char *) "rect",(char *) "property",(char *) "text", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOO:PGEditor_DrawValue",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGEditor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGEditor_DrawValue" "', expected argument " "1"" of type '" "wxPGEditor const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGEditor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_wxDC,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGEditor_DrawValue" "', expected argument " "2"" of type '" "wxDC &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PGEditor_DrawValue" "', expected argument " "2"" of type '" "wxDC &""'"); 
  }
  arg2 = reinterpret_cast< wxDC * >(argp2);
  {
    arg3 = &temp3;
    if ( ! wxRect_helper(obj2, &arg3)) SWIG_fail;
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "PGEditor_DrawValue" "', expected argument " "4"" of type '" "wxPGProperty *""'"); 
  }
  arg4 = reinterpret_cast< wxPGProperty * >(argp4);
  {
    arg5 = wxString_in_helper(obj4);
    if (arg5 == NULL) SWIG_fail;
    temp5 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    ((wxPGEditor const *)arg1)->DrawValue(*arg2,(wxRect const &)*arg3,arg4,(wxString const &)*arg5);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    if (temp5)
    delete arg5;
  }
  return resultobj;
fail:
  {
    if (temp5)
    delete arg5;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGEditor_OnEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGEditor *arg1 = (wxPGEditor *) 0 ;
  wxPropertyGrid *arg2 = (wxPropertyGrid *) 0 ;
  wxPGProperty *arg3 = (wxPGProperty *) 0 ;
  wxWindow *arg4 = (wxWindow *) 0 ;
  wxEvent *arg5 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "propgrid",(char *) "property",(char *) "wnd_primary",(char *) "event", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOO:PGEditor_OnEvent",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGEditor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGEditor_OnEvent" "', expected argument " "1"" of type '" "wxPGEditor const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGEditor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGEditor_OnEvent" "', expected argument " "2"" of type '" "wxPropertyGrid *""'"); 
  }
  arg2 = reinterpret_cast< wxPropertyGrid * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PGEditor_OnEvent" "', expected argument " "3"" of type '" "wxPGProperty *""'"); 
  }
  arg3 = reinterpret_cast< wxPGProperty * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_wxWindow, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "PGEditor_OnEvent" "', expected argument " "4"" of type '" "wxWindow *""'"); 
  }
  arg4 = reinterpret_cast< wxWindow * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_wxEvent,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "PGEditor_OnEvent" "', expected argument " "5"" of type '" "wxEvent &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PGEditor_OnEvent" "', expected argument " "5"" of type '" "wxEvent &""'"); 
  }
  arg5 = reinterpret_cast< wxEvent * >(argp5);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPGEditor const *)arg1)->OnEvent(arg2,arg3,arg4,*arg5);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGEditor_SetControlAppearance(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGEditor *arg1 = (wxPGEditor *) 0 ;
  wxPropertyGrid *arg2 = (wxPropertyGrid *) 0 ;
  wxPGProperty *arg3 = (wxPGProperty *) 0 ;
  wxWindow *arg4 = (wxWindow *) 0 ;
  wxPGCell *arg5 = 0 ;
  wxPGCell *arg6 = 0 ;
  bool arg7 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  bool val7 ;
  int ecode7 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "pg",(char *) "property",(char *) "ctrl",(char *) "appearance",(char *) "oldAppearance",(char *) "unspecified", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOOO:PGEditor_SetControlAppearance",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGEditor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGEditor_SetControlAppearance" "', expected argument " "1"" of type '" "wxPGEditor const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGEditor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGEditor_SetControlAppearance" "', expected argument " "2"" of type '" "wxPropertyGrid *""'"); 
  }
  arg2 = reinterpret_cast< wxPropertyGrid * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PGEditor_SetControlAppearance" "', expected argument " "3"" of type '" "wxPGProperty *""'"); 
  }
  arg3 = reinterpret_cast< wxPGProperty * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_wxWindow, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "PGEditor_SetControlAppearance" "', expected argument " "4"" of type '" "wxWindow *""'"); 
  }
  arg4 = reinterpret_cast< wxWindow * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_wxPGCell,  0  | 0);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "PGEditor_SetControlAppearance" "', expected argument " "5"" of type '" "wxPGCell const &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PGEditor_SetControlAppearance" "', expected argument " "5"" of type '" "wxPGCell const &""'"); 
  }
  arg5 = reinterpret_cast< wxPGCell * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_wxPGCell,  0  | 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "PGEditor_SetControlAppearance" "', expected argument " "6"" of type '" "wxPGCell const &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PGEditor_SetControlAppearance" "', expected argument " "6"" of type '" "wxPGCell const &""'"); 
  }
  arg6 = reinterpret_cast< wxPGCell * >(argp6);
  ecode7 = SWIG_AsVal_bool(obj6, &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "PGEditor_SetControlAppearance" "', expected argument " "7"" of type '" "bool""'");
  } 
  arg7 = static_cast< bool >(val7);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    ((wxPGEditor const *)arg1)->SetControlAppearance(arg2,arg3,arg4,(wxPGCell const &)*arg5,(wxPGCell const &)*arg6,arg7);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGEditor_SetValueToUnspecified(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGEditor *arg1 = (wxPGEditor *) 0 ;
  wxPGProperty *arg2 = (wxPGProperty *) 0 ;
  wxWindow *arg3 = (wxWindow *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "property",(char *) "ctrl", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PGEditor_SetValueToUnspecified",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGEditor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGEditor_SetValueToUnspecified" "', expected argument " "1"" of type '" "wxPGEditor const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGEditor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGEditor_SetValueToUnspecified" "', expected argument " "2"" of type '" "wxPGProperty *""'"); 
  }
  arg2 = reinterpret_cast< wxPGProperty * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_wxWindow, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PGEditor_SetValueToUnspecified" "', expected argument " "3"" of type '" "wxWindow *""'"); 
  }
  arg3 = reinterpret_cast< wxWindow * >(argp3);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    ((wxPGEditor const *)arg1)->SetValueToUnspecified(arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGEditor_SetControlStringValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGEditor *arg1 = (wxPGEditor *) 0 ;
  wxPGProperty *arg2 = (wxPGProperty *) 0 ;
  wxWindow *arg3 = (wxWindow *) 0 ;
  wxString *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool temp4 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "property",(char *) "ctrl",(char *) "txt", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:PGEditor_SetControlStringValue",kwnames,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGEditor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGEditor_SetControlStringValue" "', expected argument " "1"" of type '" "wxPGEditor const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGEditor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGEditor_SetControlStringValue" "', expected argument " "2"" of type '" "wxPGProperty *""'"); 
  }
  arg2 = reinterpret_cast< wxPGProperty * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_wxWindow, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PGEditor_SetControlStringValue" "', expected argument " "3"" of type '" "wxWindow *""'"); 
  }
  arg3 = reinterpret_cast< wxWindow * >(argp3);
  {
    arg4 = wxString_in_helper(obj3);
    if (arg4 == NULL) SWIG_fail;
    temp4 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    ((wxPGEditor const *)arg1)->SetControlStringValue(arg2,arg3,(wxString const &)*arg4);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    if (temp4)
    delete arg4;
  }
  return resultobj;
fail:
  {
    if (temp4)
    delete arg4;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGEditor_SetControlIntValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGEditor *arg1 = (wxPGEditor *) 0 ;
  wxPGProperty *arg2 = (wxPGProperty *) 0 ;
  wxWindow *arg3 = (wxWindow *) 0 ;
  int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "property",(char *) "ctrl",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:PGEditor_SetControlIntValue",kwnames,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGEditor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGEditor_SetControlIntValue" "', expected argument " "1"" of type '" "wxPGEditor const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGEditor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGEditor_SetControlIntValue" "', expected argument " "2"" of type '" "wxPGProperty *""'"); 
  }
  arg2 = reinterpret_cast< wxPGProperty * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_wxWindow, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PGEditor_SetControlIntValue" "', expected argument " "3"" of type '" "wxWindow *""'"); 
  }
  arg3 = reinterpret_cast< wxWindow * >(argp3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "PGEditor_SetControlIntValue" "', expected argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    ((wxPGEditor const *)arg1)->SetControlIntValue(arg2,arg3,arg4);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGEditor_InsertItem(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGEditor *arg1 = (wxPGEditor *) 0 ;
  wxWindow *arg2 = (wxWindow *) 0 ;
  wxString *arg3 = 0 ;
  int arg4 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool temp3 = false ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ctrl",(char *) "label",(char *) "index", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:PGEditor_InsertItem",kwnames,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGEditor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGEditor_InsertItem" "', expected argument " "1"" of type '" "wxPGEditor const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGEditor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxWindow, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGEditor_InsertItem" "', expected argument " "2"" of type '" "wxWindow *""'"); 
  }
  arg2 = reinterpret_cast< wxWindow * >(argp2);
  {
    arg3 = wxString_in_helper(obj2);
    if (arg3 == NULL) SWIG_fail;
    temp3 = true;
  }
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "PGEditor_InsertItem" "', expected argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPGEditor const *)arg1)->InsertItem(arg2,(wxString const &)*arg3,arg4);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  {
    if (temp3)
    delete arg3;
  }
  return resultobj;
fail:
  {
    if (temp3)
    delete arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGEditor_DeleteItem(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGEditor *arg1 = (wxPGEditor *) 0 ;
  wxWindow *arg2 = (wxWindow *) 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ctrl",(char *) "index", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PGEditor_DeleteItem",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGEditor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGEditor_DeleteItem" "', expected argument " "1"" of type '" "wxPGEditor const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGEditor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxWindow, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGEditor_DeleteItem" "', expected argument " "2"" of type '" "wxWindow *""'"); 
  }
  arg2 = reinterpret_cast< wxWindow * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PGEditor_DeleteItem" "', expected argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    ((wxPGEditor const *)arg1)->DeleteItem(arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGEditor_OnFocus(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGEditor *arg1 = (wxPGEditor *) 0 ;
  wxPGProperty *arg2 = (wxPGProperty *) 0 ;
  wxWindow *arg3 = (wxWindow *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "property",(char *) "wnd", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PGEditor_OnFocus",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGEditor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGEditor_OnFocus" "', expected argument " "1"" of type '" "wxPGEditor const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGEditor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGEditor_OnFocus" "', expected argument " "2"" of type '" "wxPGProperty *""'"); 
  }
  arg2 = reinterpret_cast< wxPGProperty * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_wxWindow, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PGEditor_OnFocus" "', expected argument " "3"" of type '" "wxWindow *""'"); 
  }
  arg3 = reinterpret_cast< wxWindow * >(argp3);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    ((wxPGEditor const *)arg1)->OnFocus(arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGEditor_CanContainCustomImage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGEditor *arg1 = (wxPGEditor *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGEditor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGEditor_CanContainCustomImage" "', expected argument " "1"" of type '" "wxPGEditor const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGEditor * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPGEditor const *)arg1)->CanContainCustomImage();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGEditor_m_clientData_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGEditor *arg1 = (wxPGEditor *) 0 ;
  void *arg2 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args,"PGEditor_m_clientData_set",2,2,swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGEditor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGEditor_m_clientData_set" "', expected argument " "1"" of type '" "wxPGEditor *""'"); 
  }
  arg1 = reinterpret_cast< wxPGEditor * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1],SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGEditor_m_clientData_set" "', expected argument " "2"" of type '" "void *""'"); 
  }
  if (arg1) (arg1)->m_clientData = arg2;
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGEditor_m_clientData_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGEditor *arg1 = (wxPGEditor *) 0 ;
  void *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGEditor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGEditor_m_clientData_get" "', expected argument " "1"" of type '" "wxPGEditor *""'"); 
  }
  arg1 = reinterpret_cast< wxPGEditor * >(argp1);
  result = (void *) ((arg1)->m_clientData);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PGEditor_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxPGEditor, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_PGTextCtrlEditor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGTextCtrlEditor *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args,"new_PGTextCtrlEditor",0,0,0)) SWIG_fail;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGTextCtrlEditor *)new wxPGTextCtrlEditor();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGTextCtrlEditor, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PGTextCtrlEditor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGTextCtrlEditor *arg1 = (wxPGTextCtrlEditor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGTextCtrlEditor, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PGTextCtrlEditor" "', expected argument " "1"" of type '" "wxPGTextCtrlEditor *""'"); 
  }
  arg1 = reinterpret_cast< wxPGTextCtrlEditor * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete arg1;
    
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGTextCtrlEditor_OnTextCtrlEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxPGProperty *arg2 = (wxPGProperty *) 0 ;
  wxWindow *arg3 = (wxWindow *) 0 ;
  wxEvent *arg4 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char *  kwnames[] = {
    (char *) "propgrid",(char *) "property",(char *) "ctrl",(char *) "event", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:PGTextCtrlEditor_OnTextCtrlEvent",kwnames,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGTextCtrlEditor_OnTextCtrlEvent" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGTextCtrlEditor_OnTextCtrlEvent" "', expected argument " "2"" of type '" "wxPGProperty *""'"); 
  }
  arg2 = reinterpret_cast< wxPGProperty * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_wxWindow, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PGTextCtrlEditor_OnTextCtrlEvent" "', expected argument " "3"" of type '" "wxWindow *""'"); 
  }
  arg3 = reinterpret_cast< wxWindow * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_wxEvent,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "PGTextCtrlEditor_OnTextCtrlEvent" "', expected argument " "4"" of type '" "wxEvent &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PGTextCtrlEditor_OnTextCtrlEvent" "', expected argument " "4"" of type '" "wxEvent &""'"); 
  }
  arg4 = reinterpret_cast< wxEvent * >(argp4);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)wxPGTextCtrlEditor::OnTextCtrlEvent(arg1,arg2,arg3,*arg4);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGTextCtrlEditor_GetTextCtrlValueFromControl(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxVariant *arg1 = 0 ;
  wxPGProperty *arg2 = (wxPGProperty *) 0 ;
  wxWindow *arg3 = (wxWindow *) 0 ;
  bool result;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "variant",(char *) "property",(char *) "ctrl", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PGTextCtrlEditor_GetTextCtrlValueFromControl",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  {
    arg1 = new wxVariant();
    if ( !PyObject_to_wxVariant(obj0, arg1) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxVariant");
      SWIG_fail;
    }
  }
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGTextCtrlEditor_GetTextCtrlValueFromControl" "', expected argument " "2"" of type '" "wxPGProperty *""'"); 
  }
  arg2 = reinterpret_cast< wxPGProperty * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_wxWindow, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PGTextCtrlEditor_GetTextCtrlValueFromControl" "', expected argument " "3"" of type '" "wxWindow *""'"); 
  }
  arg3 = reinterpret_cast< wxWindow * >(argp3);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)wxPGTextCtrlEditor::GetTextCtrlValueFromControl(*arg1,arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  {
    delete arg1;
  }
  return resultobj;
fail:
  {
    delete arg1;
  }
  return NULL;
}


SWIGINTERN PyObject *PGTextCtrlEditor_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxPGTextCtrlEditor, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PGTextCtrlEditor_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_PGChoiceEditor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGChoiceEditor *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args,"new_PGChoiceEditor",0,0,0)) SWIG_fail;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGChoiceEditor *)new wxPGChoiceEditor();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGChoiceEditor, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PGChoiceEditor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGChoiceEditor *arg1 = (wxPGChoiceEditor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGChoiceEditor, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PGChoiceEditor" "', expected argument " "1"" of type '" "wxPGChoiceEditor *""'"); 
  }
  arg1 = reinterpret_cast< wxPGChoiceEditor * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete arg1;
    
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGChoiceEditor_CreateControlsBase(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGChoiceEditor *arg1 = (wxPGChoiceEditor *) 0 ;
  wxPropertyGrid *arg2 = (wxPropertyGrid *) 0 ;
  wxPGProperty *arg3 = (wxPGProperty *) 0 ;
  wxPoint *arg4 = 0 ;
  wxSize *arg5 = 0 ;
  long arg6 ;
  wxWindow *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  wxPoint temp4 ;
  wxSize temp5 ;
  long val6 ;
  int ecode6 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "propgrid",(char *) "property",(char *) "pos",(char *) "sz",(char *) "extraStyle", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOOOO:PGChoiceEditor_CreateControlsBase",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGChoiceEditor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGChoiceEditor_CreateControlsBase" "', expected argument " "1"" of type '" "wxPGChoiceEditor const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGChoiceEditor * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGChoiceEditor_CreateControlsBase" "', expected argument " "2"" of type '" "wxPropertyGrid *""'"); 
  }
  arg2 = reinterpret_cast< wxPropertyGrid * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PGChoiceEditor_CreateControlsBase" "', expected argument " "3"" of type '" "wxPGProperty *""'"); 
  }
  arg3 = reinterpret_cast< wxPGProperty * >(argp3);
  {
    arg4 = &temp4;
    if ( ! wxPoint_helper(obj3, &arg4)) SWIG_fail;
  }
  {
    arg5 = &temp5;
    if ( ! wxSize_helper(obj4, &arg5)) SWIG_fail;
  }
  ecode6 = SWIG_AsVal_long(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "PGChoiceEditor_CreateControlsBase" "', expected argument " "6"" of type '" "long""'");
  } 
  arg6 = static_cast< long >(val6);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxWindow *)((wxPGChoiceEditor const *)arg1)->CreateControlsBase(arg2,arg3,(wxPoint const &)*arg4,(wxSize const &)*arg5,arg6);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxPyMake_wxObject(result, 0); 
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PGChoiceEditor_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxPGChoiceEditor, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PGChoiceEditor_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_PGComboBoxEditor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGComboBoxEditor *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args,"new_PGComboBoxEditor",0,0,0)) SWIG_fail;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGComboBoxEditor *)new wxPGComboBoxEditor();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGComboBoxEditor, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PGComboBoxEditor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGComboBoxEditor *arg1 = (wxPGComboBoxEditor *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGComboBoxEditor, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PGComboBoxEditor" "', expected argument " "1"" of type '" "wxPGComboBoxEditor *""'"); 
  }
  arg1 = reinterpret_cast< wxPGComboBoxEditor * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete arg1;
    
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PGComboBoxEditor_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxPGComboBoxEditor, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PGComboBoxEditor_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_delete_PGEditorDialogAdapter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGEditorDialogAdapter *arg1 = (wxPGEditorDialogAdapter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGEditorDialogAdapter, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PGEditorDialogAdapter" "', expected argument " "1"" of type '" "wxPGEditorDialogAdapter *""'"); 
  }
  arg1 = reinterpret_cast< wxPGEditorDialogAdapter * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete arg1;
    
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGEditorDialogAdapter_ShowDialog(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGEditorDialogAdapter *arg1 = (wxPGEditorDialogAdapter *) 0 ;
  wxPropertyGrid *arg2 = (wxPropertyGrid *) 0 ;
  wxPGProperty *arg3 = (wxPGProperty *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "propGrid",(char *) "property", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PGEditorDialogAdapter_ShowDialog",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGEditorDialogAdapter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGEditorDialogAdapter_ShowDialog" "', expected argument " "1"" of type '" "wxPGEditorDialogAdapter *""'"); 
  }
  arg1 = reinterpret_cast< wxPGEditorDialogAdapter * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGEditorDialogAdapter_ShowDialog" "', expected argument " "2"" of type '" "wxPropertyGrid *""'"); 
  }
  arg2 = reinterpret_cast< wxPropertyGrid * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PGEditorDialogAdapter_ShowDialog" "', expected argument " "3"" of type '" "wxPGProperty *""'"); 
  }
  arg3 = reinterpret_cast< wxPGProperty * >(argp3);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->ShowDialog(arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGEditorDialogAdapter_DoShowDialog(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGEditorDialogAdapter *arg1 = (wxPGEditorDialogAdapter *) 0 ;
  wxPropertyGrid *arg2 = (wxPropertyGrid *) 0 ;
  wxPGProperty *arg3 = (wxPGProperty *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "propGrid",(char *) "property", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PGEditorDialogAdapter_DoShowDialog",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGEditorDialogAdapter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGEditorDialogAdapter_DoShowDialog" "', expected argument " "1"" of type '" "wxPGEditorDialogAdapter *""'"); 
  }
  arg1 = reinterpret_cast< wxPGEditorDialogAdapter * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGEditorDialogAdapter_DoShowDialog" "', expected argument " "2"" of type '" "wxPropertyGrid *""'"); 
  }
  arg2 = reinterpret_cast< wxPropertyGrid * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PGEditorDialogAdapter_DoShowDialog" "', expected argument " "3"" of type '" "wxPGProperty *""'"); 
  }
  arg3 = reinterpret_cast< wxPGProperty * >(argp3);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->DoShowDialog(arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGEditorDialogAdapter_SetValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGEditorDialogAdapter *arg1 = (wxPGEditorDialogAdapter *) 0 ;
  wxVariant arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGEditorDialogAdapter_SetValue",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGEditorDialogAdapter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGEditorDialogAdapter_SetValue" "', expected argument " "1"" of type '" "wxPGEditorDialogAdapter *""'"); 
  }
  arg1 = reinterpret_cast< wxPGEditorDialogAdapter * >(argp1);
  {
    if ( !PyObject_to_wxVariant(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxVariant");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetValue(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGEditorDialogAdapter_GetValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGEditorDialogAdapter *arg1 = (wxPGEditorDialogAdapter *) 0 ;
  wxVariant *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGEditorDialogAdapter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGEditorDialogAdapter_GetValue" "', expected argument " "1"" of type '" "wxPGEditorDialogAdapter *""'"); 
  }
  arg1 = reinterpret_cast< wxPGEditorDialogAdapter * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxVariant &_result_ref = (arg1)->GetValue();
      result = (wxVariant *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxVariant_to_PyObject(result);
    if ( !resultobj ) {
      PyErr_SetString(PyExc_TypeError,
        "this wxVariant type cannot be converted to Python object");
      SWIG_fail;
    }
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGEditorDialogAdapter_m_clientData_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGEditorDialogAdapter *arg1 = (wxPGEditorDialogAdapter *) 0 ;
  void *arg2 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args,"PGEditorDialogAdapter_m_clientData_set",2,2,swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGEditorDialogAdapter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGEditorDialogAdapter_m_clientData_set" "', expected argument " "1"" of type '" "wxPGEditorDialogAdapter *""'"); 
  }
  arg1 = reinterpret_cast< wxPGEditorDialogAdapter * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1],SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGEditorDialogAdapter_m_clientData_set" "', expected argument " "2"" of type '" "void *""'"); 
  }
  if (arg1) (arg1)->m_clientData = arg2;
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGEditorDialogAdapter_m_clientData_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGEditorDialogAdapter *arg1 = (wxPGEditorDialogAdapter *) 0 ;
  void *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGEditorDialogAdapter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGEditorDialogAdapter_m_clientData_get" "', expected argument " "1"" of type '" "wxPGEditorDialogAdapter *""'"); 
  }
  arg1 = reinterpret_cast< wxPGEditorDialogAdapter * >(argp1);
  result = (void *) ((arg1)->m_clientData);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PGEditorDialogAdapter_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxPGEditorDialogAdapter, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_PGMultiButton(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGrid *arg1 = (wxPropertyGrid *) 0 ;
  wxSize *arg2 = 0 ;
  wxPGMultiButton *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  wxSize temp2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "pg",(char *) "sz", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:new_PGMultiButton",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_PGMultiButton" "', expected argument " "1"" of type '" "wxPropertyGrid *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGrid * >(argp1);
  {
    arg2 = &temp2;
    if ( ! wxSize_helper(obj1, &arg2)) SWIG_fail;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGMultiButton *)new wxPGMultiButton(arg1,(wxSize const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGMultiButton, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PGMultiButton(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGMultiButton *arg1 = (wxPGMultiButton *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGMultiButton, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PGMultiButton" "', expected argument " "1"" of type '" "wxPGMultiButton *""'"); 
  }
  arg1 = reinterpret_cast< wxPGMultiButton * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete arg1;
    
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGMultiButton_GetButton__SWIG_0(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPGMultiButton *arg1 = (wxPGMultiButton *) 0 ;
  int arg2 ;
  wxWindow *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGMultiButton, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGMultiButton_GetButton" "', expected argument " "1"" of type '" "wxPGMultiButton *""'"); 
  }
  arg1 = reinterpret_cast< wxPGMultiButton * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGMultiButton_GetButton" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxWindow *)(arg1)->GetButton(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxPyMake_wxObject(result, 0); 
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGMultiButton_GetButton__SWIG_1(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPGMultiButton *arg1 = (wxPGMultiButton *) 0 ;
  int arg2 ;
  wxWindow *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGMultiButton, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGMultiButton_GetButton" "', expected argument " "1"" of type '" "wxPGMultiButton const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGMultiButton * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGMultiButton_GetButton" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxWindow *)((wxPGMultiButton const *)arg1)->GetButton(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxPyMake_wxObject(result, 0); 
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGMultiButton_GetButton(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  
  if (!(argc = SWIG_Python_UnpackTuple(args,"PGMultiButton_GetButton",0,2,argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    return _wrap_PGMultiButton_GetButton__SWIG_0(self, argc, argv);
  }
  if (argc == 2) {
    return _wrap_PGMultiButton_GetButton__SWIG_1(self, argc, argv);
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"No matching function for overloaded 'PGMultiButton_GetButton'");
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGMultiButton_GetButtonId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGMultiButton *arg1 = (wxPGMultiButton *) 0 ;
  int arg2 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "i", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGMultiButton_GetButtonId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGMultiButton, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGMultiButton_GetButtonId" "', expected argument " "1"" of type '" "wxPGMultiButton const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGMultiButton * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PGMultiButton_GetButtonId" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPGMultiButton const *)arg1)->GetButtonId(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGMultiButton_GetCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGMultiButton *arg1 = (wxPGMultiButton *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGMultiButton, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGMultiButton_GetCount" "', expected argument " "1"" of type '" "wxPGMultiButton const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGMultiButton * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPGMultiButton const *)arg1)->GetCount();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGMultiButton_Add(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGMultiButton *arg1 = (wxPGMultiButton *) 0 ;
  wxString *arg2 = 0 ;
  int arg3 = (int) -2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "label",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PGMultiButton_Add",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGMultiButton, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGMultiButton_Add" "', expected argument " "1"" of type '" "wxPGMultiButton *""'"); 
  }
  arg1 = reinterpret_cast< wxPGMultiButton * >(argp1);
  {
    arg2 = wxString_in_helper(obj1);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PGMultiButton_Add" "', expected argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->Add((wxString const &)*arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGMultiButton_GetPrimarySize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGMultiButton *arg1 = (wxPGMultiButton *) 0 ;
  wxSize result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGMultiButton, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGMultiButton_GetPrimarySize" "', expected argument " "1"" of type '" "wxPGMultiButton const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGMultiButton * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPGMultiButton const *)arg1)->GetPrimarySize();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new wxSize(static_cast< const wxSize& >(result))), SWIGTYPE_p_wxSize, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGMultiButton_Finalize(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGMultiButton *arg1 = (wxPGMultiButton *) 0 ;
  wxPropertyGrid *arg2 = (wxPropertyGrid *) 0 ;
  wxPoint *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  wxPoint temp3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "propGrid",(char *) "pos", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PGMultiButton_Finalize",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGMultiButton, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGMultiButton_Finalize" "', expected argument " "1"" of type '" "wxPGMultiButton *""'"); 
  }
  arg1 = reinterpret_cast< wxPGMultiButton * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGMultiButton_Finalize" "', expected argument " "2"" of type '" "wxPropertyGrid *""'"); 
  }
  arg2 = reinterpret_cast< wxPropertyGrid * >(argp2);
  {
    arg3 = &temp3;
    if ( ! wxPoint_helper(obj2, &arg3)) SWIG_fail;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->Finalize(arg2,(wxPoint const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGMultiButton_AddBitmapButton(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGMultiButton *arg1 = (wxPGMultiButton *) 0 ;
  wxBitmap *arg2 = 0 ;
  int arg3 = (int) -2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "bitmap",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PGMultiButton_AddBitmapButton",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGMultiButton, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGMultiButton_AddBitmapButton" "', expected argument " "1"" of type '" "wxPGMultiButton *""'"); 
  }
  arg1 = reinterpret_cast< wxPGMultiButton * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_wxBitmap,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGMultiButton_AddBitmapButton" "', expected argument " "2"" of type '" "wxBitmap const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PGMultiButton_AddBitmapButton" "', expected argument " "2"" of type '" "wxBitmap const &""'"); 
  }
  arg2 = reinterpret_cast< wxBitmap * >(argp2);
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PGMultiButton_AddBitmapButton" "', expected argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxPGMultiButton_AddBitmapButton(arg1,(wxBitmap const &)*arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PGMultiButton_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxPGMultiButton, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PGMultiButton_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_StringProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  wxString const &arg3_defvalue = wxEmptyString ;
  wxString *arg3 = (wxString *) &arg3_defvalue ;
  wxStringProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  bool temp3 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "name",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOO:new_StringProperty",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  if (obj0) {
    {
      arg1 = wxString_in_helper(obj0);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (obj2) {
    {
      arg3 = wxString_in_helper(obj2);
      if (arg3 == NULL) SWIG_fail;
      temp3 = true;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxStringProperty *)new wxStringProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxString const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxStringProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_StringProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxStringProperty *arg1 = (wxStringProperty *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxStringProperty, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_StringProperty" "', expected argument " "1"" of type '" "wxStringProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxStringProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete arg1;
    
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *StringProperty_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxStringProperty, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *StringProperty_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_NumericPropertyValidator(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxNumericPropertyValidator::NumericType arg1 ;
  int arg2 = (int) 10 ;
  wxNumericPropertyValidator *result = 0 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "numericType",(char *) "base", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:new_NumericPropertyValidator",kwnames,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_NumericPropertyValidator" "', expected argument " "1"" of type '" "wxNumericPropertyValidator::NumericType""'");
  } 
  arg1 = static_cast< wxNumericPropertyValidator::NumericType >(val1);
  if (obj1) {
    ecode2 = SWIG_AsVal_int(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_NumericPropertyValidator" "', expected argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxNumericPropertyValidator *)new wxNumericPropertyValidator(arg1,arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxNumericPropertyValidator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_NumericPropertyValidator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxNumericPropertyValidator *arg1 = (wxNumericPropertyValidator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxNumericPropertyValidator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_NumericPropertyValidator" "', expected argument " "1"" of type '" "wxNumericPropertyValidator *""'"); 
  }
  arg1 = reinterpret_cast< wxNumericPropertyValidator * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete arg1;
    
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NumericPropertyValidator_Validate(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxNumericPropertyValidator *arg1 = (wxNumericPropertyValidator *) 0 ;
  wxWindow *arg2 = (wxWindow *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "parent", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:NumericPropertyValidator_Validate",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxNumericPropertyValidator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NumericPropertyValidator_Validate" "', expected argument " "1"" of type '" "wxNumericPropertyValidator *""'"); 
  }
  arg1 = reinterpret_cast< wxNumericPropertyValidator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxWindow, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "NumericPropertyValidator_Validate" "', expected argument " "2"" of type '" "wxWindow *""'"); 
  }
  arg2 = reinterpret_cast< wxWindow * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->Validate(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *NumericPropertyValidator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxNumericPropertyValidator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *NumericPropertyValidator_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_IntProperty__SWIG_0(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  long arg3 = (long) 0 ;
  wxIntProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  long val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 0) || (nobjs > 3)) SWIG_fail;
  if (swig_obj[0]) {
    {
      arg1 = wxString_in_helper(swig_obj[0]);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (swig_obj[1]) {
    {
      arg2 = wxString_in_helper(swig_obj[1]);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (swig_obj[2]) {
    ecode3 = SWIG_AsVal_long(swig_obj[2], &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_IntProperty" "', expected argument " "3"" of type '" "long""'");
    } 
    arg3 = static_cast< long >(val3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxIntProperty *)new wxIntProperty((wxString const &)*arg1,(wxString const &)*arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxIntProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_IntProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxIntProperty *arg1 = (wxIntProperty *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxIntProperty, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_IntProperty" "', expected argument " "1"" of type '" "wxIntProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxIntProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete arg1;
    
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IntProperty__SWIG_1(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxString *arg1 = 0 ;
  wxString *arg2 = 0 ;
  wxLongLong *arg3 = 0 ;
  wxIntProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  {
    arg1 = wxString_in_helper(swig_obj[0]);
    if (arg1 == NULL) SWIG_fail;
    temp1 = true;
  }
  {
    arg2 = wxString_in_helper(swig_obj[1]);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_wxLongLong,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_IntProperty" "', expected argument " "3"" of type '" "wxLongLong const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_IntProperty" "', expected argument " "3"" of type '" "wxLongLong const &""'"); 
  }
  arg3 = reinterpret_cast< wxLongLong * >(argp3);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxIntProperty *)new wxIntProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxLongLong const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxIntProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IntProperty(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  
  if (!(argc = SWIG_Python_UnpackTuple(args,"new_IntProperty",0,3,argv))) SWIG_fail;
  --argc;
  if ((argc >= 0) && (argc <= 3)) {
    int _v = 0;
    if (argc > 2) {
      {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
    }
    return _wrap_new_IntProperty__SWIG_0(self, argc, argv);
  }
check_1:
  
  if (argc == 3) {
    return _wrap_new_IntProperty__SWIG_1(self, argc, argv);
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"No matching function for overloaded 'new_IntProperty'");
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntProperty_GetClassValidator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxValidator *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args,"IntProperty_GetClassValidator",0,0,0)) SWIG_fail;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxValidator *)wxIntProperty::GetClassValidator();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxPyMake_wxObject(result, 0); 
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntProperty_DoValidation(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxLongLong_t *arg2 = 0 ;
  wxPGValidationInfo *arg3 = (wxPGValidationInfo *) 0 ;
  int arg4 = (int) wxPG_PROPERTY_VALIDATION_ERROR_MESSAGE ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char *  kwnames[] = {
    (char *) "property",(char *) "value",(char *) "pValidationInfo",(char *) "mode", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|O:IntProperty_DoValidation",kwnames,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntProperty_DoValidation" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_wxLongLong_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IntProperty_DoValidation" "', expected argument " "2"" of type '" "wxLongLong_t &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IntProperty_DoValidation" "', expected argument " "2"" of type '" "wxLongLong_t &""'"); 
  }
  arg2 = reinterpret_cast< wxLongLong_t * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_wxPGValidationInfo, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IntProperty_DoValidation" "', expected argument " "3"" of type '" "wxPGValidationInfo *""'"); 
  }
  arg3 = reinterpret_cast< wxPGValidationInfo * >(argp3);
  if (obj3) {
    ecode4 = SWIG_AsVal_int(obj3, &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IntProperty_DoValidation" "', expected argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)wxIntProperty::DoValidation((wxPGProperty const *)arg1,*arg2,arg3,arg4);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *IntProperty_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxIntProperty, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *IntProperty_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_UIntProperty__SWIG_0(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  long arg3 = (long) 0 ;
  wxUIntProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  long val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 0) || (nobjs > 3)) SWIG_fail;
  if (swig_obj[0]) {
    {
      arg1 = wxString_in_helper(swig_obj[0]);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (swig_obj[1]) {
    {
      arg2 = wxString_in_helper(swig_obj[1]);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (swig_obj[2]) {
    ecode3 = SWIG_AsVal_long(swig_obj[2], &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_UIntProperty" "', expected argument " "3"" of type '" "long""'");
    } 
    arg3 = static_cast< long >(val3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxUIntProperty *)new wxUIntProperty((wxString const &)*arg1,(wxString const &)*arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxUIntProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_UIntProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxUIntProperty *arg1 = (wxUIntProperty *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxUIntProperty, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_UIntProperty" "', expected argument " "1"" of type '" "wxUIntProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxUIntProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete arg1;
    
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_UIntProperty__SWIG_1(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxString *arg1 = 0 ;
  wxString *arg2 = 0 ;
  wxULongLong *arg3 = 0 ;
  wxUIntProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  {
    arg1 = wxString_in_helper(swig_obj[0]);
    if (arg1 == NULL) SWIG_fail;
    temp1 = true;
  }
  {
    arg2 = wxString_in_helper(swig_obj[1]);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_wxULongLong,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_UIntProperty" "', expected argument " "3"" of type '" "wxULongLong const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_UIntProperty" "', expected argument " "3"" of type '" "wxULongLong const &""'"); 
  }
  arg3 = reinterpret_cast< wxULongLong * >(argp3);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxUIntProperty *)new wxUIntProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxULongLong const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxUIntProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_UIntProperty(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  
  if (!(argc = SWIG_Python_UnpackTuple(args,"new_UIntProperty",0,3,argv))) SWIG_fail;
  --argc;
  if ((argc >= 0) && (argc <= 3)) {
    int _v = 0;
    if (argc > 2) {
      {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
    }
    return _wrap_new_UIntProperty__SWIG_0(self, argc, argv);
  }
check_1:
  
  if (argc == 3) {
    return _wrap_new_UIntProperty__SWIG_1(self, argc, argv);
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"No matching function for overloaded 'new_UIntProperty'");
  return NULL;
}


SWIGINTERN PyObject *UIntProperty_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxUIntProperty, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *UIntProperty_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_FloatProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  double arg3 = (double) 0.0 ;
  wxFloatProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "name",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOO:new_FloatProperty",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  if (obj0) {
    {
      arg1 = wxString_in_helper(obj0);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (obj2) {
    ecode3 = SWIG_AsVal_double(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_FloatProperty" "', expected argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxFloatProperty *)new wxFloatProperty((wxString const &)*arg1,(wxString const &)*arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxFloatProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_FloatProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxFloatProperty *arg1 = (wxFloatProperty *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxFloatProperty, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FloatProperty" "', expected argument " "1"" of type '" "wxFloatProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxFloatProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete arg1;
    
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FloatProperty_DoValidation(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  double *arg2 = 0 ;
  wxPGValidationInfo *arg3 = (wxPGValidationInfo *) 0 ;
  int arg4 = (int) wxPG_PROPERTY_VALIDATION_ERROR_MESSAGE ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char *  kwnames[] = {
    (char *) "property",(char *) "value",(char *) "pValidationInfo",(char *) "mode", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|O:FloatProperty_DoValidation",kwnames,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FloatProperty_DoValidation" "', expected argument " "1"" of type '" "wxPGProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_double,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FloatProperty_DoValidation" "', expected argument " "2"" of type '" "double &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FloatProperty_DoValidation" "', expected argument " "2"" of type '" "double &""'"); 
  }
  arg2 = reinterpret_cast< double * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_wxPGValidationInfo, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "FloatProperty_DoValidation" "', expected argument " "3"" of type '" "wxPGValidationInfo *""'"); 
  }
  arg3 = reinterpret_cast< wxPGValidationInfo * >(argp3);
  if (obj3) {
    ecode4 = SWIG_AsVal_int(obj3, &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "FloatProperty_DoValidation" "', expected argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)wxFloatProperty::DoValidation((wxPGProperty const *)arg1,*arg2,arg3,arg4);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FloatProperty_GetClassValidator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxValidator *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args,"FloatProperty_GetClassValidator",0,0,0)) SWIG_fail;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxValidator *)wxFloatProperty::GetClassValidator();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxPyMake_wxObject(result, 0); 
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *FloatProperty_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxFloatProperty, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *FloatProperty_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_EnumProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  wxArrayString const &arg3_defvalue = wxArrayString() ;
  wxArrayString *arg3 = (wxArrayString *) &arg3_defvalue ;
  wxArrayInt const &arg4_defvalue = wxArrayInt() ;
  wxArrayInt *arg4 = (wxArrayInt *) &arg4_defvalue ;
  int arg5 = (int) 0 ;
  wxEnumProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  bool temp3 = false ;
  bool temp4 = false ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "name",(char *) "labels",(char *) "values",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOOOO:new_EnumProperty",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  if (obj0) {
    {
      arg1 = wxString_in_helper(obj0);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (obj2) {
    {
      if (! PySequence_Check(obj2)) {
        PyErr_SetString(PyExc_TypeError, "Sequence of strings expected.");
        SWIG_fail;
      }
      arg3 = new wxArrayString;
      temp3 = true;
      int i, len=PySequence_Length(obj2);
      for (i=0; i<len; i++) {
        PyObject* item = PySequence_GetItem(obj2, i);
        wxString* s = wxString_in_helper(item);
        if (PyErr_Occurred())  SWIG_fail;
        arg3->Add(*s);
        delete s;
        Py_DECREF(item);
      }
    }
  }
  if (obj3) {
    {
      if (! PySequence_Check(obj3)) {
        PyErr_SetString(PyExc_TypeError, "Sequence of integers expected.");
        SWIG_fail;
      }
      arg4 = new wxArrayInt;
      temp4 = true;
      int i, len=PySequence_Length(obj3);
      for (i=0; i<len; i++) {
        PyObject* item = PySequence_GetItem(obj3, i);
        PyObject* number  = PyNumber_Int(item);
        if (!number) {
          PyErr_SetString(PyExc_TypeError, "Sequence of integers expected.");
          SWIG_fail;
        }       
        arg4->Add(PyInt_AS_LONG(number));
        Py_DECREF(item);
        Py_DECREF(number);
      }
    }
  }
  if (obj4) {
    ecode5 = SWIG_AsVal_int(obj4, &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_EnumProperty" "', expected argument " "5"" of type '" "int""'");
    } 
    arg5 = static_cast< int >(val5);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxEnumProperty *)new wxEnumProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxArrayString const &)*arg3,(wxArrayInt const &)*arg4,arg5);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxEnumProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3) delete arg3;
  }
  {
    if (temp4) delete arg4;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3) delete arg3;
  }
  {
    if (temp4) delete arg4;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_EnumProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxEnumProperty *arg1 = (wxEnumProperty *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxEnumProperty, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_EnumProperty" "', expected argument " "1"" of type '" "wxEnumProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxEnumProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete arg1;
    
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EnumProperty_GetItemCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxEnumProperty *arg1 = (wxEnumProperty *) 0 ;
  size_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxEnumProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EnumProperty_GetItemCount" "', expected argument " "1"" of type '" "wxEnumProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxEnumProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (size_t)((wxEnumProperty const *)arg1)->GetItemCount();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EnumProperty_GetIndexForValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxEnumProperty *arg1 = (wxEnumProperty *) 0 ;
  int arg2 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:EnumProperty_GetIndexForValue",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxEnumProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EnumProperty_GetIndexForValue" "', expected argument " "1"" of type '" "wxEnumProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxEnumProperty * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "EnumProperty_GetIndexForValue" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxEnumProperty const *)arg1)->GetIndexForValue(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *EnumProperty_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxEnumProperty, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *EnumProperty_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_EditEnumProperty__SWIG_0(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxString *arg1 = 0 ;
  wxString *arg2 = 0 ;
  wxChar **arg3 = (wxChar **) 0 ;
  long *arg4 = (long *) 0 ;
  wxString *arg5 = 0 ;
  wxEditEnumProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool temp5 = false ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  {
    arg1 = wxString_in_helper(swig_obj[0]);
    if (arg1 == NULL) SWIG_fail;
    temp1 = true;
  }
  {
    arg2 = wxString_in_helper(swig_obj[1]);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_p_wxChar, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_EditEnumProperty" "', expected argument " "3"" of type '" "wxChar const *const *""'"); 
  }
  arg3 = reinterpret_cast< wxChar ** >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_long, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_EditEnumProperty" "', expected argument " "4"" of type '" "long const *""'"); 
  }
  arg4 = reinterpret_cast< long * >(argp4);
  {
    arg5 = wxString_in_helper(swig_obj[4]);
    if (arg5 == NULL) SWIG_fail;
    temp5 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxEditEnumProperty *)new wxEditEnumProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxChar const *const *)arg3,(long const *)arg4,(wxString const &)*arg5);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxEditEnumProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp5)
    delete arg5;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp5)
    delete arg5;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_EditEnumProperty__SWIG_1(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  wxArrayString const &arg3_defvalue = wxArrayString() ;
  wxArrayString *arg3 = (wxArrayString *) &arg3_defvalue ;
  wxArrayInt const &arg4_defvalue = wxArrayInt() ;
  wxArrayInt *arg4 = (wxArrayInt *) &arg4_defvalue ;
  wxString const &arg5_defvalue = wxEmptyString ;
  wxString *arg5 = (wxString *) &arg5_defvalue ;
  wxEditEnumProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  bool temp3 = false ;
  bool temp4 = false ;
  bool temp5 = false ;
  
  if ((nobjs < 0) || (nobjs > 5)) SWIG_fail;
  if (swig_obj[0]) {
    {
      arg1 = wxString_in_helper(swig_obj[0]);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (swig_obj[1]) {
    {
      arg2 = wxString_in_helper(swig_obj[1]);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (swig_obj[2]) {
    {
      if (! PySequence_Check(swig_obj[2])) {
        PyErr_SetString(PyExc_TypeError, "Sequence of strings expected.");
        SWIG_fail;
      }
      arg3 = new wxArrayString;
      temp3 = true;
      int i, len=PySequence_Length(swig_obj[2]);
      for (i=0; i<len; i++) {
        PyObject* item = PySequence_GetItem(swig_obj[2], i);
        wxString* s = wxString_in_helper(item);
        if (PyErr_Occurred())  SWIG_fail;
        arg3->Add(*s);
        delete s;
        Py_DECREF(item);
      }
    }
  }
  if (swig_obj[3]) {
    {
      if (! PySequence_Check(swig_obj[3])) {
        PyErr_SetString(PyExc_TypeError, "Sequence of integers expected.");
        SWIG_fail;
      }
      arg4 = new wxArrayInt;
      temp4 = true;
      int i, len=PySequence_Length(swig_obj[3]);
      for (i=0; i<len; i++) {
        PyObject* item = PySequence_GetItem(swig_obj[3], i);
        PyObject* number  = PyNumber_Int(item);
        if (!number) {
          PyErr_SetString(PyExc_TypeError, "Sequence of integers expected.");
          SWIG_fail;
        }       
        arg4->Add(PyInt_AS_LONG(number));
        Py_DECREF(item);
        Py_DECREF(number);
      }
    }
  }
  if (swig_obj[4]) {
    {
      arg5 = wxString_in_helper(swig_obj[4]);
      if (arg5 == NULL) SWIG_fail;
      temp5 = true;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxEditEnumProperty *)new wxEditEnumProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxArrayString const &)*arg3,(wxArrayInt const &)*arg4,(wxString const &)*arg5);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxEditEnumProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3) delete arg3;
  }
  {
    if (temp4) delete arg4;
  }
  {
    if (temp5)
    delete arg5;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3) delete arg3;
  }
  {
    if (temp4) delete arg4;
  }
  {
    if (temp5)
    delete arg5;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_EditEnumProperty__SWIG_2(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxString *arg1 = 0 ;
  wxString *arg2 = 0 ;
  wxPGChoices *arg3 = 0 ;
  wxString const &arg4_defvalue = wxEmptyString ;
  wxString *arg4 = (wxString *) &arg4_defvalue ;
  wxEditEnumProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool temp4 = false ;
  
  if ((nobjs < 3) || (nobjs > 4)) SWIG_fail;
  {
    arg1 = wxString_in_helper(swig_obj[0]);
    if (arg1 == NULL) SWIG_fail;
    temp1 = true;
  }
  {
    arg2 = wxString_in_helper(swig_obj[1]);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_wxPGChoices,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_EditEnumProperty" "', expected argument " "3"" of type '" "wxPGChoices &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_EditEnumProperty" "', expected argument " "3"" of type '" "wxPGChoices &""'"); 
  }
  arg3 = reinterpret_cast< wxPGChoices * >(argp3);
  if (swig_obj[3]) {
    {
      arg4 = wxString_in_helper(swig_obj[3]);
      if (arg4 == NULL) SWIG_fail;
      temp4 = true;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxEditEnumProperty *)new wxEditEnumProperty((wxString const &)*arg1,(wxString const &)*arg2,*arg3,(wxString const &)*arg4);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxEditEnumProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp4)
    delete arg4;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp4)
    delete arg4;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_EditEnumProperty__SWIG_3(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxString *arg1 = 0 ;
  wxString *arg2 = 0 ;
  wxChar **arg3 = (wxChar **) 0 ;
  long *arg4 = (long *) 0 ;
  wxPGChoices *arg5 = (wxPGChoices *) 0 ;
  wxString *arg6 = 0 ;
  wxEditEnumProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  bool temp6 = false ;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  {
    arg1 = wxString_in_helper(swig_obj[0]);
    if (arg1 == NULL) SWIG_fail;
    temp1 = true;
  }
  {
    arg2 = wxString_in_helper(swig_obj[1]);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_p_wxChar, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_EditEnumProperty" "', expected argument " "3"" of type '" "wxChar const *const *""'"); 
  }
  arg3 = reinterpret_cast< wxChar ** >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_long, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_EditEnumProperty" "', expected argument " "4"" of type '" "long const *""'"); 
  }
  arg4 = reinterpret_cast< long * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5,SWIGTYPE_p_wxPGChoices, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_EditEnumProperty" "', expected argument " "5"" of type '" "wxPGChoices *""'"); 
  }
  arg5 = reinterpret_cast< wxPGChoices * >(argp5);
  {
    arg6 = wxString_in_helper(swig_obj[5]);
    if (arg6 == NULL) SWIG_fail;
    temp6 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxEditEnumProperty *)new wxEditEnumProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxChar const *const *)arg3,(long const *)arg4,arg5,(wxString const &)*arg6);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxEditEnumProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp6)
    delete arg6;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp6)
    delete arg6;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_EditEnumProperty(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[7];
  
  if (!(argc = SWIG_Python_UnpackTuple(args,"new_EditEnumProperty",0,6,argv))) SWIG_fail;
  --argc;
  if ((argc >= 0) && (argc <= 5)) {
    int _v = 0;
    if (argc > 2) {
      {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_wxArrayString, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      if (argc > 3) {
        {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_wxArrayInt, 0);
          _v = SWIG_CheckState(res);
        }
        if (!_v) goto check_1;
      }
    }
    return _wrap_new_EditEnumProperty__SWIG_1(self, argc, argv);
  }
check_1:
  
  if ((argc >= 3) && (argc <= 4)) {
    return _wrap_new_EditEnumProperty__SWIG_2(self, argc, argv);
  }
  if (argc == 5) {
    return _wrap_new_EditEnumProperty__SWIG_0(self, argc, argv);
  }
  if (argc == 6) {
    return _wrap_new_EditEnumProperty__SWIG_3(self, argc, argv);
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"No matching function for overloaded 'new_EditEnumProperty'");
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_EditEnumProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxEditEnumProperty *arg1 = (wxEditEnumProperty *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxEditEnumProperty, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_EditEnumProperty" "', expected argument " "1"" of type '" "wxEditEnumProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxEditEnumProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete arg1;
    
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *EditEnumProperty_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxEditEnumProperty, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *EditEnumProperty_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_FlagsProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  wxArrayString const &arg3_defvalue = wxArrayString() ;
  wxArrayString *arg3 = (wxArrayString *) &arg3_defvalue ;
  wxArrayInt const &arg4_defvalue = wxArrayInt() ;
  wxArrayInt *arg4 = (wxArrayInt *) &arg4_defvalue ;
  int arg5 = (int) 0 ;
  wxFlagsProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  bool temp3 = false ;
  bool temp4 = false ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "name",(char *) "labels",(char *) "values",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOOOO:new_FlagsProperty",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  if (obj0) {
    {
      arg1 = wxString_in_helper(obj0);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (obj2) {
    {
      if (! PySequence_Check(obj2)) {
        PyErr_SetString(PyExc_TypeError, "Sequence of strings expected.");
        SWIG_fail;
      }
      arg3 = new wxArrayString;
      temp3 = true;
      int i, len=PySequence_Length(obj2);
      for (i=0; i<len; i++) {
        PyObject* item = PySequence_GetItem(obj2, i);
        wxString* s = wxString_in_helper(item);
        if (PyErr_Occurred())  SWIG_fail;
        arg3->Add(*s);
        delete s;
        Py_DECREF(item);
      }
    }
  }
  if (obj3) {
    {
      if (! PySequence_Check(obj3)) {
        PyErr_SetString(PyExc_TypeError, "Sequence of integers expected.");
        SWIG_fail;
      }
      arg4 = new wxArrayInt;
      temp4 = true;
      int i, len=PySequence_Length(obj3);
      for (i=0; i<len; i++) {
        PyObject* item = PySequence_GetItem(obj3, i);
        PyObject* number  = PyNumber_Int(item);
        if (!number) {
          PyErr_SetString(PyExc_TypeError, "Sequence of integers expected.");
          SWIG_fail;
        }       
        arg4->Add(PyInt_AS_LONG(number));
        Py_DECREF(item);
        Py_DECREF(number);
      }
    }
  }
  if (obj4) {
    ecode5 = SWIG_AsVal_int(obj4, &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_FlagsProperty" "', expected argument " "5"" of type '" "int""'");
    } 
    arg5 = static_cast< int >(val5);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxFlagsProperty *)new wxFlagsProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxArrayString const &)*arg3,(wxArrayInt const &)*arg4,arg5);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxFlagsProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3) delete arg3;
  }
  {
    if (temp4) delete arg4;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3) delete arg3;
  }
  {
    if (temp4) delete arg4;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_FlagsProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxFlagsProperty *arg1 = (wxFlagsProperty *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxFlagsProperty, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FlagsProperty" "', expected argument " "1"" of type '" "wxFlagsProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxFlagsProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete arg1;
    
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FlagsProperty_GetItemCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxFlagsProperty *arg1 = (wxFlagsProperty *) 0 ;
  size_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxFlagsProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FlagsProperty_GetItemCount" "', expected argument " "1"" of type '" "wxFlagsProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxFlagsProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (size_t)((wxFlagsProperty const *)arg1)->GetItemCount();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FlagsProperty_GetLabel(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxFlagsProperty *arg1 = (wxFlagsProperty *) 0 ;
  size_t arg2 ;
  wxString *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ind", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:FlagsProperty_GetLabel",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxFlagsProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FlagsProperty_GetLabel" "', expected argument " "1"" of type '" "wxFlagsProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxFlagsProperty * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "FlagsProperty_GetLabel" "', expected argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxString const &_result_ref = ((wxFlagsProperty const *)arg1)->GetLabel(arg2);
      result = (wxString *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
#if wxUSE_UNICODE
    resultobj = PyUnicode_FromWideChar(result->c_str(), result->Len());
#else
    resultobj = PyString_FromStringAndSize(result->c_str(), result->Len());
#endif
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *FlagsProperty_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxFlagsProperty, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *FlagsProperty_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *PGFileDialogAdapter_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxPGFileDialogAdapter, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_FileProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  wxString const &arg3_defvalue = wxEmptyString ;
  wxString *arg3 = (wxString *) &arg3_defvalue ;
  wxFileProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  bool temp3 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "name",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOO:new_FileProperty",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  if (obj0) {
    {
      arg1 = wxString_in_helper(obj0);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (obj2) {
    {
      arg3 = wxString_in_helper(obj2);
      if (arg3 == NULL) SWIG_fail;
      temp3 = true;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxFileProperty *)new wxFileProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxString const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxFileProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_FileProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxFileProperty *arg1 = (wxFileProperty *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxFileProperty, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FileProperty" "', expected argument " "1"" of type '" "wxFileProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxFileProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete arg1;
    
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileProperty_GetClassValidator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxValidator *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args,"FileProperty_GetClassValidator",0,0,0)) SWIG_fail;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxValidator *)wxFileProperty::GetClassValidator();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxPyMake_wxObject(result, 0); 
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_FileProperty_GetFileName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxFileProperty *arg1 = (wxFileProperty *) 0 ;
  wxFileName result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxFileProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FileProperty_GetFileName" "', expected argument " "1"" of type '" "wxFileProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxFileProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxFileProperty const *)arg1)->GetFileName();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new wxFileName(static_cast< const wxFileName& >(result))), SWIGTYPE_p_wxFileName, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *FileProperty_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxFileProperty, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *FileProperty_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *PGLongStringDialogAdapter_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxPGLongStringDialogAdapter, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_LongStringProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  wxString const &arg3_defvalue = wxEmptyString ;
  wxString *arg3 = (wxString *) &arg3_defvalue ;
  wxLongStringProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  bool temp3 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "name",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOO:new_LongStringProperty",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  if (obj0) {
    {
      arg1 = wxString_in_helper(obj0);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (obj2) {
    {
      arg3 = wxString_in_helper(obj2);
      if (arg3 == NULL) SWIG_fail;
      temp3 = true;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxLongStringProperty *)new wxLongStringProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxString const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxLongStringProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_LongStringProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxLongStringProperty *arg1 = (wxLongStringProperty *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxLongStringProperty, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_LongStringProperty" "', expected argument " "1"" of type '" "wxLongStringProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxLongStringProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete arg1;
    
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LongStringProperty_OnButtonClick(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxLongStringProperty *arg1 = (wxLongStringProperty *) 0 ;
  wxPropertyGrid *arg2 = (wxPropertyGrid *) 0 ;
  wxString *arg3 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool temp3 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "propgrid",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:LongStringProperty_OnButtonClick",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxLongStringProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LongStringProperty_OnButtonClick" "', expected argument " "1"" of type '" "wxLongStringProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxLongStringProperty * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LongStringProperty_OnButtonClick" "', expected argument " "2"" of type '" "wxPropertyGrid *""'"); 
  }
  arg2 = reinterpret_cast< wxPropertyGrid * >(argp2);
  {
    arg3 = wxString_in_helper(obj2);
    if (arg3 == NULL) SWIG_fail;
    temp3 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->OnButtonClick(arg2,*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  {
    if (temp3)
    delete arg3;
  }
  return resultobj;
fail:
  {
    if (temp3)
    delete arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_LongStringProperty_DisplayEditorDialog(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGProperty *arg1 = (wxPGProperty *) 0 ;
  wxPropertyGrid *arg2 = (wxPropertyGrid *) 0 ;
  wxString *arg3 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool temp3 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "prop",(char *) "propGrid",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:LongStringProperty_DisplayEditorDialog",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LongStringProperty_DisplayEditorDialog" "', expected argument " "1"" of type '" "wxPGProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxPGProperty * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LongStringProperty_DisplayEditorDialog" "', expected argument " "2"" of type '" "wxPropertyGrid *""'"); 
  }
  arg2 = reinterpret_cast< wxPropertyGrid * >(argp2);
  {
    arg3 = wxString_in_helper(obj2);
    if (arg3 == NULL) SWIG_fail;
    temp3 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)wxLongStringProperty::DisplayEditorDialog(arg1,arg2,*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  {
    if (temp3)
    delete arg3;
  }
  return resultobj;
fail:
  {
    if (temp3)
    delete arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *LongStringProperty_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxLongStringProperty, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *LongStringProperty_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_ArrayStringProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  wxArrayString const &arg3_defvalue = wxArrayString() ;
  wxArrayString *arg3 = (wxArrayString *) &arg3_defvalue ;
  wxArrayStringProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  bool temp3 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "name",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOO:new_ArrayStringProperty",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  if (obj0) {
    {
      arg1 = wxString_in_helper(obj0);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (obj2) {
    {
      if (! PySequence_Check(obj2)) {
        PyErr_SetString(PyExc_TypeError, "Sequence of strings expected.");
        SWIG_fail;
      }
      arg3 = new wxArrayString;
      temp3 = true;
      int i, len=PySequence_Length(obj2);
      for (i=0; i<len; i++) {
        PyObject* item = PySequence_GetItem(obj2, i);
        wxString* s = wxString_in_helper(item);
        if (PyErr_Occurred())  SWIG_fail;
        arg3->Add(*s);
        delete s;
        Py_DECREF(item);
      }
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxArrayStringProperty *)new wxArrayStringProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxArrayString const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxArrayStringProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3) delete arg3;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3) delete arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ArrayStringProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxArrayStringProperty *arg1 = (wxArrayStringProperty *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxArrayStringProperty, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ArrayStringProperty" "', expected argument " "1"" of type '" "wxArrayStringProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxArrayStringProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete arg1;
    
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArrayStringProperty_ConvertArrayToString(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxArrayStringProperty *arg1 = (wxArrayStringProperty *) 0 ;
  wxArrayString *arg2 = 0 ;
  wxString *arg3 = (wxString *) 0 ;
  wxUniChar *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  bool temp3 = false ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "arr",(char *) "pString",(char *) "delimiter", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:ArrayStringProperty_ConvertArrayToString",kwnames,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxArrayStringProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArrayStringProperty_ConvertArrayToString" "', expected argument " "1"" of type '" "wxArrayStringProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxArrayStringProperty * >(argp1);
  {
    if (! PySequence_Check(obj1)) {
      PyErr_SetString(PyExc_TypeError, "Sequence of strings expected.");
      SWIG_fail;
    }
    arg2 = new wxArrayString;
    temp2 = true;
    int i, len=PySequence_Length(obj1);
    for (i=0; i<len; i++) {
      PyObject* item = PySequence_GetItem(obj1, i);
      wxString* s = wxString_in_helper(item);
      if (PyErr_Occurred())  SWIG_fail;
      arg2->Add(*s);
      delete s;
      Py_DECREF(item);
    }
  }
  {
    arg3 = wxString_in_helper(obj2);
    if (arg3 == NULL) SWIG_fail;
    temp3 = true;
  }
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_wxUniChar,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ArrayStringProperty_ConvertArrayToString" "', expected argument " "4"" of type '" "wxUniChar const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ArrayStringProperty_ConvertArrayToString" "', expected argument " "4"" of type '" "wxUniChar const &""'"); 
  }
  arg4 = reinterpret_cast< wxUniChar * >(argp4);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    ((wxArrayStringProperty const *)arg1)->ConvertArrayToString((wxArrayString const &)*arg2,arg3,(wxUniChar const &)*arg4);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    if (temp2) delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return resultobj;
fail:
  {
    if (temp2) delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArrayStringProperty_OnCustomStringEdit(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxArrayStringProperty *arg1 = (wxArrayStringProperty *) 0 ;
  wxWindow *arg2 = (wxWindow *) 0 ;
  wxString *arg3 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool temp3 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "parent",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:ArrayStringProperty_OnCustomStringEdit",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxArrayStringProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArrayStringProperty_OnCustomStringEdit" "', expected argument " "1"" of type '" "wxArrayStringProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxArrayStringProperty * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxWindow, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArrayStringProperty_OnCustomStringEdit" "', expected argument " "2"" of type '" "wxWindow *""'"); 
  }
  arg2 = reinterpret_cast< wxWindow * >(argp2);
  {
    arg3 = wxString_in_helper(obj2);
    if (arg3 == NULL) SWIG_fail;
    temp3 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->OnCustomStringEdit(arg2,*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  {
    if (temp3)
    delete arg3;
  }
  return resultobj;
fail:
  {
    if (temp3)
    delete arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArrayStringProperty_OnButtonClick(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxArrayStringProperty *arg1 = (wxArrayStringProperty *) 0 ;
  wxPropertyGrid *arg2 = (wxPropertyGrid *) 0 ;
  wxWindow *arg3 = (wxWindow *) 0 ;
  wxChar *arg4 = (wxChar *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "propgrid",(char *) "primary",(char *) "cbt", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:ArrayStringProperty_OnButtonClick",kwnames,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxArrayStringProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ArrayStringProperty_OnButtonClick" "', expected argument " "1"" of type '" "wxArrayStringProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxArrayStringProperty * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ArrayStringProperty_OnButtonClick" "', expected argument " "2"" of type '" "wxPropertyGrid *""'"); 
  }
  arg2 = reinterpret_cast< wxPropertyGrid * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_wxWindow, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArrayStringProperty_OnButtonClick" "', expected argument " "3"" of type '" "wxWindow *""'"); 
  }
  arg3 = reinterpret_cast< wxWindow * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_wxChar, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ArrayStringProperty_OnButtonClick" "', expected argument " "4"" of type '" "wxChar const *""'"); 
  }
  arg4 = reinterpret_cast< wxChar * >(argp4);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->OnButtonClick(arg2,arg3,(wxChar const *)arg4);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ArrayStringProperty_ArrayStringToString(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString *arg1 = 0 ;
  wxArrayString *arg2 = 0 ;
  wxUniChar arg3 ;
  int arg4 ;
  bool temp1 = false ;
  bool temp2 = false ;
  void *argp3 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char *  kwnames[] = {
    (char *) "dst",(char *) "src",(char *) "delimiter",(char *) "flags", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO:ArrayStringProperty_ArrayStringToString",kwnames,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  {
    arg1 = wxString_in_helper(obj0);
    if (arg1 == NULL) SWIG_fail;
    temp1 = true;
  }
  {
    if (! PySequence_Check(obj1)) {
      PyErr_SetString(PyExc_TypeError, "Sequence of strings expected.");
      SWIG_fail;
    }
    arg2 = new wxArrayString;
    temp2 = true;
    int i, len=PySequence_Length(obj1);
    for (i=0; i<len; i++) {
      PyObject* item = PySequence_GetItem(obj1, i);
      wxString* s = wxString_in_helper(item);
      if (PyErr_Occurred())  SWIG_fail;
      arg2->Add(*s);
      delete s;
      Py_DECREF(item);
    }
  }
  {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_wxUniChar,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ArrayStringProperty_ArrayStringToString" "', expected argument " "3"" of type '" "wxUniChar""'"); 
    }  
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ArrayStringProperty_ArrayStringToString" "', expected argument " "3"" of type '" "wxUniChar""'");
    } else {
      wxUniChar * temp = reinterpret_cast< wxUniChar * >(argp3);
      arg3 = *temp;
      if (SWIG_IsNewObj(res3)) delete temp;
    }
  }
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ArrayStringProperty_ArrayStringToString" "', expected argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    wxArrayStringProperty::ArrayStringToString(*arg1,(wxArrayString const &)*arg2,arg3,arg4);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2) delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2) delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *ArrayStringProperty_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxArrayStringProperty, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ArrayStringProperty_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_delete_PGArrayEditorDialog(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGArrayEditorDialog *arg1 = (wxPGArrayEditorDialog *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGArrayEditorDialog, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PGArrayEditorDialog" "', expected argument " "1"" of type '" "wxPGArrayEditorDialog *""'"); 
  }
  arg1 = reinterpret_cast< wxPGArrayEditorDialog * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete arg1;
    
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGArrayEditorDialog_Init(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGArrayEditorDialog *arg1 = (wxPGArrayEditorDialog *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGArrayEditorDialog, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGArrayEditorDialog_Init" "', expected argument " "1"" of type '" "wxPGArrayEditorDialog *""'"); 
  }
  arg1 = reinterpret_cast< wxPGArrayEditorDialog * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->Init();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGArrayEditorDialog_Create(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGArrayEditorDialog *arg1 = (wxPGArrayEditorDialog *) 0 ;
  wxWindow *arg2 = (wxWindow *) 0 ;
  wxString *arg3 = 0 ;
  wxString *arg4 = 0 ;
  long arg5 = (long) (wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxOK|wxCANCEL|wxCENTRE) ;
  wxPoint const &arg6_defvalue = wxDefaultPosition ;
  wxPoint *arg6 = (wxPoint *) &arg6_defvalue ;
  wxSize const &arg7_defvalue = wxDefaultSize ;
  wxSize *arg7 = (wxSize *) &arg7_defvalue ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool temp3 = false ;
  bool temp4 = false ;
  long val5 ;
  int ecode5 = 0 ;
  wxPoint temp6 ;
  wxSize temp7 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "parent",(char *) "message",(char *) "caption",(char *) "style",(char *) "pos",(char *) "sz", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|OOO:PGArrayEditorDialog_Create",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGArrayEditorDialog, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGArrayEditorDialog_Create" "', expected argument " "1"" of type '" "wxPGArrayEditorDialog *""'"); 
  }
  arg1 = reinterpret_cast< wxPGArrayEditorDialog * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxWindow, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGArrayEditorDialog_Create" "', expected argument " "2"" of type '" "wxWindow *""'"); 
  }
  arg2 = reinterpret_cast< wxWindow * >(argp2);
  {
    arg3 = wxString_in_helper(obj2);
    if (arg3 == NULL) SWIG_fail;
    temp3 = true;
  }
  {
    arg4 = wxString_in_helper(obj3);
    if (arg4 == NULL) SWIG_fail;
    temp4 = true;
  }
  if (obj4) {
    ecode5 = SWIG_AsVal_long(obj4, &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "PGArrayEditorDialog_Create" "', expected argument " "5"" of type '" "long""'");
    } 
    arg5 = static_cast< long >(val5);
  }
  if (obj5) {
    {
      arg6 = &temp6;
      if ( ! wxPoint_helper(obj5, &arg6)) SWIG_fail;
    }
  }
  if (obj6) {
    {
      arg7 = &temp7;
      if ( ! wxSize_helper(obj6, &arg7)) SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->Create(arg2,(wxString const &)*arg3,(wxString const &)*arg4,arg5,(wxPoint const &)*arg6,(wxSize const &)*arg7);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  {
    if (temp3)
    delete arg3;
  }
  {
    if (temp4)
    delete arg4;
  }
  return resultobj;
fail:
  {
    if (temp3)
    delete arg3;
  }
  {
    if (temp4)
    delete arg4;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGArrayEditorDialog_EnableCustomNewAction(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGArrayEditorDialog *arg1 = (wxPGArrayEditorDialog *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGArrayEditorDialog, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGArrayEditorDialog_EnableCustomNewAction" "', expected argument " "1"" of type '" "wxPGArrayEditorDialog *""'"); 
  }
  arg1 = reinterpret_cast< wxPGArrayEditorDialog * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->EnableCustomNewAction();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGArrayEditorDialog_SetDialogValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGArrayEditorDialog *arg1 = (wxPGArrayEditorDialog *) 0 ;
  wxVariant *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGArrayEditorDialog_SetDialogValue",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGArrayEditorDialog, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGArrayEditorDialog_SetDialogValue" "', expected argument " "1"" of type '" "wxPGArrayEditorDialog *""'"); 
  }
  arg1 = reinterpret_cast< wxPGArrayEditorDialog * >(argp1);
  {
    arg2 = new wxVariant();
    if ( !PyObject_to_wxVariant(obj1, arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxVariant");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetDialogValue((wxVariant const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGArrayEditorDialog_GetDialogValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGArrayEditorDialog *arg1 = (wxPGArrayEditorDialog *) 0 ;
  wxVariant result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGArrayEditorDialog, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGArrayEditorDialog_GetDialogValue" "', expected argument " "1"" of type '" "wxPGArrayEditorDialog const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGArrayEditorDialog * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPGArrayEditorDialog const *)arg1)->GetDialogValue();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxVariant_to_PyObject(&result);
    if ( !resultobj ) {
      PyErr_SetString(PyExc_TypeError,
        "this wxVariant type cannot be converted to Python object");
      SWIG_fail;
    }
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGArrayEditorDialog_GetTextCtrlValidator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGArrayEditorDialog *arg1 = (wxPGArrayEditorDialog *) 0 ;
  wxValidator *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGArrayEditorDialog, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGArrayEditorDialog_GetTextCtrlValidator" "', expected argument " "1"" of type '" "wxPGArrayEditorDialog const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGArrayEditorDialog * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxValidator *)((wxPGArrayEditorDialog const *)arg1)->GetTextCtrlValidator();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxPyMake_wxObject(result, 0); 
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGArrayEditorDialog_IsModified(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGArrayEditorDialog *arg1 = (wxPGArrayEditorDialog *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGArrayEditorDialog, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGArrayEditorDialog_IsModified" "', expected argument " "1"" of type '" "wxPGArrayEditorDialog const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGArrayEditorDialog * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPGArrayEditorDialog const *)arg1)->IsModified();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGArrayEditorDialog_GetSelection(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGArrayEditorDialog *arg1 = (wxPGArrayEditorDialog *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGArrayEditorDialog, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGArrayEditorDialog_GetSelection" "', expected argument " "1"" of type '" "wxPGArrayEditorDialog const *""'"); 
  }
  arg1 = reinterpret_cast< wxPGArrayEditorDialog * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPGArrayEditorDialog const *)arg1)->GetSelection();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGArrayEditorDialog_OnAddClick(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGArrayEditorDialog *arg1 = (wxPGArrayEditorDialog *) 0 ;
  wxCommandEvent *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "event", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGArrayEditorDialog_OnAddClick",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGArrayEditorDialog, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGArrayEditorDialog_OnAddClick" "', expected argument " "1"" of type '" "wxPGArrayEditorDialog *""'"); 
  }
  arg1 = reinterpret_cast< wxPGArrayEditorDialog * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_wxCommandEvent,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGArrayEditorDialog_OnAddClick" "', expected argument " "2"" of type '" "wxCommandEvent &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PGArrayEditorDialog_OnAddClick" "', expected argument " "2"" of type '" "wxCommandEvent &""'"); 
  }
  arg2 = reinterpret_cast< wxCommandEvent * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->OnAddClick(*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGArrayEditorDialog_OnDeleteClick(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGArrayEditorDialog *arg1 = (wxPGArrayEditorDialog *) 0 ;
  wxCommandEvent *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "event", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGArrayEditorDialog_OnDeleteClick",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGArrayEditorDialog, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGArrayEditorDialog_OnDeleteClick" "', expected argument " "1"" of type '" "wxPGArrayEditorDialog *""'"); 
  }
  arg1 = reinterpret_cast< wxPGArrayEditorDialog * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_wxCommandEvent,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGArrayEditorDialog_OnDeleteClick" "', expected argument " "2"" of type '" "wxCommandEvent &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PGArrayEditorDialog_OnDeleteClick" "', expected argument " "2"" of type '" "wxCommandEvent &""'"); 
  }
  arg2 = reinterpret_cast< wxCommandEvent * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->OnDeleteClick(*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGArrayEditorDialog_OnUpClick(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGArrayEditorDialog *arg1 = (wxPGArrayEditorDialog *) 0 ;
  wxCommandEvent *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "event", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGArrayEditorDialog_OnUpClick",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGArrayEditorDialog, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGArrayEditorDialog_OnUpClick" "', expected argument " "1"" of type '" "wxPGArrayEditorDialog *""'"); 
  }
  arg1 = reinterpret_cast< wxPGArrayEditorDialog * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_wxCommandEvent,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGArrayEditorDialog_OnUpClick" "', expected argument " "2"" of type '" "wxCommandEvent &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PGArrayEditorDialog_OnUpClick" "', expected argument " "2"" of type '" "wxCommandEvent &""'"); 
  }
  arg2 = reinterpret_cast< wxCommandEvent * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->OnUpClick(*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGArrayEditorDialog_OnDownClick(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGArrayEditorDialog *arg1 = (wxPGArrayEditorDialog *) 0 ;
  wxCommandEvent *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "event", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGArrayEditorDialog_OnDownClick",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGArrayEditorDialog, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGArrayEditorDialog_OnDownClick" "', expected argument " "1"" of type '" "wxPGArrayEditorDialog *""'"); 
  }
  arg1 = reinterpret_cast< wxPGArrayEditorDialog * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_wxCommandEvent,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGArrayEditorDialog_OnDownClick" "', expected argument " "2"" of type '" "wxCommandEvent &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PGArrayEditorDialog_OnDownClick" "', expected argument " "2"" of type '" "wxCommandEvent &""'"); 
  }
  arg2 = reinterpret_cast< wxCommandEvent * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->OnDownClick(*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGArrayEditorDialog_OnEndLabelEdit(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGArrayEditorDialog *arg1 = (wxPGArrayEditorDialog *) 0 ;
  wxListEvent *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "event", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGArrayEditorDialog_OnEndLabelEdit",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGArrayEditorDialog, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGArrayEditorDialog_OnEndLabelEdit" "', expected argument " "1"" of type '" "wxPGArrayEditorDialog *""'"); 
  }
  arg1 = reinterpret_cast< wxPGArrayEditorDialog * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_wxListEvent,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGArrayEditorDialog_OnEndLabelEdit" "', expected argument " "2"" of type '" "wxListEvent &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PGArrayEditorDialog_OnEndLabelEdit" "', expected argument " "2"" of type '" "wxListEvent &""'"); 
  }
  arg2 = reinterpret_cast< wxListEvent * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->OnEndLabelEdit(*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGArrayEditorDialog_OnIdle(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGArrayEditorDialog *arg1 = (wxPGArrayEditorDialog *) 0 ;
  wxIdleEvent *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "event", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGArrayEditorDialog_OnIdle",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGArrayEditorDialog, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGArrayEditorDialog_OnIdle" "', expected argument " "1"" of type '" "wxPGArrayEditorDialog *""'"); 
  }
  arg1 = reinterpret_cast< wxPGArrayEditorDialog * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_wxIdleEvent,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PGArrayEditorDialog_OnIdle" "', expected argument " "2"" of type '" "wxIdleEvent &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PGArrayEditorDialog_OnIdle" "', expected argument " "2"" of type '" "wxIdleEvent &""'"); 
  }
  arg2 = reinterpret_cast< wxIdleEvent * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->OnIdle(*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PGArrayEditorDialog_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxPGArrayEditorDialog, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_PGArrayStringEditorDialog(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGArrayStringEditorDialog *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args,"new_PGArrayStringEditorDialog",0,0,0)) SWIG_fail;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGArrayStringEditorDialog *)new wxPGArrayStringEditorDialog();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGArrayStringEditorDialog, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PGArrayStringEditorDialog(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGArrayStringEditorDialog *arg1 = (wxPGArrayStringEditorDialog *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGArrayStringEditorDialog, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PGArrayStringEditorDialog" "', expected argument " "1"" of type '" "wxPGArrayStringEditorDialog *""'"); 
  }
  arg1 = reinterpret_cast< wxPGArrayStringEditorDialog * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete arg1;
    
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGArrayStringEditorDialog_Init(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPGArrayStringEditorDialog *arg1 = (wxPGArrayStringEditorDialog *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPGArrayStringEditorDialog, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGArrayStringEditorDialog_Init" "', expected argument " "1"" of type '" "wxPGArrayStringEditorDialog *""'"); 
  }
  arg1 = reinterpret_cast< wxPGArrayStringEditorDialog * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->Init();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGArrayStringEditorDialog_SetCustomButton(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGArrayStringEditorDialog *arg1 = (wxPGArrayStringEditorDialog *) 0 ;
  wxString *arg2 = 0 ;
  wxArrayStringProperty *arg3 = (wxArrayStringProperty *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "custBtText",(char *) "pcc", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PGArrayStringEditorDialog_SetCustomButton",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGArrayStringEditorDialog, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGArrayStringEditorDialog_SetCustomButton" "', expected argument " "1"" of type '" "wxPGArrayStringEditorDialog *""'"); 
  }
  arg1 = reinterpret_cast< wxPGArrayStringEditorDialog * >(argp1);
  {
    arg2 = wxString_in_helper(obj1);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_wxArrayStringProperty, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PGArrayStringEditorDialog_SetCustomButton" "', expected argument " "3"" of type '" "wxArrayStringProperty *""'"); 
  }
  arg3 = reinterpret_cast< wxArrayStringProperty * >(argp3);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetCustomButton((wxString const &)*arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PGArrayStringEditorDialog_OnCustomNewAction(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGArrayStringEditorDialog *arg1 = (wxPGArrayStringEditorDialog *) 0 ;
  wxString *arg2 = (wxString *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "resString", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PGArrayStringEditorDialog_OnCustomNewAction",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPGArrayStringEditorDialog, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PGArrayStringEditorDialog_OnCustomNewAction" "', expected argument " "1"" of type '" "wxPGArrayStringEditorDialog *""'"); 
  }
  arg1 = reinterpret_cast< wxPGArrayStringEditorDialog * >(argp1);
  {
    arg2 = wxString_in_helper(obj1);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->OnCustomNewAction(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *PGArrayStringEditorDialog_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxPGArrayStringEditorDialog, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PGArrayStringEditorDialog_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_ColourPropertyValue_m_type_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxColourPropertyValue *arg1 = (wxColourPropertyValue *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args,"ColourPropertyValue_m_type_set",2,2,swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxColourPropertyValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColourPropertyValue_m_type_set" "', expected argument " "1"" of type '" "wxColourPropertyValue *""'"); 
  }
  arg1 = reinterpret_cast< wxColourPropertyValue * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ColourPropertyValue_m_type_set" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->m_type = arg2;
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ColourPropertyValue_m_type_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxColourPropertyValue *arg1 = (wxColourPropertyValue *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxColourPropertyValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColourPropertyValue_m_type_get" "', expected argument " "1"" of type '" "wxColourPropertyValue *""'"); 
  }
  arg1 = reinterpret_cast< wxColourPropertyValue * >(argp1);
  result = (int) ((arg1)->m_type);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ColourPropertyValue_m_colour_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxColourPropertyValue *arg1 = (wxColourPropertyValue *) 0 ;
  wxColour *arg2 = (wxColour *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args,"ColourPropertyValue_m_colour_set",2,2,swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxColourPropertyValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColourPropertyValue_m_colour_set" "', expected argument " "1"" of type '" "wxColourPropertyValue *""'"); 
  }
  arg1 = reinterpret_cast< wxColourPropertyValue * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_wxColour, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ColourPropertyValue_m_colour_set" "', expected argument " "2"" of type '" "wxColour *""'"); 
  }
  arg2 = reinterpret_cast< wxColour * >(argp2);
  if (arg1) (arg1)->m_colour = *arg2;
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ColourPropertyValue_m_colour_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxColourPropertyValue *arg1 = (wxColourPropertyValue *) 0 ;
  wxColour *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxColourPropertyValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColourPropertyValue_m_colour_get" "', expected argument " "1"" of type '" "wxColourPropertyValue *""'"); 
  }
  arg1 = reinterpret_cast< wxColourPropertyValue * >(argp1);
  result = (wxColour *)& ((arg1)->m_colour);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxColour, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ColourPropertyValue__SWIG_0(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  wxColourPropertyValue *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxColourPropertyValue *)new wxColourPropertyValue();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxColourPropertyValue, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ColourPropertyValue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxColourPropertyValue *arg1 = (wxColourPropertyValue *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxColourPropertyValue, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ColourPropertyValue" "', expected argument " "1"" of type '" "wxColourPropertyValue *""'"); 
  }
  arg1 = reinterpret_cast< wxColourPropertyValue * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete arg1;
    
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ColourPropertyValue__SWIG_1(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxColourPropertyValue *arg1 = 0 ;
  wxColourPropertyValue *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_wxColourPropertyValue,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ColourPropertyValue" "', expected argument " "1"" of type '" "wxColourPropertyValue const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ColourPropertyValue" "', expected argument " "1"" of type '" "wxColourPropertyValue const &""'"); 
  }
  arg1 = reinterpret_cast< wxColourPropertyValue * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxColourPropertyValue *)new wxColourPropertyValue((wxColourPropertyValue const &)*arg1);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxColourPropertyValue, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ColourPropertyValue_Init(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxColourPropertyValue *arg1 = (wxColourPropertyValue *) 0 ;
  int arg2 ;
  wxColour *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  wxColour temp3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "type",(char *) "colour", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:ColourPropertyValue_Init",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxColourPropertyValue, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ColourPropertyValue_Init" "', expected argument " "1"" of type '" "wxColourPropertyValue *""'"); 
  }
  arg1 = reinterpret_cast< wxColourPropertyValue * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ColourPropertyValue_Init" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    arg3 = &temp3;
    if ( ! wxColour_helper(obj2, &arg3)) SWIG_fail;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->Init(arg2,(wxColour const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ColourPropertyValue__SWIG_2(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxColour *arg1 = 0 ;
  wxColourPropertyValue *result = 0 ;
  wxColour temp1 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    arg1 = &temp1;
    if ( ! wxColour_helper(swig_obj[0], &arg1)) SWIG_fail;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxColourPropertyValue *)new wxColourPropertyValue((wxColour const &)*arg1);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxColourPropertyValue, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ColourPropertyValue__SWIG_3(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  int arg1 ;
  wxColourPropertyValue *result = 0 ;
  int val1 ;
  int ecode1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ColourPropertyValue" "', expected argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxColourPropertyValue *)new wxColourPropertyValue(arg1);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxColourPropertyValue, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ColourPropertyValue__SWIG_4(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  int arg1 ;
  wxColour *arg2 = 0 ;
  wxColourPropertyValue *result = 0 ;
  int val1 ;
  int ecode1 = 0 ;
  wxColour temp2 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ColourPropertyValue" "', expected argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  {
    arg2 = &temp2;
    if ( ! wxColour_helper(swig_obj[1], &arg2)) SWIG_fail;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxColourPropertyValue *)new wxColourPropertyValue(arg1,(wxColour const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxColourPropertyValue, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ColourPropertyValue(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  
  if (!(argc = SWIG_Python_UnpackTuple(args,"new_ColourPropertyValue",0,2,argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_ColourPropertyValue__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v = 0;
    {
      int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_wxColourPropertyValue, 0);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_2;
    return _wrap_new_ColourPropertyValue__SWIG_1(self, argc, argv);
  }
check_2:
  
  if (argc == 1) {
    int _v = 0;
    {
      {
        _v = wxColour_typecheck(argv[0]);
      }
    }
    if (!_v) goto check_3;
    return _wrap_new_ColourPropertyValue__SWIG_2(self, argc, argv);
  }
check_3:
  
  if (argc == 1) {
    return _wrap_new_ColourPropertyValue__SWIG_3(self, argc, argv);
  }
  if (argc == 2) {
    return _wrap_new_ColourPropertyValue__SWIG_4(self, argc, argv);
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"No matching function for overloaded 'new_ColourPropertyValue'");
  return NULL;
}


SWIGINTERN PyObject *ColourPropertyValue_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxColourPropertyValue, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ColourPropertyValue_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_FontProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  wxFont const &arg3_defvalue = wxFont() ;
  wxFont *arg3 = (wxFont *) &arg3_defvalue ;
  wxFontProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "name",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOO:new_FontProperty",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  if (obj0) {
    {
      arg1 = wxString_in_helper(obj0);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (obj2) {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_wxFont,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_FontProperty" "', expected argument " "3"" of type '" "wxFont const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_FontProperty" "', expected argument " "3"" of type '" "wxFont const &""'"); 
    }
    arg3 = reinterpret_cast< wxFont * >(argp3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxFontProperty *)new wxFontProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxFont const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxFontProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_FontProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxFontProperty *arg1 = (wxFontProperty *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxFontProperty, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FontProperty" "', expected argument " "1"" of type '" "wxFontProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxFontProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete arg1;
    
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *FontProperty_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxFontProperty, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *FontProperty_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_SystemColourProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  wxColourPropertyValue const &arg3_defvalue = wxColourPropertyValue() ;
  wxColourPropertyValue *arg3 = (wxColourPropertyValue *) &arg3_defvalue ;
  wxSystemColourProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "name",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOO:new_SystemColourProperty",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  if (obj0) {
    {
      arg1 = wxString_in_helper(obj0);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (obj2) {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_wxColourPropertyValue,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_SystemColourProperty" "', expected argument " "3"" of type '" "wxColourPropertyValue const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SystemColourProperty" "', expected argument " "3"" of type '" "wxColourPropertyValue const &""'"); 
    }
    arg3 = reinterpret_cast< wxColourPropertyValue * >(argp3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxSystemColourProperty *)new wxSystemColourProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxColourPropertyValue const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxSystemColourProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SystemColourProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxSystemColourProperty *arg1 = (wxSystemColourProperty *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxSystemColourProperty, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SystemColourProperty" "', expected argument " "1"" of type '" "wxSystemColourProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxSystemColourProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete arg1;
    
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SystemColourProperty_ColourToString(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxSystemColourProperty *arg1 = (wxSystemColourProperty *) 0 ;
  wxColour *arg2 = 0 ;
  int arg3 ;
  int arg4 = (int) 0 ;
  wxString result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  wxColour temp2 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "col",(char *) "index",(char *) "argFlags", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|O:SystemColourProperty_ColourToString",kwnames,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxSystemColourProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SystemColourProperty_ColourToString" "', expected argument " "1"" of type '" "wxSystemColourProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxSystemColourProperty * >(argp1);
  {
    arg2 = &temp2;
    if ( ! wxColour_helper(obj1, &arg2)) SWIG_fail;
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SystemColourProperty_ColourToString" "', expected argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  if (obj3) {
    ecode4 = SWIG_AsVal_int(obj3, &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "SystemColourProperty_ColourToString" "', expected argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxSystemColourProperty const *)arg1)->ColourToString((wxColour const &)*arg2,arg3,arg4);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
#if wxUSE_UNICODE
    resultobj = PyUnicode_FromWideChar((&result)->c_str(), (&result)->Len());
#else
    resultobj = PyString_FromStringAndSize((&result)->c_str(), (&result)->Len());
#endif
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SystemColourProperty_GetCustomColourIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxSystemColourProperty *arg1 = (wxSystemColourProperty *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxSystemColourProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SystemColourProperty_GetCustomColourIndex" "', expected argument " "1"" of type '" "wxSystemColourProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxSystemColourProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxSystemColourProperty const *)arg1)->GetCustomColourIndex();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SystemColourProperty_QueryColourFromUser(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxSystemColourProperty *arg1 = (wxSystemColourProperty *) 0 ;
  wxVariant *arg2 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "variant", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SystemColourProperty_QueryColourFromUser",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxSystemColourProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SystemColourProperty_QueryColourFromUser" "', expected argument " "1"" of type '" "wxSystemColourProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxSystemColourProperty * >(argp1);
  {
    arg2 = new wxVariant();
    if ( !PyObject_to_wxVariant(obj1, arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxVariant");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxSystemColourProperty const *)arg1)->QueryColourFromUser(*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_SystemColourProperty_GetColour(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxSystemColourProperty *arg1 = (wxSystemColourProperty *) 0 ;
  int arg2 ;
  wxColour result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "index", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SystemColourProperty_GetColour",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxSystemColourProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SystemColourProperty_GetColour" "', expected argument " "1"" of type '" "wxSystemColourProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxSystemColourProperty * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SystemColourProperty_GetColour" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxSystemColourProperty const *)arg1)->GetColour(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new wxColour(static_cast< const wxColour& >(result))), SWIGTYPE_p_wxColour, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SystemColourProperty_GetVal(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxSystemColourProperty *arg1 = (wxSystemColourProperty *) 0 ;
  wxVariant *arg2 = (wxVariant *) NULL ;
  wxColourPropertyValue result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "pVariant", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:SystemColourProperty_GetVal",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxSystemColourProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SystemColourProperty_GetVal" "', expected argument " "1"" of type '" "wxSystemColourProperty const *""'"); 
  }
  arg1 = reinterpret_cast< wxSystemColourProperty * >(argp1);
  if (obj1) {
    res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxVariant, 0 |  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SystemColourProperty_GetVal" "', expected argument " "2"" of type '" "wxVariant const *""'"); 
    }
    arg2 = reinterpret_cast< wxVariant * >(argp2);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxSystemColourProperty const *)arg1)->GetVal((wxVariant const *)arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new wxColourPropertyValue(static_cast< const wxColourPropertyValue& >(result))), SWIGTYPE_p_wxColourPropertyValue, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SystemColourProperty_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxSystemColourProperty, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *SystemColourProperty_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_ColourProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  wxColour const &arg3_defvalue = *wxWHITE ;
  wxColour *arg3 = (wxColour *) &arg3_defvalue ;
  wxColourProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  wxColour temp3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "name",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOO:new_ColourProperty",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  if (obj0) {
    {
      arg1 = wxString_in_helper(obj0);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (obj2) {
    {
      arg3 = &temp3;
      if ( ! wxColour_helper(obj2, &arg3)) SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxColourProperty *)new wxColourProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxColour const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxColourProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ColourProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxColourProperty *arg1 = (wxColourProperty *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxColourProperty, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ColourProperty" "', expected argument " "1"" of type '" "wxColourProperty *""'"); 
  }
  arg1 = reinterpret_cast< wxColourProperty * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete arg1;
    
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ColourProperty_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxColourProperty, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ColourProperty_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_PropertyGridPage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridPage *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args,"new_PropertyGridPage",0,0,0)) SWIG_fail;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPropertyGridPage *)new wxPropertyGridPage();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPropertyGridPage, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PropertyGridPage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridPage *arg1 = (wxPropertyGridPage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridPage, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PropertyGridPage" "', expected argument " "1"" of type '" "wxPropertyGridPage *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridPage * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete arg1;
    
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridPage_FitColumns(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridPage *arg1 = (wxPropertyGridPage *) 0 ;
  wxSize result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridPage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridPage_FitColumns" "', expected argument " "1"" of type '" "wxPropertyGridPage *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridPage * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (arg1)->FitColumns();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new wxSize(static_cast< const wxSize& >(result))), SWIGTYPE_p_wxSize, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridPage_GetIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridPage *arg1 = (wxPropertyGridPage *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridPage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridPage_GetIndex" "', expected argument " "1"" of type '" "wxPropertyGridPage const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridPage * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPropertyGridPage const *)arg1)->GetIndex();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridPage_GetSplitterPosition(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridPage *arg1 = (wxPropertyGridPage *) 0 ;
  int arg2 = (int) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "col", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:PropertyGridPage_GetSplitterPosition",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridPage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridPage_GetSplitterPosition" "', expected argument " "1"" of type '" "wxPropertyGridPage const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridPage * >(argp1);
  if (obj1) {
    ecode2 = SWIG_AsVal_int(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridPage_GetSplitterPosition" "', expected argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPropertyGridPage const *)arg1)->GetSplitterPosition(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridPage_GetRoot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridPage *arg1 = (wxPropertyGridPage *) 0 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridPage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridPage_GetRoot" "', expected argument " "1"" of type '" "wxPropertyGridPage const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridPage * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)((wxPropertyGridPage const *)arg1)->GetRoot();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridPage_GetStatePtr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPropertyGridPage *arg1 = (wxPropertyGridPage *) 0 ;
  wxPropertyGridPageState *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridPage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridPage_GetStatePtr" "', expected argument " "1"" of type '" "wxPropertyGridPage *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridPage * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPropertyGridPageState *)(arg1)->GetStatePtr();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPropertyGridPageState, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridPage_GetStatePtr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPropertyGridPage *arg1 = (wxPropertyGridPage *) 0 ;
  wxPropertyGridPageState *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridPage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridPage_GetStatePtr" "', expected argument " "1"" of type '" "wxPropertyGridPage const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridPage * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPropertyGridPageState *)((wxPropertyGridPage const *)arg1)->GetStatePtr();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPropertyGridPageState, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridPage_GetStatePtr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  
  if (!(argc = SWIG_Python_UnpackTuple(args,"PropertyGridPage_GetStatePtr",0,1,argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    return _wrap_PropertyGridPage_GetStatePtr__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    return _wrap_PropertyGridPage_GetStatePtr__SWIG_1(self, argc, argv);
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"No matching function for overloaded 'PropertyGridPage_GetStatePtr'");
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridPage_GetToolId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridPage *arg1 = (wxPropertyGridPage *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridPage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridPage_GetToolId" "', expected argument " "1"" of type '" "wxPropertyGridPage const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridPage * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPropertyGridPage const *)arg1)->GetToolId();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridPage_Init(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridPage *arg1 = (wxPropertyGridPage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridPage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridPage_Init" "', expected argument " "1"" of type '" "wxPropertyGridPage *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridPage * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->Init();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridPage_IsHandlingAllEvents(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridPage *arg1 = (wxPropertyGridPage *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridPage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridPage_IsHandlingAllEvents" "', expected argument " "1"" of type '" "wxPropertyGridPage const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridPage * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPropertyGridPage const *)arg1)->IsHandlingAllEvents();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridPage_OnShow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridPage *arg1 = (wxPropertyGridPage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridPage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridPage_OnShow" "', expected argument " "1"" of type '" "wxPropertyGridPage *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridPage * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->OnShow();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridPage_SetSplitterPosition(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridPage *arg1 = (wxPropertyGridPage *) 0 ;
  int arg2 ;
  int arg3 = (int) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "splitterPos",(char *) "col", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PropertyGridPage_SetSplitterPosition",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridPage, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridPage_SetSplitterPosition" "', expected argument " "1"" of type '" "wxPropertyGridPage *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridPage * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridPage_SetSplitterPosition" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PropertyGridPage_SetSplitterPosition" "', expected argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetSplitterPosition(arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PropertyGridPage_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxPropertyGridPage, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PropertyGridPage_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_PropertyGridManager(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxWindow *arg1 = (wxWindow *) 0 ;
  int arg2 = (int) wxID_ANY ;
  wxPoint const &arg3_defvalue = wxDefaultPosition ;
  wxPoint *arg3 = (wxPoint *) &arg3_defvalue ;
  wxSize const &arg4_defvalue = wxDefaultSize ;
  wxSize *arg4 = (wxSize *) &arg4_defvalue ;
  long arg5 = (long) (0) ;
  wxString const &arg6_defvalue = wxPropertyGridManagerNameStr ;
  wxString *arg6 = (wxString *) &arg6_defvalue ;
  wxPropertyGridManager *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  wxPoint temp3 ;
  wxSize temp4 ;
  long val5 ;
  int ecode5 = 0 ;
  bool temp6 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  char *  kwnames[] = {
    (char *) "parent",(char *) "id",(char *) "pos",(char *) "size",(char *) "style",(char *) "name", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|OOOOO:new_PropertyGridManager",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxWindow, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_PropertyGridManager" "', expected argument " "1"" of type '" "wxWindow *""'"); 
  }
  arg1 = reinterpret_cast< wxWindow * >(argp1);
  if (obj1) {
    ecode2 = SWIG_AsVal_int(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_PropertyGridManager" "', expected argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
  }
  if (obj2) {
    {
      arg3 = &temp3;
      if ( ! wxPoint_helper(obj2, &arg3)) SWIG_fail;
    }
  }
  if (obj3) {
    {
      arg4 = &temp4;
      if ( ! wxSize_helper(obj3, &arg4)) SWIG_fail;
    }
  }
  if (obj4) {
    ecode5 = SWIG_AsVal_long(obj4, &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_PropertyGridManager" "', expected argument " "5"" of type '" "long""'");
    } 
    arg5 = static_cast< long >(val5);
  }
  if (obj5) {
    {
      arg6 = wxString_in_helper(obj5);
      if (arg6 == NULL) SWIG_fail;
      temp6 = true;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPropertyGridManager *)new wxPropertyGridManager(arg1,arg2,(wxPoint const &)*arg3,(wxSize const &)*arg4,arg5,(wxString const &)*arg6);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPropertyGridManager, SWIG_POINTER_NEW |  0 );
  {
    if (temp6)
    delete arg6;
  }
  return resultobj;
fail:
  {
    if (temp6)
    delete arg6;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PropertyGridManager(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridManager, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PropertyGridManager" "', expected argument " "1"" of type '" "wxPropertyGridManager *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    delete arg1;
    
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_AddPage(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  wxString const &arg2_defvalue = wxEmptyString ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  wxBitmap const &arg3_defvalue = wxNullBitmap ;
  wxBitmap *arg3 = (wxBitmap *) &arg3_defvalue ;
  wxPropertyGridPage *arg4 = (wxPropertyGridPage *) NULL ;
  wxPropertyGridPage *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "label",(char *) "bmp",(char *) "pageObj", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|OOO:PropertyGridManager_AddPage",kwnames,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_AddPage" "', expected argument " "1"" of type '" "wxPropertyGridManager *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (obj2) {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_wxBitmap,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PropertyGridManager_AddPage" "', expected argument " "3"" of type '" "wxBitmap const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PropertyGridManager_AddPage" "', expected argument " "3"" of type '" "wxBitmap const &""'"); 
    }
    arg3 = reinterpret_cast< wxBitmap * >(argp3);
  }
  if (obj3) {
    res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_wxPropertyGridPage, 0 |  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "PropertyGridManager_AddPage" "', expected argument " "4"" of type '" "wxPropertyGridPage *""'"); 
    }
    arg4 = reinterpret_cast< wxPropertyGridPage * >(argp4);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPropertyGridPage *)(arg1)->AddPage((wxString const &)*arg2,(wxBitmap const &)*arg3,arg4);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPropertyGridPage, 0 |  0 );
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_ClearPage(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "page", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridManager_ClearPage",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_ClearPage" "', expected argument " "1"" of type '" "wxPropertyGridManager *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridManager_ClearPage" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->ClearPage(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_CommitChangesFromEditor(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  int arg2 = (int) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "flags", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:PropertyGridManager_CommitChangesFromEditor",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_CommitChangesFromEditor" "', expected argument " "1"" of type '" "wxPropertyGridManager *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  if (obj1) {
    ecode2 = SWIG_AsVal_int(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridManager_CommitChangesFromEditor" "', expected argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->CommitChangesFromEditor(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_Create(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  wxWindow *arg2 = (wxWindow *) 0 ;
  int arg3 = (int) wxID_ANY ;
  wxPoint const &arg4_defvalue = wxDefaultPosition ;
  wxPoint *arg4 = (wxPoint *) &arg4_defvalue ;
  wxSize const &arg5_defvalue = wxDefaultSize ;
  wxSize *arg5 = (wxSize *) &arg5_defvalue ;
  long arg6 = (long) (0) ;
  wxString const &arg7_defvalue = wxPropertyGridManagerNameStr ;
  wxString *arg7 = (wxString *) &arg7_defvalue ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  wxPoint temp4 ;
  wxSize temp5 ;
  long val6 ;
  int ecode6 = 0 ;
  bool temp7 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "parent",(char *) "id",(char *) "pos",(char *) "size",(char *) "style",(char *) "name", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|OOOOO:PropertyGridManager_Create",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_Create" "', expected argument " "1"" of type '" "wxPropertyGridManager *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxWindow, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PropertyGridManager_Create" "', expected argument " "2"" of type '" "wxWindow *""'"); 
  }
  arg2 = reinterpret_cast< wxWindow * >(argp2);
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PropertyGridManager_Create" "', expected argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  if (obj3) {
    {
      arg4 = &temp4;
      if ( ! wxPoint_helper(obj3, &arg4)) SWIG_fail;
    }
  }
  if (obj4) {
    {
      arg5 = &temp5;
      if ( ! wxSize_helper(obj4, &arg5)) SWIG_fail;
    }
  }
  if (obj5) {
    ecode6 = SWIG_AsVal_long(obj5, &val6);
    if (!SWIG_IsOK(ecode6)) {
      SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "PropertyGridManager_Create" "', expected argument " "6"" of type '" "long""'");
    } 
    arg6 = static_cast< long >(val6);
  }
  if (obj6) {
    {
      arg7 = wxString_in_helper(obj6);
      if (arg7 == NULL) SWIG_fail;
      temp7 = true;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->Create(arg2,arg3,(wxPoint const &)*arg4,(wxSize const &)*arg5,arg6,(wxString const &)*arg7);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  {
    if (temp7)
    delete arg7;
  }
  return resultobj;
fail:
  {
    if (temp7)
    delete arg7;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_EnableCategories(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  bool arg2 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "enable", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridManager_EnableCategories",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_EnableCategories" "', expected argument " "1"" of type '" "wxPropertyGridManager *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridManager_EnableCategories" "', expected argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->EnableCategories(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_EnsureVisible(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridManager_EnsureVisible",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_EnsureVisible" "', expected argument " "1"" of type '" "wxPropertyGridManager *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->EnsureVisible((wxPGPropArgCls const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_GetColumnCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  int arg2 = (int) -1 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "page", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:PropertyGridManager_GetColumnCount",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_GetColumnCount" "', expected argument " "1"" of type '" "wxPropertyGridManager const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  if (obj1) {
    ecode2 = SWIG_AsVal_int(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridManager_GetColumnCount" "', expected argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPropertyGridManager const *)arg1)->GetColumnCount(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_GetDescBoxHeight(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_GetDescBoxHeight" "', expected argument " "1"" of type '" "wxPropertyGridManager const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPropertyGridManager const *)arg1)->GetDescBoxHeight();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_GetGrid__SWIG_0(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  wxPropertyGrid *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_GetGrid" "', expected argument " "1"" of type '" "wxPropertyGridManager *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPropertyGrid *)(arg1)->GetGrid();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_GetGrid__SWIG_1(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  wxPropertyGrid *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_GetGrid" "', expected argument " "1"" of type '" "wxPropertyGridManager const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPropertyGrid *)((wxPropertyGridManager const *)arg1)->GetGrid();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPropertyGrid, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_GetGrid(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  
  if (!(argc = SWIG_Python_UnpackTuple(args,"PropertyGridManager_GetGrid",0,1,argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    return _wrap_PropertyGridManager_GetGrid__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    return _wrap_PropertyGridManager_GetGrid__SWIG_1(self, argc, argv);
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"No matching function for overloaded 'PropertyGridManager_GetGrid'");
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_GetIterator__SWIG_0(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  int arg2 = (int) wxPG_ITERATE_DEFAULT ;
  wxPGProperty *arg3 = (wxPGProperty *) NULL ;
  wxPropertyGridIterator result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_GetIterator" "', expected argument " "1"" of type '" "wxPropertyGridManager *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  if (swig_obj[1]) {
    ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridManager_GetIterator" "', expected argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
  }
  if (swig_obj[2]) {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_wxPGProperty, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PropertyGridManager_GetIterator" "', expected argument " "3"" of type '" "wxPGProperty *""'"); 
    }
    arg3 = reinterpret_cast< wxPGProperty * >(argp3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (arg1)->GetIterator(arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new wxPropertyGridIterator(static_cast< const wxPropertyGridIterator& >(result))), SWIGTYPE_p_wxPropertyGridIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_GetIterator__SWIG_1(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  int arg2 = (int) wxPG_ITERATE_DEFAULT ;
  wxPGProperty *arg3 = (wxPGProperty *) NULL ;
  wxPropertyGridConstIterator result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((nobjs < 1) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_GetIterator" "', expected argument " "1"" of type '" "wxPropertyGridManager const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  if (swig_obj[1]) {
    ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridManager_GetIterator" "', expected argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
  }
  if (swig_obj[2]) {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_wxPGProperty, 0 |  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PropertyGridManager_GetIterator" "', expected argument " "3"" of type '" "wxPGProperty *""'"); 
    }
    arg3 = reinterpret_cast< wxPGProperty * >(argp3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPropertyGridManager const *)arg1)->GetIterator(arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new wxPropertyGridConstIterator(static_cast< const wxPropertyGridConstIterator& >(result))), SWIGTYPE_p_wxPropertyGridConstIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_GetIterator__SWIG_2(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  int arg2 ;
  int arg3 ;
  wxPropertyGridIterator result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_GetIterator" "', expected argument " "1"" of type '" "wxPropertyGridManager *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridManager_GetIterator" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PropertyGridManager_GetIterator" "', expected argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (arg1)->GetIterator(arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new wxPropertyGridIterator(static_cast< const wxPropertyGridIterator& >(result))), SWIGTYPE_p_wxPropertyGridIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_GetIterator__SWIG_3(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  int arg2 ;
  int arg3 ;
  wxPropertyGridConstIterator result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_GetIterator" "', expected argument " "1"" of type '" "wxPropertyGridManager const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridManager_GetIterator" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PropertyGridManager_GetIterator" "', expected argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = ((wxPropertyGridManager const *)arg1)->GetIterator(arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj((new wxPropertyGridConstIterator(static_cast< const wxPropertyGridConstIterator& >(result))), SWIGTYPE_p_wxPropertyGridConstIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_GetIterator(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  
  if (!(argc = SWIG_Python_UnpackTuple(args,"PropertyGridManager_GetIterator",0,3,argv))) SWIG_fail;
  --argc;
  if ((argc >= 1) && (argc <= 3)) {
    int _v = 0;
    if (argc > 2) {
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_wxPGProperty, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
    }
    return _wrap_PropertyGridManager_GetIterator__SWIG_0(self, argc, argv);
  }
check_1:
  
  if ((argc >= 1) && (argc <= 3)) {
    int _v = 0;
    if (argc > 2) {
      {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_wxPGProperty, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_2;
    }
    return _wrap_PropertyGridManager_GetIterator__SWIG_1(self, argc, argv);
  }
check_2:
  
  if (argc == 3) {
    return _wrap_PropertyGridManager_GetIterator__SWIG_2(self, argc, argv);
  }
  if (argc == 3) {
    return _wrap_PropertyGridManager_GetIterator__SWIG_3(self, argc, argv);
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"No matching function for overloaded 'PropertyGridManager_GetIterator'");
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_GetCurrentPage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  wxPropertyGridPage *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_GetCurrentPage" "', expected argument " "1"" of type '" "wxPropertyGridManager const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPropertyGridPage *)((wxPropertyGridManager const *)arg1)->GetCurrentPage();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPropertyGridPage, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_GetPage__SWIG_0(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  int arg2 ;
  wxPropertyGridPage *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_GetPage" "', expected argument " "1"" of type '" "wxPropertyGridManager const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridManager_GetPage" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPropertyGridPage *)((wxPropertyGridManager const *)arg1)->GetPage(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPropertyGridPage, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_GetPage__SWIG_1(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  wxString *arg2 = 0 ;
  wxPropertyGridPage *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_GetPage" "', expected argument " "1"" of type '" "wxPropertyGridManager const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  {
    arg2 = wxString_in_helper(swig_obj[1]);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPropertyGridPage *)((wxPropertyGridManager const *)arg1)->GetPage((wxString const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPropertyGridPage, 0 |  0 );
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_GetPage(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  
  if (!(argc = SWIG_Python_UnpackTuple(args,"PropertyGridManager_GetPage",0,2,argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    {
      {
        _v = PyString_Check(argv[1]) || PyUnicode_Check(argv[1]);
      }
    }
    if (!_v) goto check_1;
    return _wrap_PropertyGridManager_GetPage__SWIG_1(self, argc, argv);
  }
check_1:
  
  if (argc == 2) {
    return _wrap_PropertyGridManager_GetPage__SWIG_0(self, argc, argv);
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"No matching function for overloaded 'PropertyGridManager_GetPage'");
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_GetPageByName(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  wxString *arg2 = 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "name", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridManager_GetPageByName",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_GetPageByName" "', expected argument " "1"" of type '" "wxPropertyGridManager const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  {
    arg2 = wxString_in_helper(obj1);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPropertyGridManager const *)arg1)->GetPageByName((wxString const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_GetPageByState(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  wxPropertyGridPageState *arg2 = (wxPropertyGridPageState *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "pstate", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridManager_GetPageByState",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_GetPageByState" "', expected argument " "1"" of type '" "wxPropertyGridManager const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxPropertyGridPageState, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PropertyGridManager_GetPageByState" "', expected argument " "2"" of type '" "wxPropertyGridPageState const *""'"); 
  }
  arg2 = reinterpret_cast< wxPropertyGridPageState * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPropertyGridManager const *)arg1)->GetPageByState((wxPropertyGridPageState const *)arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_GetPageCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  size_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_GetPageCount" "', expected argument " "1"" of type '" "wxPropertyGridManager const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (size_t)((wxPropertyGridManager const *)arg1)->GetPageCount();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_GetPageName(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  int arg2 ;
  wxString *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "index", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridManager_GetPageName",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_GetPageName" "', expected argument " "1"" of type '" "wxPropertyGridManager const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridManager_GetPageName" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    {
      wxString const &_result_ref = ((wxPropertyGridManager const *)arg1)->GetPageName(arg2);
      result = (wxString *) &_result_ref;
    }
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
#if wxUSE_UNICODE
    resultobj = PyUnicode_FromWideChar(result->c_str(), result->Len());
#else
    resultobj = PyString_FromStringAndSize(result->c_str(), result->Len());
#endif
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_GetPageRoot(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  int arg2 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "index", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridManager_GetPageRoot",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_GetPageRoot" "', expected argument " "1"" of type '" "wxPropertyGridManager const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridManager_GetPageRoot" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)((wxPropertyGridManager const *)arg1)->GetPageRoot(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_GetSelectedPage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_GetSelectedPage" "', expected argument " "1"" of type '" "wxPropertyGridManager const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (int)((wxPropertyGridManager const *)arg1)->GetSelectedPage();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_GetSelectedProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_GetSelectedProperty" "', expected argument " "1"" of type '" "wxPropertyGridManager const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)((wxPropertyGridManager const *)arg1)->GetSelectedProperty();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_GetSelection(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  wxPGProperty *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_GetSelection" "', expected argument " "1"" of type '" "wxPropertyGridManager const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)((wxPropertyGridManager const *)arg1)->GetSelection();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_GetToolBar(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  wxToolBar *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_GetToolBar" "', expected argument " "1"" of type '" "wxPropertyGridManager const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxToolBar *)((wxPropertyGridManager const *)arg1)->GetToolBar();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = wxPyMake_wxObject(result, (bool)0); 
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_InsertPage(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  int arg2 ;
  wxString *arg3 = 0 ;
  wxBitmap const &arg4_defvalue = wxNullBitmap ;
  wxBitmap *arg4 = (wxBitmap *) &arg4_defvalue ;
  wxPropertyGridPage *arg5 = (wxPropertyGridPage *) NULL ;
  wxPropertyGridPage *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool temp3 = false ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "index",(char *) "label",(char *) "bmp",(char *) "pageObj", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|OO:PropertyGridManager_InsertPage",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_InsertPage" "', expected argument " "1"" of type '" "wxPropertyGridManager *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridManager_InsertPage" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    arg3 = wxString_in_helper(obj2);
    if (arg3 == NULL) SWIG_fail;
    temp3 = true;
  }
  if (obj3) {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_wxBitmap,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "PropertyGridManager_InsertPage" "', expected argument " "4"" of type '" "wxBitmap const &""'"); 
    }
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PropertyGridManager_InsertPage" "', expected argument " "4"" of type '" "wxBitmap const &""'"); 
    }
    arg4 = reinterpret_cast< wxBitmap * >(argp4);
  }
  if (obj4) {
    res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_wxPropertyGridPage, 0 |  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "PropertyGridManager_InsertPage" "', expected argument " "5"" of type '" "wxPropertyGridPage *""'"); 
    }
    arg5 = reinterpret_cast< wxPropertyGridPage * >(argp5);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPropertyGridPage *)(arg1)->InsertPage(arg2,(wxString const &)*arg3,(wxBitmap const &)*arg4,arg5);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPropertyGridPage, 0 |  0 );
  {
    if (temp3)
    delete arg3;
  }
  return resultobj;
fail:
  {
    if (temp3)
    delete arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_IsAnyModified(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_IsAnyModified" "', expected argument " "1"" of type '" "wxPropertyGridManager const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPropertyGridManager const *)arg1)->IsAnyModified();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_IsFrozen(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_IsFrozen" "', expected argument " "1"" of type '" "wxPropertyGridManager const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPropertyGridManager const *)arg1)->IsFrozen();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_IsPageModified(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  size_t arg2 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "index", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridManager_IsPageModified",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_IsPageModified" "', expected argument " "1"" of type '" "wxPropertyGridManager const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridManager_IsPageModified" "', expected argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPropertyGridManager const *)arg1)->IsPageModified(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_IsPropertySelected(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridManager_IsPropertySelected",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_IsPropertySelected" "', expected argument " "1"" of type '" "wxPropertyGridManager const *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)((wxPropertyGridManager const *)arg1)->IsPropertySelected((wxPGPropArgCls const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_RemovePage(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  int arg2 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "page", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridManager_RemovePage",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_RemovePage" "', expected argument " "1"" of type '" "wxPropertyGridManager *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridManager_RemovePage" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->RemovePage(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_SelectPage__SWIG_0(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_SelectPage" "', expected argument " "1"" of type '" "wxPropertyGridManager *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridManager_SelectPage" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SelectPage(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_SelectPage__SWIG_1(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  wxString *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_SelectPage" "', expected argument " "1"" of type '" "wxPropertyGridManager *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  {
    arg2 = wxString_in_helper(swig_obj[1]);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SelectPage((wxString const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_SelectPage__SWIG_2(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  wxPropertyGridPage *arg2 = (wxPropertyGridPage *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_SelectPage" "', expected argument " "1"" of type '" "wxPropertyGridManager *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_wxPropertyGridPage, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PropertyGridManager_SelectPage" "', expected argument " "2"" of type '" "wxPropertyGridPage *""'"); 
  }
  arg2 = reinterpret_cast< wxPropertyGridPage * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SelectPage(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_SelectPage(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  
  if (!(argc = SWIG_Python_UnpackTuple(args,"PropertyGridManager_SelectPage",0,2,argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v = 0;
    {
      {
        _v = PyString_Check(argv[1]) || PyUnicode_Check(argv[1]);
      }
    }
    if (!_v) goto check_1;
    return _wrap_PropertyGridManager_SelectPage__SWIG_1(self, argc, argv);
  }
check_1:
  
  if (argc == 2) {
    int _v = 0;
    {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_wxPropertyGridPage, 0);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_2;
    return _wrap_PropertyGridManager_SelectPage__SWIG_2(self, argc, argv);
  }
check_2:
  
  if (argc == 2) {
    return _wrap_PropertyGridManager_SelectPage__SWIG_0(self, argc, argv);
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"No matching function for overloaded 'PropertyGridManager_SelectPage'");
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_SelectProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  wxPGPropArgCls *arg2 = 0 ;
  bool arg3 = (bool) false ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "id",(char *) "focus", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PropertyGridManager_SelectProperty",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_SelectProperty" "', expected argument " "1"" of type '" "wxPropertyGridManager *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  {
    if ( !PyObject_to_wxPGPropArgCls(obj1, &arg2) ) {
      PyErr_SetString(PyExc_TypeError,
        "this Python type cannot be converted to wxPGPropArgCls");
      SWIG_fail;
    }
  }
  if (obj2) {
    ecode3 = SWIG_AsVal_bool(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PropertyGridManager_SelectProperty" "', expected argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->SelectProperty((wxPGPropArgCls const &)*arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  {
    delete arg2;
  }
  return resultobj;
fail:
  {
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_SetColumnTitle(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  int arg2 ;
  wxString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool temp3 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "idx",(char *) "title", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PropertyGridManager_SetColumnTitle",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_SetColumnTitle" "', expected argument " "1"" of type '" "wxPropertyGridManager *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridManager_SetColumnTitle" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    arg3 = wxString_in_helper(obj2);
    if (arg3 == NULL) SWIG_fail;
    temp3 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetColumnTitle(arg2,(wxString const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    if (temp3)
    delete arg3;
  }
  return resultobj;
fail:
  {
    if (temp3)
    delete arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_SetColumnCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  int arg2 ;
  int arg3 = (int) -1 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "colCount",(char *) "page", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PropertyGridManager_SetColumnCount",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_SetColumnCount" "', expected argument " "1"" of type '" "wxPropertyGridManager *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridManager_SetColumnCount" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PropertyGridManager_SetColumnCount" "', expected argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetColumnCount(arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_SetDescription(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  wxString *arg2 = 0 ;
  wxString *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool temp2 = false ;
  bool temp3 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "label",(char *) "content", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:PropertyGridManager_SetDescription",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_SetDescription" "', expected argument " "1"" of type '" "wxPropertyGridManager *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  {
    arg2 = wxString_in_helper(obj1);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  {
    arg3 = wxString_in_helper(obj2);
    if (arg3 == NULL) SWIG_fail;
    temp3 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetDescription((wxString const &)*arg2,(wxString const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_SetDescBoxHeight(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  int arg2 ;
  bool arg3 = (bool) true ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ht",(char *) "refresh", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PropertyGridManager_SetDescBoxHeight",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_SetDescBoxHeight" "', expected argument " "1"" of type '" "wxPropertyGridManager *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridManager_SetDescBoxHeight" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (obj2) {
    ecode3 = SWIG_AsVal_bool(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PropertyGridManager_SetDescBoxHeight" "', expected argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetDescBoxHeight(arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_SetSplitterLeft(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  bool arg2 = (bool) false ;
  bool arg3 = (bool) true ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "subProps",(char *) "allPages", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|OO:PropertyGridManager_SetSplitterLeft",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_SetSplitterLeft" "', expected argument " "1"" of type '" "wxPropertyGridManager *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  if (obj1) {
    ecode2 = SWIG_AsVal_bool(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridManager_SetSplitterLeft" "', expected argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
  }
  if (obj2) {
    ecode3 = SWIG_AsVal_bool(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PropertyGridManager_SetSplitterLeft" "', expected argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetSplitterLeft(arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_SetPageSplitterPosition(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  int arg2 ;
  int arg3 ;
  int arg4 = (int) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "page",(char *) "pos",(char *) "column", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO|O:PropertyGridManager_SetPageSplitterPosition",kwnames,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_SetPageSplitterPosition" "', expected argument " "1"" of type '" "wxPropertyGridManager *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridManager_SetPageSplitterPosition" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PropertyGridManager_SetPageSplitterPosition" "', expected argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  if (obj3) {
    ecode4 = SWIG_AsVal_int(obj3, &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "PropertyGridManager_SetPageSplitterPosition" "', expected argument " "4"" of type '" "int""'");
    } 
    arg4 = static_cast< int >(val4);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetPageSplitterPosition(arg2,arg3,arg4);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_SetSplitterPosition(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  int arg2 ;
  int arg3 = (int) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "pos",(char *) "column", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:PropertyGridManager_SetSplitterPosition",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_SetSplitterPosition" "', expected argument " "1"" of type '" "wxPropertyGridManager *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridManager_SetSplitterPosition" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PropertyGridManager_SetSplitterPosition" "', expected argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetSplitterPosition(arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_SetId(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "winid", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridManager_SetId",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_SetId" "', expected argument " "1"" of type '" "wxPropertyGridManager *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PropertyGridManager_SetId" "', expected argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->SetId(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_Freeze(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_Freeze" "', expected argument " "1"" of type '" "wxPropertyGridManager *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->Freeze();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_Thaw(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_Thaw" "', expected argument " "1"" of type '" "wxPropertyGridManager *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->Thaw();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PropertyGridManager_Reparent(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPropertyGridManager *arg1 = (wxPropertyGridManager *) 0 ;
  wxWindowBase *arg2 = (wxWindowBase *) 0 ;
  bool result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "newParent", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PropertyGridManager_Reparent",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_wxPropertyGridManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PropertyGridManager_Reparent" "', expected argument " "1"" of type '" "wxPropertyGridManager *""'"); 
  }
  arg1 = reinterpret_cast< wxPropertyGridManager * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_wxWindowBase, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PropertyGridManager_Reparent" "', expected argument " "2"" of type '" "wxWindowBase *""'"); 
  }
  arg2 = reinterpret_cast< wxWindowBase * >(argp2);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (bool)(arg1)->Reparent(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  {
    resultobj = result ? Py_True : Py_False; Py_INCREF(resultobj);
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PropertyGridManager_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_wxPropertyGridManager, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PropertyGridManager_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_NewPropertyCategory(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  wxPGProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "name", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OO:NewPropertyCategory",kwnames,&obj0,&obj1)) SWIG_fail;
  if (obj0) {
    {
      arg1 = wxString_in_helper(obj0);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)NewPropertyCategory((wxString const &)*arg1,(wxString const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_NewStringProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  wxString const &arg3_defvalue = wxEmptyString ;
  wxString *arg3 = (wxString *) &arg3_defvalue ;
  wxPGProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  bool temp3 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "name",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOO:NewStringProperty",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  if (obj0) {
    {
      arg1 = wxString_in_helper(obj0);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (obj2) {
    {
      arg3 = wxString_in_helper(obj2);
      if (arg3 == NULL) SWIG_fail;
      temp3 = true;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)NewStringProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxString const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_NewUIntProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  long arg3 = (long) 0 ;
  wxPGProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  long val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "name",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOO:NewUIntProperty",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  if (obj0) {
    {
      arg1 = wxString_in_helper(obj0);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (obj2) {
    ecode3 = SWIG_AsVal_long(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "NewUIntProperty" "', expected argument " "3"" of type '" "long""'");
    } 
    arg3 = static_cast< long >(val3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)NewUIntProperty((wxString const &)*arg1,(wxString const &)*arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_NewIntProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  long arg3 = (long) 0 ;
  wxPGProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  long val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "name",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOO:NewIntProperty",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  if (obj0) {
    {
      arg1 = wxString_in_helper(obj0);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (obj2) {
    ecode3 = SWIG_AsVal_long(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "NewIntProperty" "', expected argument " "3"" of type '" "long""'");
    } 
    arg3 = static_cast< long >(val3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)NewIntProperty((wxString const &)*arg1,(wxString const &)*arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_NewFloatProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  double arg3 = (double) 0.0 ;
  wxPGProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "name",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOO:NewFloatProperty",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  if (obj0) {
    {
      arg1 = wxString_in_helper(obj0);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (obj2) {
    ecode3 = SWIG_AsVal_double(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "NewFloatProperty" "', expected argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)NewFloatProperty((wxString const &)*arg1,(wxString const &)*arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_NewBoolProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  bool arg3 = (bool) false ;
  wxPGProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "name",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOO:NewBoolProperty",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  if (obj0) {
    {
      arg1 = wxString_in_helper(obj0);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (obj2) {
    ecode3 = SWIG_AsVal_bool(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "NewBoolProperty" "', expected argument " "3"" of type '" "bool""'");
    } 
    arg3 = static_cast< bool >(val3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)NewBoolProperty((wxString const &)*arg1,(wxString const &)*arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_NewEnumProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  wxArrayString const &arg3_defvalue = wxArrayString() ;
  wxArrayString *arg3 = (wxArrayString *) &arg3_defvalue ;
  wxArrayInt const &arg4_defvalue = wxArrayInt() ;
  wxArrayInt *arg4 = (wxArrayInt *) &arg4_defvalue ;
  int arg5 = (int) 0 ;
  wxPGProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  bool temp3 = false ;
  bool temp4 = false ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "name",(char *) "labels",(char *) "values",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOOOO:NewEnumProperty",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  if (obj0) {
    {
      arg1 = wxString_in_helper(obj0);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (obj2) {
    {
      if (! PySequence_Check(obj2)) {
        PyErr_SetString(PyExc_TypeError, "Sequence of strings expected.");
        SWIG_fail;
      }
      arg3 = new wxArrayString;
      temp3 = true;
      int i, len=PySequence_Length(obj2);
      for (i=0; i<len; i++) {
        PyObject* item = PySequence_GetItem(obj2, i);
        wxString* s = wxString_in_helper(item);
        if (PyErr_Occurred())  SWIG_fail;
        arg3->Add(*s);
        delete s;
        Py_DECREF(item);
      }
    }
  }
  if (obj3) {
    {
      if (! PySequence_Check(obj3)) {
        PyErr_SetString(PyExc_TypeError, "Sequence of integers expected.");
        SWIG_fail;
      }
      arg4 = new wxArrayInt;
      temp4 = true;
      int i, len=PySequence_Length(obj3);
      for (i=0; i<len; i++) {
        PyObject* item = PySequence_GetItem(obj3, i);
        PyObject* number  = PyNumber_Int(item);
        if (!number) {
          PyErr_SetString(PyExc_TypeError, "Sequence of integers expected.");
          SWIG_fail;
        }       
        arg4->Add(PyInt_AS_LONG(number));
        Py_DECREF(item);
        Py_DECREF(number);
      }
    }
  }
  if (obj4) {
    ecode5 = SWIG_AsVal_int(obj4, &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "NewEnumProperty" "', expected argument " "5"" of type '" "int""'");
    } 
    arg5 = static_cast< int >(val5);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)NewEnumProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxArrayString const &)*arg3,(wxArrayInt const &)*arg4,arg5);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3) delete arg3;
  }
  {
    if (temp4) delete arg4;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3) delete arg3;
  }
  {
    if (temp4) delete arg4;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_NewEditEnumProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  wxArrayString const &arg3_defvalue = wxArrayString() ;
  wxArrayString *arg3 = (wxArrayString *) &arg3_defvalue ;
  wxArrayInt const &arg4_defvalue = wxArrayInt() ;
  wxArrayInt *arg4 = (wxArrayInt *) &arg4_defvalue ;
  wxString const &arg5_defvalue = wxEmptyString ;
  wxString *arg5 = (wxString *) &arg5_defvalue ;
  wxPGProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  bool temp3 = false ;
  bool temp4 = false ;
  bool temp5 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "name",(char *) "labels",(char *) "values",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOOOO:NewEditEnumProperty",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  if (obj0) {
    {
      arg1 = wxString_in_helper(obj0);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (obj2) {
    {
      if (! PySequence_Check(obj2)) {
        PyErr_SetString(PyExc_TypeError, "Sequence of strings expected.");
        SWIG_fail;
      }
      arg3 = new wxArrayString;
      temp3 = true;
      int i, len=PySequence_Length(obj2);
      for (i=0; i<len; i++) {
        PyObject* item = PySequence_GetItem(obj2, i);
        wxString* s = wxString_in_helper(item);
        if (PyErr_Occurred())  SWIG_fail;
        arg3->Add(*s);
        delete s;
        Py_DECREF(item);
      }
    }
  }
  if (obj3) {
    {
      if (! PySequence_Check(obj3)) {
        PyErr_SetString(PyExc_TypeError, "Sequence of integers expected.");
        SWIG_fail;
      }
      arg4 = new wxArrayInt;
      temp4 = true;
      int i, len=PySequence_Length(obj3);
      for (i=0; i<len; i++) {
        PyObject* item = PySequence_GetItem(obj3, i);
        PyObject* number  = PyNumber_Int(item);
        if (!number) {
          PyErr_SetString(PyExc_TypeError, "Sequence of integers expected.");
          SWIG_fail;
        }       
        arg4->Add(PyInt_AS_LONG(number));
        Py_DECREF(item);
        Py_DECREF(number);
      }
    }
  }
  if (obj4) {
    {
      arg5 = wxString_in_helper(obj4);
      if (arg5 == NULL) SWIG_fail;
      temp5 = true;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)NewEditEnumProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxArrayString const &)*arg3,(wxArrayInt const &)*arg4,(wxString const &)*arg5);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3) delete arg3;
  }
  {
    if (temp4) delete arg4;
  }
  {
    if (temp5)
    delete arg5;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3) delete arg3;
  }
  {
    if (temp4) delete arg4;
  }
  {
    if (temp5)
    delete arg5;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_NewFlagsProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  wxArrayString const &arg3_defvalue = wxArrayString() ;
  wxArrayString *arg3 = (wxArrayString *) &arg3_defvalue ;
  wxArrayInt const &arg4_defvalue = wxArrayInt() ;
  wxArrayInt *arg4 = (wxArrayInt *) &arg4_defvalue ;
  int arg5 = (int) 0 ;
  wxPGProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  bool temp3 = false ;
  bool temp4 = false ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "name",(char *) "labels",(char *) "values",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOOOO:NewFlagsProperty",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  if (obj0) {
    {
      arg1 = wxString_in_helper(obj0);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (obj2) {
    {
      if (! PySequence_Check(obj2)) {
        PyErr_SetString(PyExc_TypeError, "Sequence of strings expected.");
        SWIG_fail;
      }
      arg3 = new wxArrayString;
      temp3 = true;
      int i, len=PySequence_Length(obj2);
      for (i=0; i<len; i++) {
        PyObject* item = PySequence_GetItem(obj2, i);
        wxString* s = wxString_in_helper(item);
        if (PyErr_Occurred())  SWIG_fail;
        arg3->Add(*s);
        delete s;
        Py_DECREF(item);
      }
    }
  }
  if (obj3) {
    {
      if (! PySequence_Check(obj3)) {
        PyErr_SetString(PyExc_TypeError, "Sequence of integers expected.");
        SWIG_fail;
      }
      arg4 = new wxArrayInt;
      temp4 = true;
      int i, len=PySequence_Length(obj3);
      for (i=0; i<len; i++) {
        PyObject* item = PySequence_GetItem(obj3, i);
        PyObject* number  = PyNumber_Int(item);
        if (!number) {
          PyErr_SetString(PyExc_TypeError, "Sequence of integers expected.");
          SWIG_fail;
        }       
        arg4->Add(PyInt_AS_LONG(number));
        Py_DECREF(item);
        Py_DECREF(number);
      }
    }
  }
  if (obj4) {
    ecode5 = SWIG_AsVal_int(obj4, &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "NewFlagsProperty" "', expected argument " "5"" of type '" "int""'");
    } 
    arg5 = static_cast< int >(val5);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)NewFlagsProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxArrayString const &)*arg3,(wxArrayInt const &)*arg4,arg5);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3) delete arg3;
  }
  {
    if (temp4) delete arg4;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3) delete arg3;
  }
  {
    if (temp4) delete arg4;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_NewLongStringProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  wxString const &arg3_defvalue = wxEmptyString ;
  wxString *arg3 = (wxString *) &arg3_defvalue ;
  wxPGProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  bool temp3 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "name",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOO:NewLongStringProperty",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  if (obj0) {
    {
      arg1 = wxString_in_helper(obj0);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (obj2) {
    {
      arg3 = wxString_in_helper(obj2);
      if (arg3 == NULL) SWIG_fail;
      temp3 = true;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)NewLongStringProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxString const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_NewFileProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  wxString const &arg3_defvalue = wxEmptyString ;
  wxString *arg3 = (wxString *) &arg3_defvalue ;
  wxPGProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  bool temp3 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "name",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOO:NewFileProperty",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  if (obj0) {
    {
      arg1 = wxString_in_helper(obj0);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (obj2) {
    {
      arg3 = wxString_in_helper(obj2);
      if (arg3 == NULL) SWIG_fail;
      temp3 = true;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)NewFileProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxString const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_NewDirProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  wxString const &arg3_defvalue = wxEmptyString ;
  wxString *arg3 = (wxString *) &arg3_defvalue ;
  wxPGProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  bool temp3 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "name",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOO:NewDirProperty",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  if (obj0) {
    {
      arg1 = wxString_in_helper(obj0);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (obj2) {
    {
      arg3 = wxString_in_helper(obj2);
      if (arg3 == NULL) SWIG_fail;
      temp3 = true;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)NewDirProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxString const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_NewArrayStringProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  wxArrayString const &arg3_defvalue = wxArrayString() ;
  wxArrayString *arg3 = (wxArrayString *) &arg3_defvalue ;
  wxPGProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  bool temp3 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "name",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOO:NewArrayStringProperty",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  if (obj0) {
    {
      arg1 = wxString_in_helper(obj0);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (obj2) {
    {
      if (! PySequence_Check(obj2)) {
        PyErr_SetString(PyExc_TypeError, "Sequence of strings expected.");
        SWIG_fail;
      }
      arg3 = new wxArrayString;
      temp3 = true;
      int i, len=PySequence_Length(obj2);
      for (i=0; i<len; i++) {
        PyObject* item = PySequence_GetItem(obj2, i);
        wxString* s = wxString_in_helper(item);
        if (PyErr_Occurred())  SWIG_fail;
        arg3->Add(*s);
        delete s;
        Py_DECREF(item);
      }
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)NewArrayStringProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxArrayString const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3) delete arg3;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3) delete arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_NewFontProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  wxFont const &arg3_defvalue = wxFont() ;
  wxFont *arg3 = (wxFont *) &arg3_defvalue ;
  wxPGProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "name",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOO:NewFontProperty",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  if (obj0) {
    {
      arg1 = wxString_in_helper(obj0);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (obj2) {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_wxFont,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "NewFontProperty" "', expected argument " "3"" of type '" "wxFont const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "NewFontProperty" "', expected argument " "3"" of type '" "wxFont const &""'"); 
    }
    arg3 = reinterpret_cast< wxFont * >(argp3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)NewFontProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxFont const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_NewSystemColourProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  wxColourPropertyValue const &arg3_defvalue = wxColourPropertyValue() ;
  wxColourPropertyValue *arg3 = (wxColourPropertyValue *) &arg3_defvalue ;
  wxPGProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "name",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOO:NewSystemColourProperty",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  if (obj0) {
    {
      arg1 = wxString_in_helper(obj0);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (obj2) {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_wxColourPropertyValue,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "NewSystemColourProperty" "', expected argument " "3"" of type '" "wxColourPropertyValue const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "NewSystemColourProperty" "', expected argument " "3"" of type '" "wxColourPropertyValue const &""'"); 
    }
    arg3 = reinterpret_cast< wxColourPropertyValue * >(argp3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)NewSystemColourProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxColourPropertyValue const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_NewColourProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  wxColour const &arg3_defvalue = wxColour() ;
  wxColour *arg3 = (wxColour *) &arg3_defvalue ;
  wxPGProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  wxColour temp3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "name",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOO:NewColourProperty",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  if (obj0) {
    {
      arg1 = wxString_in_helper(obj0);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (obj2) {
    {
      arg3 = &temp3;
      if ( ! wxColour_helper(obj2, &arg3)) SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)NewColourProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxColour const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_NewCursorProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  int arg3 = (int) 0 ;
  wxPGProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "name",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOO:NewCursorProperty",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  if (obj0) {
    {
      arg1 = wxString_in_helper(obj0);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "NewCursorProperty" "', expected argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)NewCursorProperty((wxString const &)*arg1,(wxString const &)*arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_NewImageFileProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  wxString const &arg3_defvalue = wxEmptyString ;
  wxString *arg3 = (wxString *) &arg3_defvalue ;
  wxPGProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  bool temp3 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "name",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOO:NewImageFileProperty",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  if (obj0) {
    {
      arg1 = wxString_in_helper(obj0);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (obj2) {
    {
      arg3 = wxString_in_helper(obj2);
      if (arg3 == NULL) SWIG_fail;
      temp3 = true;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)NewImageFileProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxString const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_NewMultiChoiceProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString *arg1 = 0 ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  wxArrayString const &arg3_defvalue = wxArrayString() ;
  wxArrayString *arg3 = (wxArrayString *) &arg3_defvalue ;
  wxArrayString const &arg4_defvalue = wxArrayString() ;
  wxArrayString *arg4 = (wxArrayString *) &arg4_defvalue ;
  wxPGProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  bool temp3 = false ;
  bool temp4 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "name",(char *) "choices",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|OOO:NewMultiChoiceProperty",kwnames,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  {
    arg1 = wxString_in_helper(obj0);
    if (arg1 == NULL) SWIG_fail;
    temp1 = true;
  }
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (obj2) {
    {
      if (! PySequence_Check(obj2)) {
        PyErr_SetString(PyExc_TypeError, "Sequence of strings expected.");
        SWIG_fail;
      }
      arg3 = new wxArrayString;
      temp3 = true;
      int i, len=PySequence_Length(obj2);
      for (i=0; i<len; i++) {
        PyObject* item = PySequence_GetItem(obj2, i);
        wxString* s = wxString_in_helper(item);
        if (PyErr_Occurred())  SWIG_fail;
        arg3->Add(*s);
        delete s;
        Py_DECREF(item);
      }
    }
  }
  if (obj3) {
    {
      if (! PySequence_Check(obj3)) {
        PyErr_SetString(PyExc_TypeError, "Sequence of strings expected.");
        SWIG_fail;
      }
      arg4 = new wxArrayString;
      temp4 = true;
      int i, len=PySequence_Length(obj3);
      for (i=0; i<len; i++) {
        PyObject* item = PySequence_GetItem(obj3, i);
        wxString* s = wxString_in_helper(item);
        if (PyErr_Occurred())  SWIG_fail;
        arg4->Add(*s);
        delete s;
        Py_DECREF(item);
      }
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)NewMultiChoiceProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxArrayString const &)*arg3,(wxArrayString const &)*arg4);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3) delete arg3;
  }
  {
    if (temp4) delete arg4;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3) delete arg3;
  }
  {
    if (temp4) delete arg4;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_NewDateProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  wxDateTime const &arg3_defvalue = wxDateTime() ;
  wxDateTime *arg3 = (wxDateTime *) &arg3_defvalue ;
  wxPGProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "name",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOO:NewDateProperty",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  if (obj0) {
    {
      arg1 = wxString_in_helper(obj0);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (obj2) {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_wxDateTime,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "NewDateProperty" "', expected argument " "3"" of type '" "wxDateTime const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "NewDateProperty" "', expected argument " "3"" of type '" "wxDateTime const &""'"); 
    }
    arg3 = reinterpret_cast< wxDateTime * >(argp3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (wxPGProperty *)NewDateProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxDateTime const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_wxPGProperty, 0 |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PyFloatProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  double arg3 = (double) 0.0 ;
  PyFloatProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  double val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "name",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOO:new_PyFloatProperty",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  if (obj0) {
    {
      arg1 = wxString_in_helper(obj0);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (obj2) {
    ecode3 = SWIG_AsVal_double(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_PyFloatProperty" "', expected argument " "3"" of type '" "double""'");
    } 
    arg3 = static_cast< double >(val3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (PyFloatProperty *)new PyFloatProperty((wxString const &)*arg1,(wxString const &)*arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PyFloatProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PyFloatProperty__SetSelf(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  PyFloatProperty *arg1 = (PyFloatProperty *) 0 ;
  PyObject *arg2 = (PyObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "self", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyFloatProperty__SetSelf",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PyFloatProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PyFloatProperty__SetSelf" "', expected argument " "1"" of type '" "PyFloatProperty *""'"); 
  }
  arg1 = reinterpret_cast< PyFloatProperty * >(argp1);
  arg2 = obj1;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->_SetSelf(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PyFloatProperty_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_PyFloatProperty, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PyFloatProperty_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_PyEditorDialogAdapter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyEditorDialogAdapter *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args,"new_PyEditorDialogAdapter",0,0,0)) SWIG_fail;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (PyEditorDialogAdapter *)new PyEditorDialogAdapter();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PyEditorDialogAdapter, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PyEditorDialogAdapter__SetSelf(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  PyEditorDialogAdapter *arg1 = (PyEditorDialogAdapter *) 0 ;
  PyObject *arg2 = (PyObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "self", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyEditorDialogAdapter__SetSelf",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PyEditorDialogAdapter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PyEditorDialogAdapter__SetSelf" "', expected argument " "1"" of type '" "PyEditorDialogAdapter *""'"); 
  }
  arg1 = reinterpret_cast< PyEditorDialogAdapter * >(argp1);
  arg2 = obj1;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->_SetSelf(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PyEditorDialogAdapter_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_PyEditorDialogAdapter, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PyEditorDialogAdapter_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_PyEnumProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  wxArrayString const &arg3_defvalue = wxArrayString() ;
  wxArrayString *arg3 = (wxArrayString *) &arg3_defvalue ;
  wxArrayInt const &arg4_defvalue = wxArrayInt() ;
  wxArrayInt *arg4 = (wxArrayInt *) &arg4_defvalue ;
  int arg5 = (int) 0 ;
  PyEnumProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  bool temp3 = false ;
  bool temp4 = false ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "name",(char *) "labels",(char *) "values",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOOOO:new_PyEnumProperty",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  if (obj0) {
    {
      arg1 = wxString_in_helper(obj0);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (obj2) {
    {
      if (! PySequence_Check(obj2)) {
        PyErr_SetString(PyExc_TypeError, "Sequence of strings expected.");
        SWIG_fail;
      }
      arg3 = new wxArrayString;
      temp3 = true;
      int i, len=PySequence_Length(obj2);
      for (i=0; i<len; i++) {
        PyObject* item = PySequence_GetItem(obj2, i);
        wxString* s = wxString_in_helper(item);
        if (PyErr_Occurred())  SWIG_fail;
        arg3->Add(*s);
        delete s;
        Py_DECREF(item);
      }
    }
  }
  if (obj3) {
    {
      if (! PySequence_Check(obj3)) {
        PyErr_SetString(PyExc_TypeError, "Sequence of integers expected.");
        SWIG_fail;
      }
      arg4 = new wxArrayInt;
      temp4 = true;
      int i, len=PySequence_Length(obj3);
      for (i=0; i<len; i++) {
        PyObject* item = PySequence_GetItem(obj3, i);
        PyObject* number  = PyNumber_Int(item);
        if (!number) {
          PyErr_SetString(PyExc_TypeError, "Sequence of integers expected.");
          SWIG_fail;
        }       
        arg4->Add(PyInt_AS_LONG(number));
        Py_DECREF(item);
        Py_DECREF(number);
      }
    }
  }
  if (obj4) {
    ecode5 = SWIG_AsVal_int(obj4, &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_PyEnumProperty" "', expected argument " "5"" of type '" "int""'");
    } 
    arg5 = static_cast< int >(val5);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (PyEnumProperty *)new PyEnumProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxArrayString const &)*arg3,(wxArrayInt const &)*arg4,arg5);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PyEnumProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3) delete arg3;
  }
  {
    if (temp4) delete arg4;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3) delete arg3;
  }
  {
    if (temp4) delete arg4;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PyEnumProperty__SetSelf(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  PyEnumProperty *arg1 = (PyEnumProperty *) 0 ;
  PyObject *arg2 = (PyObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "self", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyEnumProperty__SetSelf",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PyEnumProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PyEnumProperty__SetSelf" "', expected argument " "1"" of type '" "PyEnumProperty *""'"); 
  }
  arg1 = reinterpret_cast< PyEnumProperty * >(argp1);
  arg2 = obj1;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->_SetSelf(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PyEnumProperty_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_PyEnumProperty, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PyEnumProperty_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_PyArrayStringProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  wxArrayString const &arg3_defvalue = wxArrayString() ;
  wxArrayString *arg3 = (wxArrayString *) &arg3_defvalue ;
  PyArrayStringProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  bool temp3 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "name",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOO:new_PyArrayStringProperty",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  if (obj0) {
    {
      arg1 = wxString_in_helper(obj0);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (obj2) {
    {
      if (! PySequence_Check(obj2)) {
        PyErr_SetString(PyExc_TypeError, "Sequence of strings expected.");
        SWIG_fail;
      }
      arg3 = new wxArrayString;
      temp3 = true;
      int i, len=PySequence_Length(obj2);
      for (i=0; i<len; i++) {
        PyObject* item = PySequence_GetItem(obj2, i);
        wxString* s = wxString_in_helper(item);
        if (PyErr_Occurred())  SWIG_fail;
        arg3->Add(*s);
        delete s;
        Py_DECREF(item);
      }
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (PyArrayStringProperty *)new PyArrayStringProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxArrayString const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PyArrayStringProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3) delete arg3;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3) delete arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PyArrayStringProperty__SetSelf(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  PyArrayStringProperty *arg1 = (PyArrayStringProperty *) 0 ;
  PyObject *arg2 = (PyObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "self", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyArrayStringProperty__SetSelf",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PyArrayStringProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PyArrayStringProperty__SetSelf" "', expected argument " "1"" of type '" "PyArrayStringProperty *""'"); 
  }
  arg1 = reinterpret_cast< PyArrayStringProperty * >(argp1);
  arg2 = obj1;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->_SetSelf(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PyArrayStringProperty_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_PyArrayStringProperty, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PyArrayStringProperty_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_PyComboBoxEditor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyComboBoxEditor *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args,"new_PyComboBoxEditor",0,0,0)) SWIG_fail;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (PyComboBoxEditor *)new PyComboBoxEditor();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PyComboBoxEditor, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PyComboBoxEditor__SetSelf(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  PyComboBoxEditor *arg1 = (PyComboBoxEditor *) 0 ;
  PyObject *arg2 = (PyObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "self", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyComboBoxEditor__SetSelf",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PyComboBoxEditor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PyComboBoxEditor__SetSelf" "', expected argument " "1"" of type '" "PyComboBoxEditor *""'"); 
  }
  arg1 = reinterpret_cast< PyComboBoxEditor * >(argp1);
  arg2 = obj1;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->_SetSelf(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PyComboBoxEditor_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_PyComboBoxEditor, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PyComboBoxEditor_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_PyFileDialogAdapter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyFileDialogAdapter *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args,"new_PyFileDialogAdapter",0,0,0)) SWIG_fail;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (PyFileDialogAdapter *)new PyFileDialogAdapter();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PyFileDialogAdapter, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PyFileDialogAdapter__SetSelf(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  PyFileDialogAdapter *arg1 = (PyFileDialogAdapter *) 0 ;
  PyObject *arg2 = (PyObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "self", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyFileDialogAdapter__SetSelf",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PyFileDialogAdapter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PyFileDialogAdapter__SetSelf" "', expected argument " "1"" of type '" "PyFileDialogAdapter *""'"); 
  }
  arg1 = reinterpret_cast< PyFileDialogAdapter * >(argp1);
  arg2 = obj1;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->_SetSelf(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PyFileDialogAdapter_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_PyFileDialogAdapter, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PyFileDialogAdapter_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_PyStringProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  wxString const &arg3_defvalue = wxEmptyString ;
  wxString *arg3 = (wxString *) &arg3_defvalue ;
  PyStringProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  bool temp3 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "name",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOO:new_PyStringProperty",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  if (obj0) {
    {
      arg1 = wxString_in_helper(obj0);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (obj2) {
    {
      arg3 = wxString_in_helper(obj2);
      if (arg3 == NULL) SWIG_fail;
      temp3 = true;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (PyStringProperty *)new PyStringProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxString const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PyStringProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PyStringProperty__SetSelf(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  PyStringProperty *arg1 = (PyStringProperty *) 0 ;
  PyObject *arg2 = (PyObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "self", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyStringProperty__SetSelf",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PyStringProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PyStringProperty__SetSelf" "', expected argument " "1"" of type '" "PyStringProperty *""'"); 
  }
  arg1 = reinterpret_cast< PyStringProperty * >(argp1);
  arg2 = obj1;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->_SetSelf(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PyStringProperty_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_PyStringProperty, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PyStringProperty_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_PyLongStringDialogAdapter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyLongStringDialogAdapter *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args,"new_PyLongStringDialogAdapter",0,0,0)) SWIG_fail;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (PyLongStringDialogAdapter *)new PyLongStringDialogAdapter();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PyLongStringDialogAdapter, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PyLongStringDialogAdapter__SetSelf(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  PyLongStringDialogAdapter *arg1 = (PyLongStringDialogAdapter *) 0 ;
  PyObject *arg2 = (PyObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "self", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyLongStringDialogAdapter__SetSelf",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PyLongStringDialogAdapter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PyLongStringDialogAdapter__SetSelf" "', expected argument " "1"" of type '" "PyLongStringDialogAdapter *""'"); 
  }
  arg1 = reinterpret_cast< PyLongStringDialogAdapter * >(argp1);
  arg2 = obj1;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->_SetSelf(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PyLongStringDialogAdapter_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_PyLongStringDialogAdapter, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PyLongStringDialogAdapter_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_PyEditEnumProperty__SWIG_0(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxString *arg1 = 0 ;
  wxString *arg2 = 0 ;
  wxChar **arg3 = (wxChar **) 0 ;
  long *arg4 = (long *) 0 ;
  wxString *arg5 = 0 ;
  PyEditEnumProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  bool temp5 = false ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  {
    arg1 = wxString_in_helper(swig_obj[0]);
    if (arg1 == NULL) SWIG_fail;
    temp1 = true;
  }
  {
    arg2 = wxString_in_helper(swig_obj[1]);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_p_wxChar, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_PyEditEnumProperty" "', expected argument " "3"" of type '" "wxChar const *const *""'"); 
  }
  arg3 = reinterpret_cast< wxChar ** >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_long, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_PyEditEnumProperty" "', expected argument " "4"" of type '" "long const *""'"); 
  }
  arg4 = reinterpret_cast< long * >(argp4);
  {
    arg5 = wxString_in_helper(swig_obj[4]);
    if (arg5 == NULL) SWIG_fail;
    temp5 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (PyEditEnumProperty *)new PyEditEnumProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxChar const *const *)arg3,(long const *)arg4,(wxString const &)*arg5);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PyEditEnumProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp5)
    delete arg5;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp5)
    delete arg5;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PyEditEnumProperty__SWIG_1(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  wxArrayString const &arg3_defvalue = wxArrayString() ;
  wxArrayString *arg3 = (wxArrayString *) &arg3_defvalue ;
  wxArrayInt const &arg4_defvalue = wxArrayInt() ;
  wxArrayInt *arg4 = (wxArrayInt *) &arg4_defvalue ;
  wxString const &arg5_defvalue = wxEmptyString ;
  wxString *arg5 = (wxString *) &arg5_defvalue ;
  PyEditEnumProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  bool temp3 = false ;
  bool temp4 = false ;
  bool temp5 = false ;
  
  if ((nobjs < 0) || (nobjs > 5)) SWIG_fail;
  if (swig_obj[0]) {
    {
      arg1 = wxString_in_helper(swig_obj[0]);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (swig_obj[1]) {
    {
      arg2 = wxString_in_helper(swig_obj[1]);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (swig_obj[2]) {
    {
      if (! PySequence_Check(swig_obj[2])) {
        PyErr_SetString(PyExc_TypeError, "Sequence of strings expected.");
        SWIG_fail;
      }
      arg3 = new wxArrayString;
      temp3 = true;
      int i, len=PySequence_Length(swig_obj[2]);
      for (i=0; i<len; i++) {
        PyObject* item = PySequence_GetItem(swig_obj[2], i);
        wxString* s = wxString_in_helper(item);
        if (PyErr_Occurred())  SWIG_fail;
        arg3->Add(*s);
        delete s;
        Py_DECREF(item);
      }
    }
  }
  if (swig_obj[3]) {
    {
      if (! PySequence_Check(swig_obj[3])) {
        PyErr_SetString(PyExc_TypeError, "Sequence of integers expected.");
        SWIG_fail;
      }
      arg4 = new wxArrayInt;
      temp4 = true;
      int i, len=PySequence_Length(swig_obj[3]);
      for (i=0; i<len; i++) {
        PyObject* item = PySequence_GetItem(swig_obj[3], i);
        PyObject* number  = PyNumber_Int(item);
        if (!number) {
          PyErr_SetString(PyExc_TypeError, "Sequence of integers expected.");
          SWIG_fail;
        }       
        arg4->Add(PyInt_AS_LONG(number));
        Py_DECREF(item);
        Py_DECREF(number);
      }
    }
  }
  if (swig_obj[4]) {
    {
      arg5 = wxString_in_helper(swig_obj[4]);
      if (arg5 == NULL) SWIG_fail;
      temp5 = true;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (PyEditEnumProperty *)new PyEditEnumProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxArrayString const &)*arg3,(wxArrayInt const &)*arg4,(wxString const &)*arg5);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PyEditEnumProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3) delete arg3;
  }
  {
    if (temp4) delete arg4;
  }
  {
    if (temp5)
    delete arg5;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3) delete arg3;
  }
  {
    if (temp4) delete arg4;
  }
  {
    if (temp5)
    delete arg5;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PyEditEnumProperty__SWIG_2(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxString *arg1 = 0 ;
  wxString *arg2 = 0 ;
  wxPGChoices *arg3 = 0 ;
  wxString const &arg4_defvalue = wxEmptyString ;
  wxString *arg4 = (wxString *) &arg4_defvalue ;
  PyEditEnumProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  bool temp4 = false ;
  
  if ((nobjs < 3) || (nobjs > 4)) SWIG_fail;
  {
    arg1 = wxString_in_helper(swig_obj[0]);
    if (arg1 == NULL) SWIG_fail;
    temp1 = true;
  }
  {
    arg2 = wxString_in_helper(swig_obj[1]);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_wxPGChoices,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_PyEditEnumProperty" "', expected argument " "3"" of type '" "wxPGChoices &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_PyEditEnumProperty" "', expected argument " "3"" of type '" "wxPGChoices &""'"); 
  }
  arg3 = reinterpret_cast< wxPGChoices * >(argp3);
  if (swig_obj[3]) {
    {
      arg4 = wxString_in_helper(swig_obj[3]);
      if (arg4 == NULL) SWIG_fail;
      temp4 = true;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (PyEditEnumProperty *)new PyEditEnumProperty((wxString const &)*arg1,(wxString const &)*arg2,*arg3,(wxString const &)*arg4);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PyEditEnumProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp4)
    delete arg4;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp4)
    delete arg4;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PyEditEnumProperty__SWIG_3(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxString *arg1 = 0 ;
  wxString *arg2 = 0 ;
  wxChar **arg3 = (wxChar **) 0 ;
  long *arg4 = (long *) 0 ;
  wxPGChoices *arg5 = (wxPGChoices *) 0 ;
  wxString *arg6 = 0 ;
  PyEditEnumProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  bool temp6 = false ;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  {
    arg1 = wxString_in_helper(swig_obj[0]);
    if (arg1 == NULL) SWIG_fail;
    temp1 = true;
  }
  {
    arg2 = wxString_in_helper(swig_obj[1]);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_p_wxChar, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_PyEditEnumProperty" "', expected argument " "3"" of type '" "wxChar const *const *""'"); 
  }
  arg3 = reinterpret_cast< wxChar ** >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_long, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_PyEditEnumProperty" "', expected argument " "4"" of type '" "long const *""'"); 
  }
  arg4 = reinterpret_cast< long * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5,SWIGTYPE_p_wxPGChoices, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_PyEditEnumProperty" "', expected argument " "5"" of type '" "wxPGChoices *""'"); 
  }
  arg5 = reinterpret_cast< wxPGChoices * >(argp5);
  {
    arg6 = wxString_in_helper(swig_obj[5]);
    if (arg6 == NULL) SWIG_fail;
    temp6 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (PyEditEnumProperty *)new PyEditEnumProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxChar const *const *)arg3,(long const *)arg4,arg5,(wxString const &)*arg6);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PyEditEnumProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp6)
    delete arg6;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp6)
    delete arg6;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PyEditEnumProperty(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[7];
  
  if (!(argc = SWIG_Python_UnpackTuple(args,"new_PyEditEnumProperty",0,6,argv))) SWIG_fail;
  --argc;
  if ((argc >= 0) && (argc <= 5)) {
    int _v = 0;
    if (argc > 2) {
      {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_wxArrayString, 0);
        _v = SWIG_CheckState(res);
      }
      if (!_v) goto check_1;
      if (argc > 3) {
        {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_wxArrayInt, 0);
          _v = SWIG_CheckState(res);
        }
        if (!_v) goto check_1;
      }
    }
    return _wrap_new_PyEditEnumProperty__SWIG_1(self, argc, argv);
  }
check_1:
  
  if ((argc >= 3) && (argc <= 4)) {
    return _wrap_new_PyEditEnumProperty__SWIG_2(self, argc, argv);
  }
  if (argc == 5) {
    return _wrap_new_PyEditEnumProperty__SWIG_0(self, argc, argv);
  }
  if (argc == 6) {
    return _wrap_new_PyEditEnumProperty__SWIG_3(self, argc, argv);
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"No matching function for overloaded 'new_PyEditEnumProperty'");
  return NULL;
}


SWIGINTERN PyObject *_wrap_PyEditEnumProperty__SetSelf(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  PyEditEnumProperty *arg1 = (PyEditEnumProperty *) 0 ;
  PyObject *arg2 = (PyObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "self", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyEditEnumProperty__SetSelf",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PyEditEnumProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PyEditEnumProperty__SetSelf" "', expected argument " "1"" of type '" "PyEditEnumProperty *""'"); 
  }
  arg1 = reinterpret_cast< PyEditEnumProperty * >(argp1);
  arg2 = obj1;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->_SetSelf(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PyEditEnumProperty_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_PyEditEnumProperty, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PyEditEnumProperty_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_PyTextCtrlEditor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyTextCtrlEditor *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args,"new_PyTextCtrlEditor",0,0,0)) SWIG_fail;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (PyTextCtrlEditor *)new PyTextCtrlEditor();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PyTextCtrlEditor, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PyTextCtrlEditor__SetSelf(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  PyTextCtrlEditor *arg1 = (PyTextCtrlEditor *) 0 ;
  PyObject *arg2 = (PyObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "self", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyTextCtrlEditor__SetSelf",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PyTextCtrlEditor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PyTextCtrlEditor__SetSelf" "', expected argument " "1"" of type '" "PyTextCtrlEditor *""'"); 
  }
  arg1 = reinterpret_cast< PyTextCtrlEditor * >(argp1);
  arg2 = obj1;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->_SetSelf(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PyTextCtrlEditor_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_PyTextCtrlEditor, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PyTextCtrlEditor_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_PySystemColourProperty__SWIG_0(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  wxColourPropertyValue const &arg3_defvalue = wxColourPropertyValue() ;
  wxColourPropertyValue *arg3 = (wxColourPropertyValue *) &arg3_defvalue ;
  PySystemColourProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((nobjs < 0) || (nobjs > 3)) SWIG_fail;
  if (swig_obj[0]) {
    {
      arg1 = wxString_in_helper(swig_obj[0]);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (swig_obj[1]) {
    {
      arg2 = wxString_in_helper(swig_obj[1]);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (swig_obj[2]) {
    res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_wxColourPropertyValue,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_PySystemColourProperty" "', expected argument " "3"" of type '" "wxColourPropertyValue const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_PySystemColourProperty" "', expected argument " "3"" of type '" "wxColourPropertyValue const &""'"); 
    }
    arg3 = reinterpret_cast< wxColourPropertyValue * >(argp3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (PySystemColourProperty *)new PySystemColourProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxColourPropertyValue const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PySystemColourProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PySystemColourProperty__SWIG_1(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxString *arg1 = 0 ;
  wxString *arg2 = 0 ;
  wxChar **arg3 = (wxChar **) 0 ;
  long *arg4 = (long *) 0 ;
  wxPGChoices *arg5 = (wxPGChoices *) 0 ;
  wxColourPropertyValue *arg6 = 0 ;
  PySystemColourProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  {
    arg1 = wxString_in_helper(swig_obj[0]);
    if (arg1 == NULL) SWIG_fail;
    temp1 = true;
  }
  {
    arg2 = wxString_in_helper(swig_obj[1]);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_p_wxChar, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_PySystemColourProperty" "', expected argument " "3"" of type '" "wxChar const *const *""'"); 
  }
  arg3 = reinterpret_cast< wxChar ** >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_long, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_PySystemColourProperty" "', expected argument " "4"" of type '" "long const *""'"); 
  }
  arg4 = reinterpret_cast< long * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5,SWIGTYPE_p_wxPGChoices, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_PySystemColourProperty" "', expected argument " "5"" of type '" "wxPGChoices *""'"); 
  }
  arg5 = reinterpret_cast< wxPGChoices * >(argp5);
  res6 = SWIG_ConvertPtr(swig_obj[5], &argp6, SWIGTYPE_p_wxColourPropertyValue,  0  | 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "new_PySystemColourProperty" "', expected argument " "6"" of type '" "wxColourPropertyValue const &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_PySystemColourProperty" "', expected argument " "6"" of type '" "wxColourPropertyValue const &""'"); 
  }
  arg6 = reinterpret_cast< wxColourPropertyValue * >(argp6);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (PySystemColourProperty *)new PySystemColourProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxChar const *const *)arg3,(long const *)arg4,arg5,(wxColourPropertyValue const &)*arg6);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PySystemColourProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PySystemColourProperty__SWIG_2(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxString *arg1 = 0 ;
  wxString *arg2 = 0 ;
  wxChar **arg3 = (wxChar **) 0 ;
  long *arg4 = (long *) 0 ;
  wxPGChoices *arg5 = (wxPGChoices *) 0 ;
  wxColour *arg6 = 0 ;
  PySystemColourProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  wxColour temp6 ;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  {
    arg1 = wxString_in_helper(swig_obj[0]);
    if (arg1 == NULL) SWIG_fail;
    temp1 = true;
  }
  {
    arg2 = wxString_in_helper(swig_obj[1]);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_p_wxChar, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_PySystemColourProperty" "', expected argument " "3"" of type '" "wxChar const *const *""'"); 
  }
  arg3 = reinterpret_cast< wxChar ** >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_long, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_PySystemColourProperty" "', expected argument " "4"" of type '" "long const *""'"); 
  }
  arg4 = reinterpret_cast< long * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5,SWIGTYPE_p_wxPGChoices, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "new_PySystemColourProperty" "', expected argument " "5"" of type '" "wxPGChoices *""'"); 
  }
  arg5 = reinterpret_cast< wxPGChoices * >(argp5);
  {
    arg6 = &temp6;
    if ( ! wxColour_helper(swig_obj[5], &arg6)) SWIG_fail;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (PySystemColourProperty *)new PySystemColourProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxChar const *const *)arg3,(long const *)arg4,arg5,(wxColour const &)*arg6);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PySystemColourProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PySystemColourProperty(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[7];
  
  if (!(argc = SWIG_Python_UnpackTuple(args,"new_PySystemColourProperty",0,6,argv))) SWIG_fail;
  --argc;
  if ((argc >= 0) && (argc <= 3)) {
    return _wrap_new_PySystemColourProperty__SWIG_0(self, argc, argv);
  }
  if (argc == 6) {
    int _v = 0;
    {
      int res = SWIG_ConvertPtr(argv[5], 0, SWIGTYPE_p_wxColourPropertyValue, 0);
      _v = SWIG_CheckState(res);
    }
    if (!_v) goto check_2;
    return _wrap_new_PySystemColourProperty__SWIG_1(self, argc, argv);
  }
check_2:
  
  if (argc == 6) {
    return _wrap_new_PySystemColourProperty__SWIG_2(self, argc, argv);
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"No matching function for overloaded 'new_PySystemColourProperty'");
  return NULL;
}


SWIGINTERN PyObject *_wrap_PySystemColourProperty__SetSelf(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  PySystemColourProperty *arg1 = (PySystemColourProperty *) 0 ;
  PyObject *arg2 = (PyObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "self", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PySystemColourProperty__SetSelf",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PySystemColourProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PySystemColourProperty__SetSelf" "', expected argument " "1"" of type '" "PySystemColourProperty *""'"); 
  }
  arg1 = reinterpret_cast< PySystemColourProperty * >(argp1);
  arg2 = obj1;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->_SetSelf(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PySystemColourProperty_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_PySystemColourProperty, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PySystemColourProperty_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_PyFlagsProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  wxArrayString const &arg3_defvalue = wxArrayString() ;
  wxArrayString *arg3 = (wxArrayString *) &arg3_defvalue ;
  wxArrayInt const &arg4_defvalue = wxArrayInt() ;
  wxArrayInt *arg4 = (wxArrayInt *) &arg4_defvalue ;
  int arg5 = (int) 0 ;
  PyFlagsProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  bool temp3 = false ;
  bool temp4 = false ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "name",(char *) "labels",(char *) "values",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOOOO:new_PyFlagsProperty",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  if (obj0) {
    {
      arg1 = wxString_in_helper(obj0);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (obj2) {
    {
      if (! PySequence_Check(obj2)) {
        PyErr_SetString(PyExc_TypeError, "Sequence of strings expected.");
        SWIG_fail;
      }
      arg3 = new wxArrayString;
      temp3 = true;
      int i, len=PySequence_Length(obj2);
      for (i=0; i<len; i++) {
        PyObject* item = PySequence_GetItem(obj2, i);
        wxString* s = wxString_in_helper(item);
        if (PyErr_Occurred())  SWIG_fail;
        arg3->Add(*s);
        delete s;
        Py_DECREF(item);
      }
    }
  }
  if (obj3) {
    {
      if (! PySequence_Check(obj3)) {
        PyErr_SetString(PyExc_TypeError, "Sequence of integers expected.");
        SWIG_fail;
      }
      arg4 = new wxArrayInt;
      temp4 = true;
      int i, len=PySequence_Length(obj3);
      for (i=0; i<len; i++) {
        PyObject* item = PySequence_GetItem(obj3, i);
        PyObject* number  = PyNumber_Int(item);
        if (!number) {
          PyErr_SetString(PyExc_TypeError, "Sequence of integers expected.");
          SWIG_fail;
        }       
        arg4->Add(PyInt_AS_LONG(number));
        Py_DECREF(item);
        Py_DECREF(number);
      }
    }
  }
  if (obj4) {
    ecode5 = SWIG_AsVal_int(obj4, &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_PyFlagsProperty" "', expected argument " "5"" of type '" "int""'");
    } 
    arg5 = static_cast< int >(val5);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (PyFlagsProperty *)new PyFlagsProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxArrayString const &)*arg3,(wxArrayInt const &)*arg4,arg5);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PyFlagsProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3) delete arg3;
  }
  {
    if (temp4) delete arg4;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3) delete arg3;
  }
  {
    if (temp4) delete arg4;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PyFlagsProperty__SetSelf(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  PyFlagsProperty *arg1 = (PyFlagsProperty *) 0 ;
  PyObject *arg2 = (PyObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "self", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyFlagsProperty__SetSelf",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PyFlagsProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PyFlagsProperty__SetSelf" "', expected argument " "1"" of type '" "PyFlagsProperty *""'"); 
  }
  arg1 = reinterpret_cast< PyFlagsProperty * >(argp1);
  arg2 = obj1;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->_SetSelf(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PyFlagsProperty_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_PyFlagsProperty, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PyFlagsProperty_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_PyFontProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  wxFont const &arg3_defvalue = wxFont() ;
  wxFont *arg3 = (wxFont *) &arg3_defvalue ;
  PyFontProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "name",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOO:new_PyFontProperty",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  if (obj0) {
    {
      arg1 = wxString_in_helper(obj0);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (obj2) {
    res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_wxFont,  0  | 0);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_PyFontProperty" "', expected argument " "3"" of type '" "wxFont const &""'"); 
    }
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_PyFontProperty" "', expected argument " "3"" of type '" "wxFont const &""'"); 
    }
    arg3 = reinterpret_cast< wxFont * >(argp3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (PyFontProperty *)new PyFontProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxFont const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PyFontProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PyFontProperty__SetSelf(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  PyFontProperty *arg1 = (PyFontProperty *) 0 ;
  PyObject *arg2 = (PyObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "self", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyFontProperty__SetSelf",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PyFontProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PyFontProperty__SetSelf" "', expected argument " "1"" of type '" "PyFontProperty *""'"); 
  }
  arg1 = reinterpret_cast< PyFontProperty * >(argp1);
  arg2 = obj1;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->_SetSelf(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PyFontProperty_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_PyFontProperty, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PyFontProperty_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_PyColourProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  wxColour const &arg3_defvalue = *wxWHITE ;
  wxColour *arg3 = (wxColour *) &arg3_defvalue ;
  PyColourProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  wxColour temp3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "name",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOO:new_PyColourProperty",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  if (obj0) {
    {
      arg1 = wxString_in_helper(obj0);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (obj2) {
    {
      arg3 = &temp3;
      if ( ! wxColour_helper(obj2, &arg3)) SWIG_fail;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (PyColourProperty *)new PyColourProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxColour const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PyColourProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PyColourProperty__SetSelf(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  PyColourProperty *arg1 = (PyColourProperty *) 0 ;
  PyObject *arg2 = (PyObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "self", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyColourProperty__SetSelf",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PyColourProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PyColourProperty__SetSelf" "', expected argument " "1"" of type '" "PyColourProperty *""'"); 
  }
  arg1 = reinterpret_cast< PyColourProperty * >(argp1);
  arg2 = obj1;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->_SetSelf(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PyColourProperty_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_PyColourProperty, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PyColourProperty_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_PyFileProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  wxString const &arg3_defvalue = wxEmptyString ;
  wxString *arg3 = (wxString *) &arg3_defvalue ;
  PyFileProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  bool temp3 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "name",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOO:new_PyFileProperty",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  if (obj0) {
    {
      arg1 = wxString_in_helper(obj0);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (obj2) {
    {
      arg3 = wxString_in_helper(obj2);
      if (arg3 == NULL) SWIG_fail;
      temp3 = true;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (PyFileProperty *)new PyFileProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxString const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PyFileProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PyFileProperty__SetSelf(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  PyFileProperty *arg1 = (PyFileProperty *) 0 ;
  PyObject *arg2 = (PyObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "self", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyFileProperty__SetSelf",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PyFileProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PyFileProperty__SetSelf" "', expected argument " "1"" of type '" "PyFileProperty *""'"); 
  }
  arg1 = reinterpret_cast< PyFileProperty * >(argp1);
  arg2 = obj1;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->_SetSelf(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PyFileProperty_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_PyFileProperty, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PyFileProperty_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_PyIntProperty__SWIG_0(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  long arg3 = (long) 0 ;
  PyIntProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  long val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 0) || (nobjs > 3)) SWIG_fail;
  if (swig_obj[0]) {
    {
      arg1 = wxString_in_helper(swig_obj[0]);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (swig_obj[1]) {
    {
      arg2 = wxString_in_helper(swig_obj[1]);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (swig_obj[2]) {
    ecode3 = SWIG_AsVal_long(swig_obj[2], &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_PyIntProperty" "', expected argument " "3"" of type '" "long""'");
    } 
    arg3 = static_cast< long >(val3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (PyIntProperty *)new PyIntProperty((wxString const &)*arg1,(wxString const &)*arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PyIntProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PyIntProperty__SWIG_1(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxString *arg1 = 0 ;
  wxString *arg2 = 0 ;
  wxLongLong *arg3 = 0 ;
  PyIntProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  {
    arg1 = wxString_in_helper(swig_obj[0]);
    if (arg1 == NULL) SWIG_fail;
    temp1 = true;
  }
  {
    arg2 = wxString_in_helper(swig_obj[1]);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_wxLongLong,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_PyIntProperty" "', expected argument " "3"" of type '" "wxLongLong const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_PyIntProperty" "', expected argument " "3"" of type '" "wxLongLong const &""'"); 
  }
  arg3 = reinterpret_cast< wxLongLong * >(argp3);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (PyIntProperty *)new PyIntProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxLongLong const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PyIntProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PyIntProperty(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  
  if (!(argc = SWIG_Python_UnpackTuple(args,"new_PyIntProperty",0,3,argv))) SWIG_fail;
  --argc;
  if ((argc >= 0) && (argc <= 3)) {
    int _v = 0;
    if (argc > 2) {
      {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
    }
    return _wrap_new_PyIntProperty__SWIG_0(self, argc, argv);
  }
check_1:
  
  if (argc == 3) {
    return _wrap_new_PyIntProperty__SWIG_1(self, argc, argv);
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"No matching function for overloaded 'new_PyIntProperty'");
  return NULL;
}


SWIGINTERN PyObject *_wrap_PyIntProperty__SetSelf(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  PyIntProperty *arg1 = (PyIntProperty *) 0 ;
  PyObject *arg2 = (PyObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "self", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyIntProperty__SetSelf",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PyIntProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PyIntProperty__SetSelf" "', expected argument " "1"" of type '" "PyIntProperty *""'"); 
  }
  arg1 = reinterpret_cast< PyIntProperty * >(argp1);
  arg2 = obj1;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->_SetSelf(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PyIntProperty_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_PyIntProperty, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PyIntProperty_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_PyEditor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyEditor *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args,"new_PyEditor",0,0,0)) SWIG_fail;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (PyEditor *)new PyEditor();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PyEditor, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PyEditor__SetSelf(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  PyEditor *arg1 = (PyEditor *) 0 ;
  PyObject *arg2 = (PyObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "self", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyEditor__SetSelf",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PyEditor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PyEditor__SetSelf" "', expected argument " "1"" of type '" "PyEditor *""'"); 
  }
  arg1 = reinterpret_cast< PyEditor * >(argp1);
  arg2 = obj1;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->_SetSelf(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PyEditor_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_PyEditor, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PyEditor_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_PyChoiceEditor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyChoiceEditor *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args,"new_PyChoiceEditor",0,0,0)) SWIG_fail;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (PyChoiceEditor *)new PyChoiceEditor();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PyChoiceEditor, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PyChoiceEditor__SetSelf(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  PyChoiceEditor *arg1 = (PyChoiceEditor *) 0 ;
  PyObject *arg2 = (PyObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "self", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyChoiceEditor__SetSelf",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PyChoiceEditor, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PyChoiceEditor__SetSelf" "', expected argument " "1"" of type '" "PyChoiceEditor *""'"); 
  }
  arg1 = reinterpret_cast< PyChoiceEditor * >(argp1);
  arg2 = obj1;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->_SetSelf(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PyChoiceEditor_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_PyChoiceEditor, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PyChoiceEditor_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_PyProperty__SWIG_0(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  PyProperty *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (PyProperty *)new PyProperty();
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PyProperty, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PyProperty__SWIG_1(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxString *arg1 = 0 ;
  wxString *arg2 = 0 ;
  PyProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  {
    arg1 = wxString_in_helper(swig_obj[0]);
    if (arg1 == NULL) SWIG_fail;
    temp1 = true;
  }
  {
    arg2 = wxString_in_helper(swig_obj[1]);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (PyProperty *)new PyProperty((wxString const &)*arg1,(wxString const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PyProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PyProperty(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  
  if (!(argc = SWIG_Python_UnpackTuple(args,"new_PyProperty",0,2,argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_PyProperty__SWIG_0(self, argc, argv);
  }
  if (argc == 2) {
    return _wrap_new_PyProperty__SWIG_1(self, argc, argv);
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"No matching function for overloaded 'new_PyProperty'");
  return NULL;
}


SWIGINTERN PyObject *_wrap_PyProperty__SetSelf(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  PyProperty *arg1 = (PyProperty *) 0 ;
  PyObject *arg2 = (PyObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "self", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyProperty__SetSelf",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PyProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PyProperty__SetSelf" "', expected argument " "1"" of type '" "PyProperty *""'"); 
  }
  arg1 = reinterpret_cast< PyProperty * >(argp1);
  arg2 = obj1;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->_SetSelf(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PyProperty_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_PyProperty, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PyProperty_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_PyUIntProperty__SWIG_0(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  long arg3 = (long) 0 ;
  PyUIntProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  long val3 ;
  int ecode3 = 0 ;
  
  if ((nobjs < 0) || (nobjs > 3)) SWIG_fail;
  if (swig_obj[0]) {
    {
      arg1 = wxString_in_helper(swig_obj[0]);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (swig_obj[1]) {
    {
      arg2 = wxString_in_helper(swig_obj[1]);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (swig_obj[2]) {
    ecode3 = SWIG_AsVal_long(swig_obj[2], &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_PyUIntProperty" "', expected argument " "3"" of type '" "long""'");
    } 
    arg3 = static_cast< long >(val3);
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (PyUIntProperty *)new PyUIntProperty((wxString const &)*arg1,(wxString const &)*arg2,arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PyUIntProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PyUIntProperty__SWIG_1(PyObject *SWIGUNUSEDPARM(self), int nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  wxString *arg1 = 0 ;
  wxString *arg2 = 0 ;
  wxULongLong *arg3 = 0 ;
  PyUIntProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  {
    arg1 = wxString_in_helper(swig_obj[0]);
    if (arg1 == NULL) SWIG_fail;
    temp1 = true;
  }
  {
    arg2 = wxString_in_helper(swig_obj[1]);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_wxULongLong,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_PyUIntProperty" "', expected argument " "3"" of type '" "wxULongLong const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_PyUIntProperty" "', expected argument " "3"" of type '" "wxULongLong const &""'"); 
  }
  arg3 = reinterpret_cast< wxULongLong * >(argp3);
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (PyUIntProperty *)new PyUIntProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxULongLong const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PyUIntProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PyUIntProperty(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  
  if (!(argc = SWIG_Python_UnpackTuple(args,"new_PyUIntProperty",0,3,argv))) SWIG_fail;
  --argc;
  if ((argc >= 0) && (argc <= 3)) {
    int _v = 0;
    if (argc > 2) {
      {
        {
          int res = SWIG_AsVal_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
      }
      if (!_v) goto check_1;
    }
    return _wrap_new_PyUIntProperty__SWIG_0(self, argc, argv);
  }
check_1:
  
  if (argc == 3) {
    return _wrap_new_PyUIntProperty__SWIG_1(self, argc, argv);
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"No matching function for overloaded 'new_PyUIntProperty'");
  return NULL;
}


SWIGINTERN PyObject *_wrap_PyUIntProperty__SetSelf(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  PyUIntProperty *arg1 = (PyUIntProperty *) 0 ;
  PyObject *arg2 = (PyObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "self", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyUIntProperty__SetSelf",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PyUIntProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PyUIntProperty__SetSelf" "', expected argument " "1"" of type '" "PyUIntProperty *""'"); 
  }
  arg1 = reinterpret_cast< PyUIntProperty * >(argp1);
  arg2 = obj1;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->_SetSelf(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PyUIntProperty_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_PyUIntProperty, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PyUIntProperty_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_PyLongStringProperty(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxString const &arg1_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg1 = (wxString *) &arg1_defvalue ;
  wxString const &arg2_defvalue = (*wxPGProperty::sm_wxPG_LABEL) ;
  wxString *arg2 = (wxString *) &arg2_defvalue ;
  wxString const &arg3_defvalue = wxEmptyString ;
  wxString *arg3 = (wxString *) &arg3_defvalue ;
  PyLongStringProperty *result = 0 ;
  bool temp1 = false ;
  bool temp2 = false ;
  bool temp3 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "label",(char *) "name",(char *) "value", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOO:new_PyLongStringProperty",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  if (obj0) {
    {
      arg1 = wxString_in_helper(obj0);
      if (arg1 == NULL) SWIG_fail;
      temp1 = true;
    }
  }
  if (obj1) {
    {
      arg2 = wxString_in_helper(obj1);
      if (arg2 == NULL) SWIG_fail;
      temp2 = true;
    }
  }
  if (obj2) {
    {
      arg3 = wxString_in_helper(obj2);
      if (arg3 == NULL) SWIG_fail;
      temp3 = true;
    }
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    result = (PyLongStringProperty *)new PyLongStringProperty((wxString const &)*arg1,(wxString const &)*arg2,(wxString const &)*arg3);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_PyLongStringProperty, SWIG_POINTER_NEW |  0 );
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return resultobj;
fail:
  {
    if (temp1)
    delete arg1;
  }
  {
    if (temp2)
    delete arg2;
  }
  {
    if (temp3)
    delete arg3;
  }
  return NULL;
}


SWIGINTERN PyObject *_wrap_PyLongStringProperty__SetSelf(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  PyLongStringProperty *arg1 = (PyLongStringProperty *) 0 ;
  PyObject *arg2 = (PyObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "self", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:PyLongStringProperty__SetSelf",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_PyLongStringProperty, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PyLongStringProperty__SetSelf" "', expected argument " "1"" of type '" "PyLongStringProperty *""'"); 
  }
  arg1 = reinterpret_cast< PyLongStringProperty * >(argp1);
  arg2 = obj1;
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    (arg1)->_SetSelf(arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PyLongStringProperty_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_PyLongStringProperty, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *PyLongStringProperty_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_RegisterEditor(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  wxPGEditor *arg1 = (wxPGEditor *) 0 ;
  wxString *arg2 = 0 ;
  bool temp2 = false ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "editor",(char *) "editorName", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:RegisterEditor",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    if ( !wxPyConvertSwigPtr(obj0, (void**)&arg1, wxT("wxPGEditor")) ) {
      PyErr_SetString(PyExc_TypeError,"expected wxPGEditor");
      SWIG_fail;
    }
    
  }
  {
    arg2 = wxString_in_helper(obj1);
    if (arg2 == NULL) SWIG_fail;
    temp2 = true;
  }
  {
    PyThreadState* __tstate = wxPyBeginAllowThreads();
    RegisterEditor(arg1,(wxString const &)*arg2);
    wxPyEndAllowThreads(__tstate);
    if (PyErr_Occurred()) SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  {
    if (temp2)
    delete arg2;
  }
  return resultobj;
fail:
  {
    if (temp2)
    delete arg2;
  }
  return NULL;
}


static PyMethodDef SwigMethods[] = {
	 { (char *)"PGPaintData_m_parent_set", _wrap_PGPaintData_m_parent_set, METH_VARARGS, NULL},
	 { (char *)"PGPaintData_m_parent_get", (PyCFunction)_wrap_PGPaintData_m_parent_get, METH_O, NULL},
	 { (char *)"PGPaintData_m_choiceItem_set", _wrap_PGPaintData_m_choiceItem_set, METH_VARARGS, NULL},
	 { (char *)"PGPaintData_m_choiceItem_get", (PyCFunction)_wrap_PGPaintData_m_choiceItem_get, METH_O, NULL},
	 { (char *)"PGPaintData_m_drawnWidth_set", _wrap_PGPaintData_m_drawnWidth_set, METH_VARARGS, NULL},
	 { (char *)"PGPaintData_m_drawnWidth_get", (PyCFunction)_wrap_PGPaintData_m_drawnWidth_get, METH_O, NULL},
	 { (char *)"PGPaintData_m_drawnHeight_set", _wrap_PGPaintData_m_drawnHeight_set, METH_VARARGS, NULL},
	 { (char *)"PGPaintData_m_drawnHeight_get", (PyCFunction)_wrap_PGPaintData_m_drawnHeight_get, METH_O, NULL},
	 { (char *)"PGPaintData_swigregister", PGPaintData_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_PGCell", _wrap_new_PGCell, METH_VARARGS, NULL},
	 { (char *)"delete_PGCell", (PyCFunction)_wrap_delete_PGCell, METH_O, NULL},
	 { (char *)"PGCell_GetData", _wrap_PGCell_GetData, METH_VARARGS, NULL},
	 { (char *)"PGCell_HasText", (PyCFunction)_wrap_PGCell_HasText, METH_O, NULL},
	 { (char *)"PGCell_SetEmptyData", (PyCFunction)_wrap_PGCell_SetEmptyData, METH_O, NULL},
	 { (char *)"PGCell_MergeFrom", (PyCFunction) _wrap_PGCell_MergeFrom, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGCell_SetText", (PyCFunction) _wrap_PGCell_SetText, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGCell_SetBitmap", (PyCFunction) _wrap_PGCell_SetBitmap, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGCell_SetFgCol", (PyCFunction) _wrap_PGCell_SetFgCol, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGCell_SetFont", (PyCFunction) _wrap_PGCell_SetFont, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGCell_SetBgCol", (PyCFunction) _wrap_PGCell_SetBgCol, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGCell_GetText", (PyCFunction)_wrap_PGCell_GetText, METH_O, NULL},
	 { (char *)"PGCell_GetBitmap", (PyCFunction)_wrap_PGCell_GetBitmap, METH_O, NULL},
	 { (char *)"PGCell_GetFgCol", (PyCFunction)_wrap_PGCell_GetFgCol, METH_O, NULL},
	 { (char *)"PGCell_GetFont", (PyCFunction)_wrap_PGCell_GetFont, METH_O, NULL},
	 { (char *)"PGCell_GetBgCol", (PyCFunction)_wrap_PGCell_GetBgCol, METH_O, NULL},
	 { (char *)"PGCell_IsInvalid", (PyCFunction)_wrap_PGCell_IsInvalid, METH_O, NULL},
	 { (char *)"PGCell_swigregister", PGCell_swigregister, METH_VARARGS, NULL},
	 { (char *)"PGCell_swiginit", PGCell_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_PGChoices", _wrap_new_PGChoices, METH_VARARGS, NULL},
	 { (char *)"delete_PGChoices", (PyCFunction)_wrap_delete_PGChoices, METH_O, NULL},
	 { (char *)"PGChoices_Add", _wrap_PGChoices_Add, METH_VARARGS, NULL},
	 { (char *)"PGChoices_AddAsSorted", (PyCFunction) _wrap_PGChoices_AddAsSorted, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGChoices_Assign", (PyCFunction) _wrap_PGChoices_Assign, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGChoices_AssignData", (PyCFunction) _wrap_PGChoices_AssignData, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGChoices_Clear", (PyCFunction)_wrap_PGChoices_Clear, METH_O, NULL},
	 { (char *)"PGChoices_Copy", (PyCFunction)_wrap_PGChoices_Copy, METH_O, NULL},
	 { (char *)"PGChoices_EnsureData", (PyCFunction)_wrap_PGChoices_EnsureData, METH_O, NULL},
	 { (char *)"PGChoices_GetId", (PyCFunction)_wrap_PGChoices_GetId, METH_O, NULL},
	 { (char *)"PGChoices_GetLabel", (PyCFunction) _wrap_PGChoices_GetLabel, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGChoices_GetCount", (PyCFunction)_wrap_PGChoices_GetCount, METH_O, NULL},
	 { (char *)"PGChoices_GetValue", (PyCFunction) _wrap_PGChoices_GetValue, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGChoices_GetValuesForStrings", (PyCFunction) _wrap_PGChoices_GetValuesForStrings, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGChoices_GetIndicesForStrings", (PyCFunction) _wrap_PGChoices_GetIndicesForStrings, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGChoices_Index", _wrap_PGChoices_Index, METH_VARARGS, NULL},
	 { (char *)"PGChoices_Insert", _wrap_PGChoices_Insert, METH_VARARGS, NULL},
	 { (char *)"PGChoices_IsOk", (PyCFunction)_wrap_PGChoices_IsOk, METH_O, NULL},
	 { (char *)"PGChoices_Item", _wrap_PGChoices_Item, METH_VARARGS, NULL},
	 { (char *)"PGChoices_RemoveAt", (PyCFunction) _wrap_PGChoices_RemoveAt, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGChoices_Set", _wrap_PGChoices_Set, METH_VARARGS, NULL},
	 { (char *)"PGChoices_AllocExclusive", (PyCFunction)_wrap_PGChoices_AllocExclusive, METH_O, NULL},
	 { (char *)"PGChoices_GetData", (PyCFunction)_wrap_PGChoices_GetData, METH_O, NULL},
	 { (char *)"PGChoices_GetDataPtr", (PyCFunction)_wrap_PGChoices_GetDataPtr, METH_O, NULL},
	 { (char *)"PGChoices_ExtractData", (PyCFunction)_wrap_PGChoices_ExtractData, METH_O, NULL},
	 { (char *)"PGChoices_GetLabels", (PyCFunction)_wrap_PGChoices_GetLabels, METH_O, NULL},
	 { (char *)"PGChoices_swigregister", PGChoices_swigregister, METH_VARARGS, NULL},
	 { (char *)"PGChoices_swiginit", PGChoices_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_PGProperty", _wrap_new_PGProperty, METH_VARARGS, NULL},
	 { (char *)"delete_PGProperty", (PyCFunction)_wrap_delete_PGProperty, METH_O, NULL},
	 { (char *)"PGProperty_OnSetValue", (PyCFunction)_wrap_PGProperty_OnSetValue, METH_O, NULL},
	 { (char *)"PGProperty_DoGetValue", (PyCFunction)_wrap_PGProperty_DoGetValue, METH_O, NULL},
	 { (char *)"PGProperty_ValueToString", (PyCFunction) _wrap_PGProperty_ValueToString, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_SetValueFromString", (PyCFunction) _wrap_PGProperty_SetValueFromString, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_SetValueFromInt", (PyCFunction) _wrap_PGProperty_SetValueFromInt, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_OnMeasureImage", (PyCFunction) _wrap_PGProperty_OnMeasureImage, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_OnEvent", (PyCFunction) _wrap_PGProperty_OnEvent, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_ChildChanged", (PyCFunction) _wrap_PGProperty_ChildChanged, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_DoGetEditorClass", (PyCFunction)_wrap_PGProperty_DoGetEditorClass, METH_O, NULL},
	 { (char *)"PGProperty_DoGetValidator", (PyCFunction)_wrap_PGProperty_DoGetValidator, METH_O, NULL},
	 { (char *)"PGProperty_OnCustomPaint", (PyCFunction) _wrap_PGProperty_OnCustomPaint, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_GetCellRenderer", (PyCFunction) _wrap_PGProperty_GetCellRenderer, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_GetChoiceSelection", (PyCFunction)_wrap_PGProperty_GetChoiceSelection, METH_O, NULL},
	 { (char *)"PGProperty_RefreshChildren", (PyCFunction)_wrap_PGProperty_RefreshChildren, METH_O, NULL},
	 { (char *)"PGProperty_DoSetAttribute", (PyCFunction) _wrap_PGProperty_DoSetAttribute, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_DoGetAttribute", (PyCFunction) _wrap_PGProperty_DoGetAttribute, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_GetEditorDialog", (PyCFunction)_wrap_PGProperty_GetEditorDialog, METH_O, NULL},
	 { (char *)"PGProperty_OnValidationFailure", (PyCFunction) _wrap_PGProperty_OnValidationFailure, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_AddChoice", (PyCFunction) _wrap_PGProperty_AddChoice, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_AreChildrenComponents", (PyCFunction)_wrap_PGProperty_AreChildrenComponents, METH_O, NULL},
	 { (char *)"PGProperty_DeleteChildren", (PyCFunction)_wrap_PGProperty_DeleteChildren, METH_O, NULL},
	 { (char *)"PGProperty_DeleteChoice", (PyCFunction) _wrap_PGProperty_DeleteChoice, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_Enable", (PyCFunction) _wrap_PGProperty_Enable, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_EnableCommonValue", (PyCFunction) _wrap_PGProperty_EnableCommonValue, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_GenerateComposedValue", (PyCFunction)_wrap_PGProperty_GenerateComposedValue, METH_O, NULL},
	 { (char *)"PGProperty_GetLabel", (PyCFunction)_wrap_PGProperty_GetLabel, METH_O, NULL},
	 { (char *)"PGProperty_GetName", (PyCFunction)_wrap_PGProperty_GetName, METH_O, NULL},
	 { (char *)"PGProperty_GetBaseName", (PyCFunction)_wrap_PGProperty_GetBaseName, METH_O, NULL},
	 { (char *)"PGProperty_GetChoices", (PyCFunction)_wrap_PGProperty_GetChoices, METH_O, NULL},
	 { (char *)"PGProperty_GetY", (PyCFunction)_wrap_PGProperty_GetY, METH_O, NULL},
	 { (char *)"PGProperty_GetValue", (PyCFunction)_wrap_PGProperty_GetValue, METH_O, NULL},
	 { (char *)"PGProperty_GetValuePlain", (PyCFunction)_wrap_PGProperty_GetValuePlain, METH_O, NULL},
	 { (char *)"PGProperty_GetValueAsString", (PyCFunction) _wrap_PGProperty_GetValueAsString, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_GetCell", _wrap_PGProperty_GetCell, METH_VARARGS, NULL},
	 { (char *)"PGProperty_GetOrCreateCell", (PyCFunction) _wrap_PGProperty_GetOrCreateCell, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_GetDisplayedCommonValueCount", (PyCFunction)_wrap_PGProperty_GetDisplayedCommonValueCount, METH_O, NULL},
	 { (char *)"PGProperty_GetDisplayedString", (PyCFunction)_wrap_PGProperty_GetDisplayedString, METH_O, NULL},
	 { (char *)"PGProperty_GetHintText", (PyCFunction)_wrap_PGProperty_GetHintText, METH_O, NULL},
	 { (char *)"PGProperty_GetGrid", (PyCFunction)_wrap_PGProperty_GetGrid, METH_O, NULL},
	 { (char *)"PGProperty_GetGridIfDisplayed", (PyCFunction)_wrap_PGProperty_GetGridIfDisplayed, METH_O, NULL},
	 { (char *)"PGProperty_GetMainParent", (PyCFunction)_wrap_PGProperty_GetMainParent, METH_O, NULL},
	 { (char *)"PGProperty_GetParent", (PyCFunction)_wrap_PGProperty_GetParent, METH_O, NULL},
	 { (char *)"PGProperty_IsTextEditable", (PyCFunction)_wrap_PGProperty_IsTextEditable, METH_O, NULL},
	 { (char *)"PGProperty_IsValueUnspecified", (PyCFunction)_wrap_PGProperty_IsValueUnspecified, METH_O, NULL},
	 { (char *)"PGProperty_HasFlag", (PyCFunction) _wrap_PGProperty_HasFlag, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_GetAttributes", (PyCFunction)_wrap_PGProperty_GetAttributes, METH_O, NULL},
	 { (char *)"PGProperty_GetAttributesAsList", (PyCFunction)_wrap_PGProperty_GetAttributesAsList, METH_O, NULL},
	 { (char *)"PGProperty_GetFlags", (PyCFunction)_wrap_PGProperty_GetFlags, METH_O, NULL},
	 { (char *)"PGProperty_GetEditorClass", (PyCFunction)_wrap_PGProperty_GetEditorClass, METH_O, NULL},
	 { (char *)"PGProperty_GetValueType", (PyCFunction)_wrap_PGProperty_GetValueType, METH_O, NULL},
	 { (char *)"PGProperty_GetColumnEditor", (PyCFunction) _wrap_PGProperty_GetColumnEditor, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_GetCommonValue", (PyCFunction)_wrap_PGProperty_GetCommonValue, METH_O, NULL},
	 { (char *)"PGProperty_HasVisibleChildren", (PyCFunction)_wrap_PGProperty_HasVisibleChildren, METH_O, NULL},
	 { (char *)"PGProperty_InsertChild", (PyCFunction) _wrap_PGProperty_InsertChild, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_InsertChoice", (PyCFunction) _wrap_PGProperty_InsertChoice, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_IsCategory", (PyCFunction)_wrap_PGProperty_IsCategory, METH_O, NULL},
	 { (char *)"PGProperty_IsRoot", (PyCFunction)_wrap_PGProperty_IsRoot, METH_O, NULL},
	 { (char *)"PGProperty_IsSubProperty", (PyCFunction)_wrap_PGProperty_IsSubProperty, METH_O, NULL},
	 { (char *)"PGProperty_GetLastVisibleSubItem", (PyCFunction)_wrap_PGProperty_GetLastVisibleSubItem, METH_O, NULL},
	 { (char *)"PGProperty_GetDefaultValue", (PyCFunction)_wrap_PGProperty_GetDefaultValue, METH_O, NULL},
	 { (char *)"PGProperty_GetMaxLength", (PyCFunction)_wrap_PGProperty_GetMaxLength, METH_O, NULL},
	 { (char *)"PGProperty_AreAllChildrenSpecified", (PyCFunction) _wrap_PGProperty_AreAllChildrenSpecified, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_UpdateParentValues", (PyCFunction)_wrap_PGProperty_UpdateParentValues, METH_O, NULL},
	 { (char *)"PGProperty_UsesAutoUnspecified", (PyCFunction)_wrap_PGProperty_UsesAutoUnspecified, METH_O, NULL},
	 { (char *)"PGProperty_GetValueImage", (PyCFunction)_wrap_PGProperty_GetValueImage, METH_O, NULL},
	 { (char *)"PGProperty_GetAttribute", _wrap_PGProperty_GetAttribute, METH_VARARGS, NULL},
	 { (char *)"PGProperty_GetAttributeAsLong", (PyCFunction) _wrap_PGProperty_GetAttributeAsLong, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_GetAttributeAsDouble", (PyCFunction) _wrap_PGProperty_GetAttributeAsDouble, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_GetDepth", (PyCFunction)_wrap_PGProperty_GetDepth, METH_O, NULL},
	 { (char *)"PGProperty_GetFlagsAsString", (PyCFunction) _wrap_PGProperty_GetFlagsAsString, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_GetIndexInParent", (PyCFunction)_wrap_PGProperty_GetIndexInParent, METH_O, NULL},
	 { (char *)"PGProperty_Hide", (PyCFunction) _wrap_PGProperty_Hide, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_IsExpanded", (PyCFunction)_wrap_PGProperty_IsExpanded, METH_O, NULL},
	 { (char *)"PGProperty_IsVisible", (PyCFunction)_wrap_PGProperty_IsVisible, METH_O, NULL},
	 { (char *)"PGProperty_IsEnabled", (PyCFunction)_wrap_PGProperty_IsEnabled, METH_O, NULL},
	 { (char *)"PGProperty_RecreateEditor", (PyCFunction)_wrap_PGProperty_RecreateEditor, METH_O, NULL},
	 { (char *)"PGProperty_RefreshEditor", (PyCFunction)_wrap_PGProperty_RefreshEditor, METH_O, NULL},
	 { (char *)"PGProperty_SetAttribute", (PyCFunction) _wrap_PGProperty_SetAttribute, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_SetAttributes", (PyCFunction) _wrap_PGProperty_SetAttributes, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_SetAutoUnspecified", (PyCFunction) _wrap_PGProperty_SetAutoUnspecified, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_SetBackgroundColour", (PyCFunction) _wrap_PGProperty_SetBackgroundColour, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_SetTextColour", (PyCFunction) _wrap_PGProperty_SetTextColour, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_SetDefaultValue", (PyCFunction) _wrap_PGProperty_SetDefaultValue, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_SetEditor", (PyCFunction) _wrap_PGProperty_SetEditor, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_SetCell", (PyCFunction) _wrap_PGProperty_SetCell, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_SetCommonValue", (PyCFunction) _wrap_PGProperty_SetCommonValue, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_SetFlagsFromString", (PyCFunction) _wrap_PGProperty_SetFlagsFromString, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_SetModifiedStatus", (PyCFunction) _wrap_PGProperty_SetModifiedStatus, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_SetValueInEvent", (PyCFunction) _wrap_PGProperty_SetValueInEvent, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_SetValue", (PyCFunction) _wrap_PGProperty_SetValue, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_SetValueImage", (PyCFunction) _wrap_PGProperty_SetValueImage, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_SetChoiceSelection", (PyCFunction) _wrap_PGProperty_SetChoiceSelection, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_SetExpanded", (PyCFunction) _wrap_PGProperty_SetExpanded, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_ChangeFlag", (PyCFunction) _wrap_PGProperty_ChangeFlag, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_SetFlagRecursively", (PyCFunction) _wrap_PGProperty_SetFlagRecursively, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_SetHelpString", (PyCFunction) _wrap_PGProperty_SetHelpString, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_SetLabel", (PyCFunction) _wrap_PGProperty_SetLabel, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_SetName", (PyCFunction) _wrap_PGProperty_SetName, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_SetParentalType", (PyCFunction) _wrap_PGProperty_SetParentalType, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_SetValueToUnspecified", (PyCFunction)_wrap_PGProperty_SetValueToUnspecified, METH_O, NULL},
	 { (char *)"PGProperty_SetValuePlain", (PyCFunction) _wrap_PGProperty_SetValuePlain, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_SetValidator", (PyCFunction) _wrap_PGProperty_SetValidator, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_GetValidator", (PyCFunction)_wrap_PGProperty_GetValidator, METH_O, NULL},
	 { (char *)"PGProperty_SetMaxLength", (PyCFunction) _wrap_PGProperty_SetMaxLength, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_SetWasModified", (PyCFunction) _wrap_PGProperty_SetWasModified, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_GetHelpString", (PyCFunction)_wrap_PGProperty_GetHelpString, METH_O, NULL},
	 { (char *)"PGProperty_IsSomeParent", (PyCFunction) _wrap_PGProperty_IsSomeParent, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_AdaptListToValue", (PyCFunction) _wrap_PGProperty_AdaptListToValue, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_AddPrivateChild", (PyCFunction) _wrap_PGProperty_AddPrivateChild, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_AppendChild", (PyCFunction) _wrap_PGProperty_AppendChild, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_GetChildrenHeight", (PyCFunction) _wrap_PGProperty_GetChildrenHeight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_GetChildCount", (PyCFunction)_wrap_PGProperty_GetChildCount, METH_O, NULL},
	 { (char *)"PGProperty_Item", (PyCFunction) _wrap_PGProperty_Item, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_Last", (PyCFunction)_wrap_PGProperty_Last, METH_O, NULL},
	 { (char *)"PGProperty_Index", (PyCFunction) _wrap_PGProperty_Index, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_FixIndicesOfChildren", (PyCFunction) _wrap_PGProperty_FixIndicesOfChildren, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_GetImageOffset", (PyCFunction) _wrap_PGProperty_GetImageOffset, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_GetItemAtY", (PyCFunction) _wrap_PGProperty_GetItemAtY, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_GetPropertyByName", (PyCFunction) _wrap_PGProperty_GetPropertyByName, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_SetPyChoices", _wrap_PGProperty_SetPyChoices, METH_VARARGS, NULL},
	 { (char *)"PGProperty_PyBase_StringToValue", (PyCFunction) _wrap_PGProperty_PyBase_StringToValue, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_PyBase_IntToValue", (PyCFunction) _wrap_PGProperty_PyBase_IntToValue, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_GetPyClientData", (PyCFunction)_wrap_PGProperty_GetPyClientData, METH_O, NULL},
	 { (char *)"PGProperty_SetPyClientData", (PyCFunction) _wrap_PGProperty_SetPyClientData, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGProperty_swigregister", PGProperty_swigregister, METH_VARARGS, NULL},
	 { (char *)"PGProperty_swiginit", PGProperty_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_PropertyGridHitTestResult", (PyCFunction)_wrap_new_PropertyGridHitTestResult, METH_NOARGS, NULL},
	 { (char *)"delete_PropertyGridHitTestResult", (PyCFunction)_wrap_delete_PropertyGridHitTestResult, METH_O, NULL},
	 { (char *)"PropertyGridHitTestResult_GetColumn", (PyCFunction)_wrap_PropertyGridHitTestResult_GetColumn, METH_O, NULL},
	 { (char *)"PropertyGridHitTestResult_GetProperty", (PyCFunction)_wrap_PropertyGridHitTestResult_GetProperty, METH_O, NULL},
	 { (char *)"PropertyGridHitTestResult_GetSplitter", (PyCFunction)_wrap_PropertyGridHitTestResult_GetSplitter, METH_O, NULL},
	 { (char *)"PropertyGridHitTestResult_GetSplitterHitOffset", (PyCFunction)_wrap_PropertyGridHitTestResult_GetSplitterHitOffset, METH_O, NULL},
	 { (char *)"PropertyGridHitTestResult_swigregister", PropertyGridHitTestResult_swigregister, METH_VARARGS, NULL},
	 { (char *)"PropertyGridHitTestResult_swiginit", PropertyGridHitTestResult_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_PropertyGridIteratorBase", (PyCFunction)_wrap_new_PropertyGridIteratorBase, METH_NOARGS, NULL},
	 { (char *)"PropertyGridIteratorBase_Assign", (PyCFunction) _wrap_PropertyGridIteratorBase_Assign, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridIteratorBase_AtEnd", (PyCFunction)_wrap_PropertyGridIteratorBase_AtEnd, METH_O, NULL},
	 { (char *)"PropertyGridIteratorBase_GetProperty", (PyCFunction)_wrap_PropertyGridIteratorBase_GetProperty, METH_O, NULL},
	 { (char *)"PropertyGridIteratorBase_Init", _wrap_PropertyGridIteratorBase_Init, METH_VARARGS, NULL},
	 { (char *)"PropertyGridIteratorBase_Next", (PyCFunction) _wrap_PropertyGridIteratorBase_Next, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridIteratorBase_Prev", (PyCFunction)_wrap_PropertyGridIteratorBase_Prev, METH_O, NULL},
	 { (char *)"PropertyGridIteratorBase_SetBaseParent", (PyCFunction) _wrap_PropertyGridIteratorBase_SetBaseParent, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridIteratorBase_swigregister", PropertyGridIteratorBase_swigregister, METH_VARARGS, NULL},
	 { (char *)"PropertyGridIteratorBase_swiginit", PropertyGridIteratorBase_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_PropertyGridIterator", _wrap_new_PropertyGridIterator, METH_VARARGS, NULL},
	 { (char *)"delete_PropertyGridIterator", (PyCFunction)_wrap_delete_PropertyGridIterator, METH_O, NULL},
	 { (char *)"PropertyGridIterator___ref__", (PyCFunction)_wrap_PropertyGridIterator___ref__, METH_O, NULL},
	 { (char *)"PropertyGridIterator_OneStep", (PyCFunction) _wrap_PropertyGridIterator_OneStep, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridIterator_swigregister", PropertyGridIterator_swigregister, METH_VARARGS, NULL},
	 { (char *)"PropertyGridIterator_swiginit", PropertyGridIterator_swiginit, METH_VARARGS, NULL},
	 { (char *)"delete_PropertyGridConstIterator", (PyCFunction)_wrap_delete_PropertyGridConstIterator, METH_O, NULL},
	 { (char *)"PropertyGridConstIterator___ref__", (PyCFunction)_wrap_PropertyGridConstIterator___ref__, METH_O, NULL},
	 { (char *)"PropertyGridConstIterator_OneStep", (PyCFunction) _wrap_PropertyGridConstIterator_OneStep, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"new_PropertyGridConstIterator", _wrap_new_PropertyGridConstIterator, METH_VARARGS, NULL},
	 { (char *)"PropertyGridConstIterator_swigregister", PropertyGridConstIterator_swigregister, METH_VARARGS, NULL},
	 { (char *)"PropertyGridConstIterator_swiginit", PropertyGridConstIterator_swiginit, METH_VARARGS, NULL},
	 { (char *)"PGVIteratorBase_Next", (PyCFunction)_wrap_PGVIteratorBase_Next, METH_O, NULL},
	 { (char *)"PGVIteratorBase_swigregister", PGVIteratorBase_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_PGVIterator", (PyCFunction)_wrap_delete_PGVIterator, METH_O, NULL},
	 { (char *)"PGVIterator_UnRef", (PyCFunction)_wrap_PGVIterator_UnRef, METH_O, NULL},
	 { (char *)"new_PGVIterator", _wrap_new_PGVIterator, METH_VARARGS, NULL},
	 { (char *)"PGVIterator_Next", (PyCFunction)_wrap_PGVIterator_Next, METH_O, NULL},
	 { (char *)"PGVIterator_AtEnd", (PyCFunction)_wrap_PGVIterator_AtEnd, METH_O, NULL},
	 { (char *)"PGVIterator_GetProperty", (PyCFunction)_wrap_PGVIterator_GetProperty, METH_O, NULL},
	 { (char *)"PGVIterator_swigregister", PGVIterator_swigregister, METH_VARARGS, NULL},
	 { (char *)"PGVIterator_swiginit", PGVIterator_swiginit, METH_VARARGS, NULL},
	 { (char *)"PGTypeOperationFailed", (PyCFunction) _wrap_PGTypeOperationFailed, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGGetFailed", (PyCFunction) _wrap_PGGetFailed, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"delete_PropertyGridInterface", (PyCFunction)_wrap_delete_PropertyGridInterface, METH_O, NULL},
	 { (char *)"PropertyGridInterface_Append", (PyCFunction) _wrap_PropertyGridInterface_Append, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_AppendIn", (PyCFunction) _wrap_PropertyGridInterface_AppendIn, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_BeginAddChildren", (PyCFunction) _wrap_PropertyGridInterface_BeginAddChildren, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_Clear", (PyCFunction)_wrap_PropertyGridInterface_Clear, METH_O, NULL},
	 { (char *)"PropertyGridInterface_ClearSelection", (PyCFunction) _wrap_PropertyGridInterface_ClearSelection, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_ClearModifiedStatus", (PyCFunction)_wrap_PropertyGridInterface_ClearModifiedStatus, METH_O, NULL},
	 { (char *)"PropertyGridInterface_Collapse", (PyCFunction) _wrap_PropertyGridInterface_Collapse, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_CollapseAll", (PyCFunction)_wrap_PropertyGridInterface_CollapseAll, METH_O, NULL},
	 { (char *)"PropertyGridInterface_ChangePropertyValue", (PyCFunction) _wrap_PropertyGridInterface_ChangePropertyValue, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_DeleteProperty", (PyCFunction) _wrap_PropertyGridInterface_DeleteProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_RemoveProperty", (PyCFunction) _wrap_PropertyGridInterface_RemoveProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_DisableProperty", (PyCFunction) _wrap_PropertyGridInterface_DisableProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_EditorValidate", (PyCFunction)_wrap_PropertyGridInterface_EditorValidate, METH_O, NULL},
	 { (char *)"PropertyGridInterface_EnableProperty", (PyCFunction) _wrap_PropertyGridInterface_EnableProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_EndAddChildren", (PyCFunction) _wrap_PropertyGridInterface_EndAddChildren, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_Expand", (PyCFunction) _wrap_PropertyGridInterface_Expand, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_ExpandAll", (PyCFunction) _wrap_PropertyGridInterface_ExpandAll, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_GetFirstChild", (PyCFunction) _wrap_PropertyGridInterface_GetFirstChild, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_GetIterator", _wrap_PropertyGridInterface_GetIterator, METH_VARARGS, NULL},
	 { (char *)"PropertyGridInterface_GetFirst", _wrap_PropertyGridInterface_GetFirst, METH_VARARGS, NULL},
	 { (char *)"PropertyGridInterface_GetProperty", (PyCFunction) _wrap_PropertyGridInterface_GetProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_GetPropertyAttributes", (PyCFunction) _wrap_PropertyGridInterface_GetPropertyAttributes, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_GetPropertiesWithFlag", (PyCFunction) _wrap_PropertyGridInterface_GetPropertiesWithFlag, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_GetPropertyAttribute", (PyCFunction) _wrap_PropertyGridInterface_GetPropertyAttribute, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_GetPropertyCategory", (PyCFunction) _wrap_PropertyGridInterface_GetPropertyCategory, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_GetPropertyByLabel", (PyCFunction) _wrap_PropertyGridInterface_GetPropertyByLabel, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_GetPropertyByName", _wrap_PropertyGridInterface_GetPropertyByName, METH_VARARGS, NULL},
	 { (char *)"PropertyGridInterface_GetPropertyEditor", (PyCFunction) _wrap_PropertyGridInterface_GetPropertyEditor, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_GetPropertyHelpString", (PyCFunction) _wrap_PropertyGridInterface_GetPropertyHelpString, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_GetPropertyImage", (PyCFunction) _wrap_PropertyGridInterface_GetPropertyImage, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_GetPropertyLabel", (PyCFunction) _wrap_PropertyGridInterface_GetPropertyLabel, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_GetPropertyName", (PyCFunction) _wrap_PropertyGridInterface_GetPropertyName, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_GetPropertyParent", (PyCFunction) _wrap_PropertyGridInterface_GetPropertyParent, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_GetPropertyValidator", (PyCFunction) _wrap_PropertyGridInterface_GetPropertyValidator, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_GetPropertyValue", (PyCFunction) _wrap_PropertyGridInterface_GetPropertyValue, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_GetPropertyValueAsString", (PyCFunction) _wrap_PropertyGridInterface_GetPropertyValueAsString, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_GetPropertyValueAsLong", (PyCFunction) _wrap_PropertyGridInterface_GetPropertyValueAsLong, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_GetPropertyValueAsULong", (PyCFunction) _wrap_PropertyGridInterface_GetPropertyValueAsULong, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_GetPropertyValueAsBool", (PyCFunction) _wrap_PropertyGridInterface_GetPropertyValueAsBool, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_GetPropertyValueAsDouble", (PyCFunction) _wrap_PropertyGridInterface_GetPropertyValueAsDouble, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_GetPropertyValueAsArrayString", (PyCFunction) _wrap_PropertyGridInterface_GetPropertyValueAsArrayString, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_GetPropertyValueAsArrayInt", (PyCFunction) _wrap_PropertyGridInterface_GetPropertyValueAsArrayInt, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_GetSelection", (PyCFunction)_wrap_PropertyGridInterface_GetSelection, METH_O, NULL},
	 { (char *)"PropertyGridInterface_GetSelectedProperties", (PyCFunction)_wrap_PropertyGridInterface_GetSelectedProperties, METH_O, NULL},
	 { (char *)"PropertyGridInterface_GetVIterator", (PyCFunction) _wrap_PropertyGridInterface_GetVIterator, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_HideProperty", (PyCFunction) _wrap_PropertyGridInterface_HideProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_InitAllTypeHandlers", (PyCFunction)_wrap_PropertyGridInterface_InitAllTypeHandlers, METH_NOARGS, NULL},
	 { (char *)"PropertyGridInterface_Insert", _wrap_PropertyGridInterface_Insert, METH_VARARGS, NULL},
	 { (char *)"PropertyGridInterface_IsPropertyCategory", (PyCFunction) _wrap_PropertyGridInterface_IsPropertyCategory, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_IsPropertyEnabled", (PyCFunction) _wrap_PropertyGridInterface_IsPropertyEnabled, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_IsPropertyExpanded", (PyCFunction) _wrap_PropertyGridInterface_IsPropertyExpanded, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_IsPropertyModified", (PyCFunction) _wrap_PropertyGridInterface_IsPropertyModified, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_IsPropertySelected", (PyCFunction) _wrap_PropertyGridInterface_IsPropertySelected, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_IsPropertyShown", (PyCFunction) _wrap_PropertyGridInterface_IsPropertyShown, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_IsPropertyValueUnspecified", (PyCFunction) _wrap_PropertyGridInterface_IsPropertyValueUnspecified, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_LimitPropertyEditing", (PyCFunction) _wrap_PropertyGridInterface_LimitPropertyEditing, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_RefreshGrid", (PyCFunction) _wrap_PropertyGridInterface_RefreshGrid, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_RegisterAdditionalEditors", (PyCFunction)_wrap_PropertyGridInterface_RegisterAdditionalEditors, METH_NOARGS, NULL},
	 { (char *)"PropertyGridInterface_ReplaceProperty", (PyCFunction) _wrap_PropertyGridInterface_ReplaceProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_RestoreEditableState", (PyCFunction) _wrap_PropertyGridInterface_RestoreEditableState, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_SaveEditableState", (PyCFunction) _wrap_PropertyGridInterface_SaveEditableState, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_SetBoolChoices", (PyCFunction) _wrap_PropertyGridInterface_SetBoolChoices, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_SetColumnProportion", (PyCFunction) _wrap_PropertyGridInterface_SetColumnProportion, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_GetColumnProportion", (PyCFunction) _wrap_PropertyGridInterface_GetColumnProportion, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_SetPropertyAttribute", (PyCFunction) _wrap_PropertyGridInterface_SetPropertyAttribute, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_SetPropertyAttributeAll", (PyCFunction) _wrap_PropertyGridInterface_SetPropertyAttributeAll, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_SetPropertyBackgroundColour", (PyCFunction) _wrap_PropertyGridInterface_SetPropertyBackgroundColour, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_SetPropertyColoursToDefault", (PyCFunction) _wrap_PropertyGridInterface_SetPropertyColoursToDefault, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_SetPropertyTextColour", (PyCFunction) _wrap_PropertyGridInterface_SetPropertyTextColour, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_GetPropertyBackgroundColour", (PyCFunction) _wrap_PropertyGridInterface_GetPropertyBackgroundColour, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_GetPropertyTextColour", (PyCFunction) _wrap_PropertyGridInterface_GetPropertyTextColour, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_SetPropertyCell", (PyCFunction) _wrap_PropertyGridInterface_SetPropertyCell, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_SetPropertyEditor", (PyCFunction) _wrap_PropertyGridInterface_SetPropertyEditor, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_SetPropertyLabel", (PyCFunction) _wrap_PropertyGridInterface_SetPropertyLabel, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_SetPropertyName", (PyCFunction) _wrap_PropertyGridInterface_SetPropertyName, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_SetPropertyReadOnly", (PyCFunction) _wrap_PropertyGridInterface_SetPropertyReadOnly, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_SetPropertyValueUnspecified", (PyCFunction) _wrap_PropertyGridInterface_SetPropertyValueUnspecified, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_SetPropertyHelpString", (PyCFunction) _wrap_PropertyGridInterface_SetPropertyHelpString, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_SetPropertyImage", (PyCFunction) _wrap_PropertyGridInterface_SetPropertyImage, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_SetPropertyMaxLength", (PyCFunction) _wrap_PropertyGridInterface_SetPropertyMaxLength, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_SetPropertyValidator", (PyCFunction) _wrap_PropertyGridInterface_SetPropertyValidator, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_SetPropertyValueString", (PyCFunction) _wrap_PropertyGridInterface_SetPropertyValueString, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_SetPropertyValue", (PyCFunction) _wrap_PropertyGridInterface_SetPropertyValue, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_SetValidationFailureBehavior", (PyCFunction) _wrap_PropertyGridInterface_SetValidationFailureBehavior, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_Sort", (PyCFunction) _wrap_PropertyGridInterface_Sort, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_SortChildren", (PyCFunction) _wrap_PropertyGridInterface_SortChildren, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_GetPropertyByNameA", (PyCFunction) _wrap_PropertyGridInterface_GetPropertyByNameA, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_GetEditorByName", (PyCFunction) _wrap_PropertyGridInterface_GetEditorByName, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_RefreshProperty", (PyCFunction) _wrap_PropertyGridInterface_RefreshProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridInterface_swigregister", PropertyGridInterface_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_PGCommonValue", (PyCFunction) _wrap_new_PGCommonValue, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"delete_PGCommonValue", (PyCFunction)_wrap_delete_PGCommonValue, METH_O, NULL},
	 { (char *)"PGCommonValue_GetEditableText", (PyCFunction)_wrap_PGCommonValue_GetEditableText, METH_O, NULL},
	 { (char *)"PGCommonValue_GetLabel", (PyCFunction)_wrap_PGCommonValue_GetLabel, METH_O, NULL},
	 { (char *)"PGCommonValue_GetRenderer", (PyCFunction)_wrap_PGCommonValue_GetRenderer, METH_O, NULL},
	 { (char *)"PGCommonValue_swigregister", PGCommonValue_swigregister, METH_VARARGS, NULL},
	 { (char *)"PGCommonValue_swiginit", PGCommonValue_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_PGValidationInfo", (PyCFunction)_wrap_new_PGValidationInfo, METH_NOARGS, NULL},
	 { (char *)"delete_PGValidationInfo", (PyCFunction)_wrap_delete_PGValidationInfo, METH_O, NULL},
	 { (char *)"PGValidationInfo_GetFailureBehavior", (PyCFunction)_wrap_PGValidationInfo_GetFailureBehavior, METH_O, NULL},
	 { (char *)"PGValidationInfo_GetFailureMessage", (PyCFunction)_wrap_PGValidationInfo_GetFailureMessage, METH_O, NULL},
	 { (char *)"PGValidationInfo_GetValue", (PyCFunction)_wrap_PGValidationInfo_GetValue, METH_O, NULL},
	 { (char *)"PGValidationInfo_SetFailureBehavior", (PyCFunction) _wrap_PGValidationInfo_SetFailureBehavior, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGValidationInfo_SetFailureMessage", (PyCFunction) _wrap_PGValidationInfo_SetFailureMessage, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGValidationInfo_swigregister", PGValidationInfo_swigregister, METH_VARARGS, NULL},
	 { (char *)"PGValidationInfo_swiginit", PGValidationInfo_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_PropertyGrid", (PyCFunction) _wrap_new_PropertyGrid, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"delete_PropertyGrid", (PyCFunction)_wrap_delete_PropertyGrid, METH_O, NULL},
	 { (char *)"PropertyGrid_AddActionTrigger", (PyCFunction) _wrap_PropertyGrid_AddActionTrigger, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_DedicateKey", (PyCFunction) _wrap_PropertyGrid_DedicateKey, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_AutoGetTranslation", (PyCFunction) _wrap_PropertyGrid_AutoGetTranslation, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_ChangePropertyValue", (PyCFunction) _wrap_PropertyGrid_ChangePropertyValue, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_CenterSplitter", (PyCFunction) _wrap_PropertyGrid_CenterSplitter, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_ClearActionTriggers", (PyCFunction) _wrap_PropertyGrid_ClearActionTriggers, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_CommitChangesFromEditor", (PyCFunction) _wrap_PropertyGrid_CommitChangesFromEditor, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_Create", (PyCFunction) _wrap_PropertyGrid_Create, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_EditorsValueWasModified", (PyCFunction)_wrap_PropertyGrid_EditorsValueWasModified, METH_O, NULL},
	 { (char *)"PropertyGrid_EditorsValueWasNotModified", (PyCFunction)_wrap_PropertyGrid_EditorsValueWasNotModified, METH_O, NULL},
	 { (char *)"PropertyGrid_EnableCategories", (PyCFunction) _wrap_PropertyGrid_EnableCategories, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_EnsureVisible", (PyCFunction) _wrap_PropertyGrid_EnsureVisible, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_FitColumns", (PyCFunction)_wrap_PropertyGrid_FitColumns, METH_O, NULL},
	 { (char *)"PropertyGrid_GetPanel", (PyCFunction)_wrap_PropertyGrid_GetPanel, METH_O, NULL},
	 { (char *)"PropertyGrid_GetCaptionBackgroundColour", (PyCFunction)_wrap_PropertyGrid_GetCaptionBackgroundColour, METH_O, NULL},
	 { (char *)"PropertyGrid_GetCaptionFont", _wrap_PropertyGrid_GetCaptionFont, METH_VARARGS, NULL},
	 { (char *)"PropertyGrid_GetCaptionForegroundColour", (PyCFunction)_wrap_PropertyGrid_GetCaptionForegroundColour, METH_O, NULL},
	 { (char *)"PropertyGrid_GetCellBackgroundColour", (PyCFunction)_wrap_PropertyGrid_GetCellBackgroundColour, METH_O, NULL},
	 { (char *)"PropertyGrid_GetCellDisabledTextColour", (PyCFunction)_wrap_PropertyGrid_GetCellDisabledTextColour, METH_O, NULL},
	 { (char *)"PropertyGrid_GetCellTextColour", (PyCFunction)_wrap_PropertyGrid_GetCellTextColour, METH_O, NULL},
	 { (char *)"PropertyGrid_GetColumnCount", (PyCFunction)_wrap_PropertyGrid_GetColumnCount, METH_O, NULL},
	 { (char *)"PropertyGrid_GetEmptySpaceColour", (PyCFunction)_wrap_PropertyGrid_GetEmptySpaceColour, METH_O, NULL},
	 { (char *)"PropertyGrid_GetFontHeight", (PyCFunction)_wrap_PropertyGrid_GetFontHeight, METH_O, NULL},
	 { (char *)"PropertyGrid_GetGrid", (PyCFunction)_wrap_PropertyGrid_GetGrid, METH_O, NULL},
	 { (char *)"PropertyGrid_GetImageRect", (PyCFunction) _wrap_PropertyGrid_GetImageRect, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_GetImageSize", (PyCFunction) _wrap_PropertyGrid_GetImageSize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_GetLastItem", _wrap_PropertyGrid_GetLastItem, METH_VARARGS, NULL},
	 { (char *)"PropertyGrid_GetLineColour", (PyCFunction)_wrap_PropertyGrid_GetLineColour, METH_O, NULL},
	 { (char *)"PropertyGrid_GetMarginColour", (PyCFunction)_wrap_PropertyGrid_GetMarginColour, METH_O, NULL},
	 { (char *)"PropertyGrid_GetMarginWidth", (PyCFunction)_wrap_PropertyGrid_GetMarginWidth, METH_O, NULL},
	 { (char *)"PropertyGrid_GetUncommittedPropertyValue", (PyCFunction)_wrap_PropertyGrid_GetUncommittedPropertyValue, METH_O, NULL},
	 { (char *)"PropertyGrid_GetRoot", (PyCFunction)_wrap_PropertyGrid_GetRoot, METH_O, NULL},
	 { (char *)"PropertyGrid_GetRowHeight", (PyCFunction)_wrap_PropertyGrid_GetRowHeight, METH_O, NULL},
	 { (char *)"PropertyGrid_GetSelectedProperty", (PyCFunction)_wrap_PropertyGrid_GetSelectedProperty, METH_O, NULL},
	 { (char *)"PropertyGrid_GetSelectionBackgroundColour", (PyCFunction)_wrap_PropertyGrid_GetSelectionBackgroundColour, METH_O, NULL},
	 { (char *)"PropertyGrid_GetSelectionForegroundColour", (PyCFunction)_wrap_PropertyGrid_GetSelectionForegroundColour, METH_O, NULL},
	 { (char *)"PropertyGrid_GetSplitterPosition", (PyCFunction) _wrap_PropertyGrid_GetSplitterPosition, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_GetEditorTextCtrl", (PyCFunction)_wrap_PropertyGrid_GetEditorTextCtrl, METH_O, NULL},
	 { (char *)"PropertyGrid_GetValidationInfo", (PyCFunction)_wrap_PropertyGrid_GetValidationInfo, METH_O, NULL},
	 { (char *)"PropertyGrid_GetVerticalSpacing", (PyCFunction)_wrap_PropertyGrid_GetVerticalSpacing, METH_O, NULL},
	 { (char *)"PropertyGrid_IsEditorFocused", (PyCFunction)_wrap_PropertyGrid_IsEditorFocused, METH_O, NULL},
	 { (char *)"PropertyGrid_IsEditorsValueModified", (PyCFunction)_wrap_PropertyGrid_IsEditorsValueModified, METH_O, NULL},
	 { (char *)"PropertyGrid_HitTest", (PyCFunction) _wrap_PropertyGrid_HitTest, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_IsAnyModified", (PyCFunction)_wrap_PropertyGrid_IsAnyModified, METH_O, NULL},
	 { (char *)"PropertyGrid_IsFrozen", (PyCFunction)_wrap_PropertyGrid_IsFrozen, METH_O, NULL},
	 { (char *)"PropertyGrid_OnTLPChanging", (PyCFunction) _wrap_PropertyGrid_OnTLPChanging, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_ResetColours", (PyCFunction)_wrap_PropertyGrid_ResetColours, METH_O, NULL},
	 { (char *)"PropertyGrid_ResetColumnSizes", (PyCFunction) _wrap_PropertyGrid_ResetColumnSizes, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_SelectProperty", (PyCFunction) _wrap_PropertyGrid_SelectProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_SetSelection", (PyCFunction) _wrap_PropertyGrid_SetSelection, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_AddToSelection", (PyCFunction) _wrap_PropertyGrid_AddToSelection, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_RemoveFromSelection", (PyCFunction) _wrap_PropertyGrid_RemoveFromSelection, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_MakeColumnEditable", (PyCFunction) _wrap_PropertyGrid_MakeColumnEditable, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_BeginLabelEdit", (PyCFunction) _wrap_PropertyGrid_BeginLabelEdit, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_EndLabelEdit", (PyCFunction) _wrap_PropertyGrid_EndLabelEdit, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_GetLabelEditor", (PyCFunction)_wrap_PropertyGrid_GetLabelEditor, METH_O, NULL},
	 { (char *)"PropertyGrid_SetCaptionBackgroundColour", (PyCFunction) _wrap_PropertyGrid_SetCaptionBackgroundColour, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_SetCaptionTextColour", (PyCFunction) _wrap_PropertyGrid_SetCaptionTextColour, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_SetCellBackgroundColour", (PyCFunction) _wrap_PropertyGrid_SetCellBackgroundColour, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_SetCellDisabledTextColour", (PyCFunction) _wrap_PropertyGrid_SetCellDisabledTextColour, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_SetCellTextColour", (PyCFunction) _wrap_PropertyGrid_SetCellTextColour, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_SetColumnCount", (PyCFunction) _wrap_PropertyGrid_SetColumnCount, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_SetCurrentCategory", (PyCFunction) _wrap_PropertyGrid_SetCurrentCategory, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_SetEmptySpaceColour", (PyCFunction) _wrap_PropertyGrid_SetEmptySpaceColour, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_SetLineColour", (PyCFunction) _wrap_PropertyGrid_SetLineColour, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_SetMarginColour", (PyCFunction) _wrap_PropertyGrid_SetMarginColour, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_SetSelectionBackgroundColour", (PyCFunction) _wrap_PropertyGrid_SetSelectionBackgroundColour, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_SetSelectionTextColour", (PyCFunction) _wrap_PropertyGrid_SetSelectionTextColour, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_SetSplitterPosition", (PyCFunction) _wrap_PropertyGrid_SetSplitterPosition, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_SetSortFunction", (PyCFunction) _wrap_PropertyGrid_SetSortFunction, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_GetSortFunction", (PyCFunction)_wrap_PropertyGrid_GetSortFunction, METH_O, NULL},
	 { (char *)"PropertyGrid_SetUnspecifiedValueAppearance", (PyCFunction) _wrap_PropertyGrid_SetUnspecifiedValueAppearance, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_GetUnspecifiedValueAppearance", (PyCFunction)_wrap_PropertyGrid_GetUnspecifiedValueAppearance, METH_O, NULL},
	 { (char *)"PropertyGrid_GetUnspecifiedValueText", (PyCFunction) _wrap_PropertyGrid_GetUnspecifiedValueText, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_SetVirtualWidth", (PyCFunction) _wrap_PropertyGrid_SetVirtualWidth, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_SetSplitterLeft", (PyCFunction) _wrap_PropertyGrid_SetSplitterLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_SetVerticalSpacing", (PyCFunction) _wrap_PropertyGrid_SetVerticalSpacing, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_ShowPropertyError", (PyCFunction) _wrap_PropertyGrid_ShowPropertyError, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_HasVirtualWidth", (PyCFunction)_wrap_PropertyGrid_HasVirtualWidth, METH_O, NULL},
	 { (char *)"PropertyGrid_GetCommonValue", (PyCFunction) _wrap_PropertyGrid_GetCommonValue, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_GetCommonValueCount", (PyCFunction)_wrap_PropertyGrid_GetCommonValueCount, METH_O, NULL},
	 { (char *)"PropertyGrid_GetCommonValueLabel", (PyCFunction) _wrap_PropertyGrid_GetCommonValueLabel, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_GetUnspecifiedCommonValue", (PyCFunction)_wrap_PropertyGrid_GetUnspecifiedCommonValue, METH_O, NULL},
	 { (char *)"PropertyGrid_SetUnspecifiedCommonValue", (PyCFunction) _wrap_PropertyGrid_SetUnspecifiedCommonValue, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_GenerateEditorButton", (PyCFunction) _wrap_PropertyGrid_GenerateEditorButton, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_FixPosForTextCtrl", (PyCFunction) _wrap_PropertyGrid_FixPosForTextCtrl, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_GenerateEditorTextCtrl", (PyCFunction) _wrap_PropertyGrid_GenerateEditorTextCtrl, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_GenerateEditorTextCtrlAndButton", (PyCFunction) _wrap_PropertyGrid_GenerateEditorTextCtrlAndButton, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_GetGoodEditorDialogPosition", (PyCFunction) _wrap_PropertyGrid_GetGoodEditorDialogPosition, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_ExpandEscapeSequences", (PyCFunction) _wrap_PropertyGrid_ExpandEscapeSequences, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_CreateEscapeSequences", (PyCFunction) _wrap_PropertyGrid_CreateEscapeSequences, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_GetPropertyRect", (PyCFunction) _wrap_PropertyGrid_GetPropertyRect, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_GetEditorControl", (PyCFunction)_wrap_PropertyGrid_GetEditorControl, METH_O, NULL},
	 { (char *)"PropertyGrid_GetPrimaryEditor", (PyCFunction)_wrap_PropertyGrid_GetPrimaryEditor, METH_O, NULL},
	 { (char *)"PropertyGrid_GetEditorControlSecondary", (PyCFunction)_wrap_PropertyGrid_GetEditorControlSecondary, METH_O, NULL},
	 { (char *)"PropertyGrid_RefreshEditor", (PyCFunction)_wrap_PropertyGrid_RefreshEditor, METH_O, NULL},
	 { (char *)"PropertyGrid_HandleCustomEditorEvent", (PyCFunction) _wrap_PropertyGrid_HandleCustomEditorEvent, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_GetInternalFlags", (PyCFunction)_wrap_PropertyGrid_GetInternalFlags, METH_O, NULL},
	 { (char *)"PropertyGrid_HasInternalFlag", (PyCFunction) _wrap_PropertyGrid_HasInternalFlag, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_SetInternalFlag", (PyCFunction) _wrap_PropertyGrid_SetInternalFlag, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_ClearInternalFlag", (PyCFunction) _wrap_PropertyGrid_ClearInternalFlag, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_DoubleToString", (PyCFunction) _wrap_PropertyGrid_DoubleToString, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_ValueChangeInEvent", (PyCFunction) _wrap_PropertyGrid_ValueChangeInEvent, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_WasValueChangedInEvent", (PyCFunction)_wrap_PropertyGrid_WasValueChangedInEvent, METH_O, NULL},
	 { (char *)"PropertyGrid_IsMainButtonEvent", (PyCFunction) _wrap_PropertyGrid_IsMainButtonEvent, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_DoHidePropertyError", (PyCFunction) _wrap_PropertyGrid_DoHidePropertyError, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_GetSpacingY", (PyCFunction)_wrap_PropertyGrid_GetSpacingY, METH_O, NULL},
	 { (char *)"PropertyGrid_SetupTextCtrlValue", (PyCFunction) _wrap_PropertyGrid_SetupTextCtrlValue, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_UnfocusEditor", (PyCFunction)_wrap_PropertyGrid_UnfocusEditor, METH_O, NULL},
	 { (char *)"PropertyGrid_GetPropertyDefaultCell", (PyCFunction)_wrap_PropertyGrid_GetPropertyDefaultCell, METH_O, NULL},
	 { (char *)"PropertyGrid_GetCategoryDefaultCell", (PyCFunction)_wrap_PropertyGrid_GetCategoryDefaultCell, METH_O, NULL},
	 { (char *)"PropertyGrid_GetItemAtY", (PyCFunction) _wrap_PropertyGrid_GetItemAtY, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGrid_swigregister", PropertyGrid_swigregister, METH_VARARGS, NULL},
	 { (char *)"PropertyGrid_swiginit", PropertyGrid_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_PropertyGridEvent", (PyCFunction) _wrap_new_PropertyGridEvent, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"delete_PropertyGridEvent", (PyCFunction)_wrap_delete_PropertyGridEvent, METH_O, NULL},
	 { (char *)"PropertyGridEvent_GetColumn", (PyCFunction)_wrap_PropertyGridEvent_GetColumn, METH_O, NULL},
	 { (char *)"PropertyGridEvent_GetMainParent", (PyCFunction)_wrap_PropertyGridEvent_GetMainParent, METH_O, NULL},
	 { (char *)"PropertyGridEvent_GetProperty", (PyCFunction)_wrap_PropertyGridEvent_GetProperty, METH_O, NULL},
	 { (char *)"PropertyGridEvent_GetValidationInfo", (PyCFunction)_wrap_PropertyGridEvent_GetValidationInfo, METH_O, NULL},
	 { (char *)"PropertyGridEvent_CanVeto", (PyCFunction)_wrap_PropertyGridEvent_CanVeto, METH_O, NULL},
	 { (char *)"PropertyGridEvent_Veto", (PyCFunction) _wrap_PropertyGridEvent_Veto, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridEvent_GetPropertyName", (PyCFunction)_wrap_PropertyGridEvent_GetPropertyName, METH_O, NULL},
	 { (char *)"PropertyGridEvent_GetPropertyValue", (PyCFunction)_wrap_PropertyGridEvent_GetPropertyValue, METH_O, NULL},
	 { (char *)"PropertyGridEvent_GetValue", (PyCFunction)_wrap_PropertyGridEvent_GetValue, METH_O, NULL},
	 { (char *)"PropertyGridEvent_SetValidationFailureBehavior", (PyCFunction) _wrap_PropertyGridEvent_SetValidationFailureBehavior, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridEvent_SetValidationFailureMessage", (PyCFunction) _wrap_PropertyGridEvent_SetValidationFailureMessage, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridEvent_SetColumn", (PyCFunction) _wrap_PropertyGridEvent_SetColumn, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridEvent_SetCanVeto", (PyCFunction) _wrap_PropertyGridEvent_SetCanVeto, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridEvent_WasVetoed", (PyCFunction)_wrap_PropertyGridEvent_WasVetoed, METH_O, NULL},
	 { (char *)"PropertyGridEvent_SetProperty", (PyCFunction) _wrap_PropertyGridEvent_SetProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridEvent_swigregister", PropertyGridEvent_swigregister, METH_VARARGS, NULL},
	 { (char *)"PropertyGridEvent_swiginit", PropertyGridEvent_swiginit, METH_VARARGS, NULL},
	 { (char *)"delete_PropertyGridPopulator", (PyCFunction)_wrap_delete_PropertyGridPopulator, METH_O, NULL},
	 { (char *)"PropertyGridPopulator_SetState", (PyCFunction) _wrap_PropertyGridPopulator_SetState, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridPopulator_SetGrid", (PyCFunction) _wrap_PropertyGridPopulator_SetGrid, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridPopulator_Add", (PyCFunction) _wrap_PropertyGridPopulator_Add, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridPopulator_AddChildren", (PyCFunction) _wrap_PropertyGridPopulator_AddChildren, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridPopulator_AddAttribute", (PyCFunction) _wrap_PropertyGridPopulator_AddAttribute, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridPopulator_DoScanForChildren", (PyCFunction)_wrap_PropertyGridPopulator_DoScanForChildren, METH_O, NULL},
	 { (char *)"PropertyGridPopulator_GetCurParent", (PyCFunction)_wrap_PropertyGridPopulator_GetCurParent, METH_O, NULL},
	 { (char *)"PropertyGridPopulator_GetState", _wrap_PropertyGridPopulator_GetState, METH_VARARGS, NULL},
	 { (char *)"PropertyGridPopulator_ToLongPCT", (PyCFunction) _wrap_PropertyGridPopulator_ToLongPCT, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridPopulator_ParseChoices", (PyCFunction) _wrap_PropertyGridPopulator_ParseChoices, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridPopulator_ProcessError", (PyCFunction) _wrap_PropertyGridPopulator_ProcessError, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridPopulator_swigregister", PropertyGridPopulator_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_PGWindowList", (PyCFunction)_wrap_new_PGWindowList, METH_NOARGS, NULL},
	 { (char *)"PGWindowList_SetSecondary", (PyCFunction) _wrap_PGWindowList_SetSecondary, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGWindowList_m_primary_set", _wrap_PGWindowList_m_primary_set, METH_VARARGS, NULL},
	 { (char *)"PGWindowList_m_primary_get", (PyCFunction)_wrap_PGWindowList_m_primary_get, METH_O, NULL},
	 { (char *)"PGWindowList_m_secondary_set", _wrap_PGWindowList_m_secondary_set, METH_VARARGS, NULL},
	 { (char *)"PGWindowList_m_secondary_get", (PyCFunction)_wrap_PGWindowList_m_secondary_get, METH_O, NULL},
	 { (char *)"PGWindowList_swigregister", PGWindowList_swigregister, METH_VARARGS, NULL},
	 { (char *)"PGWindowList_swiginit", PGWindowList_swiginit, METH_VARARGS, NULL},
	 { (char *)"delete_PGEditor", (PyCFunction)_wrap_delete_PGEditor, METH_O, NULL},
	 { (char *)"PGEditor_GetName", (PyCFunction)_wrap_PGEditor_GetName, METH_O, NULL},
	 { (char *)"PGEditor_CreateControls", (PyCFunction) _wrap_PGEditor_CreateControls, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGEditor_UpdateControl", (PyCFunction) _wrap_PGEditor_UpdateControl, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGEditor_DrawValue", (PyCFunction) _wrap_PGEditor_DrawValue, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGEditor_OnEvent", (PyCFunction) _wrap_PGEditor_OnEvent, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGEditor_SetControlAppearance", (PyCFunction) _wrap_PGEditor_SetControlAppearance, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGEditor_SetValueToUnspecified", (PyCFunction) _wrap_PGEditor_SetValueToUnspecified, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGEditor_SetControlStringValue", (PyCFunction) _wrap_PGEditor_SetControlStringValue, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGEditor_SetControlIntValue", (PyCFunction) _wrap_PGEditor_SetControlIntValue, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGEditor_InsertItem", (PyCFunction) _wrap_PGEditor_InsertItem, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGEditor_DeleteItem", (PyCFunction) _wrap_PGEditor_DeleteItem, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGEditor_OnFocus", (PyCFunction) _wrap_PGEditor_OnFocus, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGEditor_CanContainCustomImage", (PyCFunction)_wrap_PGEditor_CanContainCustomImage, METH_O, NULL},
	 { (char *)"PGEditor_m_clientData_set", _wrap_PGEditor_m_clientData_set, METH_VARARGS, NULL},
	 { (char *)"PGEditor_m_clientData_get", (PyCFunction)_wrap_PGEditor_m_clientData_get, METH_O, NULL},
	 { (char *)"PGEditor_swigregister", PGEditor_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_PGTextCtrlEditor", (PyCFunction)_wrap_new_PGTextCtrlEditor, METH_NOARGS, NULL},
	 { (char *)"delete_PGTextCtrlEditor", (PyCFunction)_wrap_delete_PGTextCtrlEditor, METH_O, NULL},
	 { (char *)"PGTextCtrlEditor_OnTextCtrlEvent", (PyCFunction) _wrap_PGTextCtrlEditor_OnTextCtrlEvent, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGTextCtrlEditor_GetTextCtrlValueFromControl", (PyCFunction) _wrap_PGTextCtrlEditor_GetTextCtrlValueFromControl, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGTextCtrlEditor_swigregister", PGTextCtrlEditor_swigregister, METH_VARARGS, NULL},
	 { (char *)"PGTextCtrlEditor_swiginit", PGTextCtrlEditor_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_PGChoiceEditor", (PyCFunction)_wrap_new_PGChoiceEditor, METH_NOARGS, NULL},
	 { (char *)"delete_PGChoiceEditor", (PyCFunction)_wrap_delete_PGChoiceEditor, METH_O, NULL},
	 { (char *)"PGChoiceEditor_CreateControlsBase", (PyCFunction) _wrap_PGChoiceEditor_CreateControlsBase, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGChoiceEditor_swigregister", PGChoiceEditor_swigregister, METH_VARARGS, NULL},
	 { (char *)"PGChoiceEditor_swiginit", PGChoiceEditor_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_PGComboBoxEditor", (PyCFunction)_wrap_new_PGComboBoxEditor, METH_NOARGS, NULL},
	 { (char *)"delete_PGComboBoxEditor", (PyCFunction)_wrap_delete_PGComboBoxEditor, METH_O, NULL},
	 { (char *)"PGComboBoxEditor_swigregister", PGComboBoxEditor_swigregister, METH_VARARGS, NULL},
	 { (char *)"PGComboBoxEditor_swiginit", PGComboBoxEditor_swiginit, METH_VARARGS, NULL},
	 { (char *)"delete_PGEditorDialogAdapter", (PyCFunction)_wrap_delete_PGEditorDialogAdapter, METH_O, NULL},
	 { (char *)"PGEditorDialogAdapter_ShowDialog", (PyCFunction) _wrap_PGEditorDialogAdapter_ShowDialog, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGEditorDialogAdapter_DoShowDialog", (PyCFunction) _wrap_PGEditorDialogAdapter_DoShowDialog, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGEditorDialogAdapter_SetValue", (PyCFunction) _wrap_PGEditorDialogAdapter_SetValue, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGEditorDialogAdapter_GetValue", (PyCFunction)_wrap_PGEditorDialogAdapter_GetValue, METH_O, NULL},
	 { (char *)"PGEditorDialogAdapter_m_clientData_set", _wrap_PGEditorDialogAdapter_m_clientData_set, METH_VARARGS, NULL},
	 { (char *)"PGEditorDialogAdapter_m_clientData_get", (PyCFunction)_wrap_PGEditorDialogAdapter_m_clientData_get, METH_O, NULL},
	 { (char *)"PGEditorDialogAdapter_swigregister", PGEditorDialogAdapter_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_PGMultiButton", (PyCFunction) _wrap_new_PGMultiButton, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"delete_PGMultiButton", (PyCFunction)_wrap_delete_PGMultiButton, METH_O, NULL},
	 { (char *)"PGMultiButton_GetButton", _wrap_PGMultiButton_GetButton, METH_VARARGS, NULL},
	 { (char *)"PGMultiButton_GetButtonId", (PyCFunction) _wrap_PGMultiButton_GetButtonId, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGMultiButton_GetCount", (PyCFunction)_wrap_PGMultiButton_GetCount, METH_O, NULL},
	 { (char *)"PGMultiButton_Add", (PyCFunction) _wrap_PGMultiButton_Add, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGMultiButton_GetPrimarySize", (PyCFunction)_wrap_PGMultiButton_GetPrimarySize, METH_O, NULL},
	 { (char *)"PGMultiButton_Finalize", (PyCFunction) _wrap_PGMultiButton_Finalize, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGMultiButton_AddBitmapButton", (PyCFunction) _wrap_PGMultiButton_AddBitmapButton, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGMultiButton_swigregister", PGMultiButton_swigregister, METH_VARARGS, NULL},
	 { (char *)"PGMultiButton_swiginit", PGMultiButton_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_StringProperty", (PyCFunction) _wrap_new_StringProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"delete_StringProperty", (PyCFunction)_wrap_delete_StringProperty, METH_O, NULL},
	 { (char *)"StringProperty_swigregister", StringProperty_swigregister, METH_VARARGS, NULL},
	 { (char *)"StringProperty_swiginit", StringProperty_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_NumericPropertyValidator", (PyCFunction) _wrap_new_NumericPropertyValidator, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"delete_NumericPropertyValidator", (PyCFunction)_wrap_delete_NumericPropertyValidator, METH_O, NULL},
	 { (char *)"NumericPropertyValidator_Validate", (PyCFunction) _wrap_NumericPropertyValidator_Validate, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"NumericPropertyValidator_swigregister", NumericPropertyValidator_swigregister, METH_VARARGS, NULL},
	 { (char *)"NumericPropertyValidator_swiginit", NumericPropertyValidator_swiginit, METH_VARARGS, NULL},
	 { (char *)"delete_IntProperty", (PyCFunction)_wrap_delete_IntProperty, METH_O, NULL},
	 { (char *)"new_IntProperty", _wrap_new_IntProperty, METH_VARARGS, NULL},
	 { (char *)"IntProperty_GetClassValidator", (PyCFunction)_wrap_IntProperty_GetClassValidator, METH_NOARGS, NULL},
	 { (char *)"IntProperty_DoValidation", (PyCFunction) _wrap_IntProperty_DoValidation, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"IntProperty_swigregister", IntProperty_swigregister, METH_VARARGS, NULL},
	 { (char *)"IntProperty_swiginit", IntProperty_swiginit, METH_VARARGS, NULL},
	 { (char *)"delete_UIntProperty", (PyCFunction)_wrap_delete_UIntProperty, METH_O, NULL},
	 { (char *)"new_UIntProperty", _wrap_new_UIntProperty, METH_VARARGS, NULL},
	 { (char *)"UIntProperty_swigregister", UIntProperty_swigregister, METH_VARARGS, NULL},
	 { (char *)"UIntProperty_swiginit", UIntProperty_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_FloatProperty", (PyCFunction) _wrap_new_FloatProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"delete_FloatProperty", (PyCFunction)_wrap_delete_FloatProperty, METH_O, NULL},
	 { (char *)"FloatProperty_DoValidation", (PyCFunction) _wrap_FloatProperty_DoValidation, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"FloatProperty_GetClassValidator", (PyCFunction)_wrap_FloatProperty_GetClassValidator, METH_NOARGS, NULL},
	 { (char *)"FloatProperty_swigregister", FloatProperty_swigregister, METH_VARARGS, NULL},
	 { (char *)"FloatProperty_swiginit", FloatProperty_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_EnumProperty", (PyCFunction) _wrap_new_EnumProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"delete_EnumProperty", (PyCFunction)_wrap_delete_EnumProperty, METH_O, NULL},
	 { (char *)"EnumProperty_GetItemCount", (PyCFunction)_wrap_EnumProperty_GetItemCount, METH_O, NULL},
	 { (char *)"EnumProperty_GetIndexForValue", (PyCFunction) _wrap_EnumProperty_GetIndexForValue, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"EnumProperty_swigregister", EnumProperty_swigregister, METH_VARARGS, NULL},
	 { (char *)"EnumProperty_swiginit", EnumProperty_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_EditEnumProperty", _wrap_new_EditEnumProperty, METH_VARARGS, NULL},
	 { (char *)"delete_EditEnumProperty", (PyCFunction)_wrap_delete_EditEnumProperty, METH_O, NULL},
	 { (char *)"EditEnumProperty_swigregister", EditEnumProperty_swigregister, METH_VARARGS, NULL},
	 { (char *)"EditEnumProperty_swiginit", EditEnumProperty_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_FlagsProperty", (PyCFunction) _wrap_new_FlagsProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"delete_FlagsProperty", (PyCFunction)_wrap_delete_FlagsProperty, METH_O, NULL},
	 { (char *)"FlagsProperty_GetItemCount", (PyCFunction)_wrap_FlagsProperty_GetItemCount, METH_O, NULL},
	 { (char *)"FlagsProperty_GetLabel", (PyCFunction) _wrap_FlagsProperty_GetLabel, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"FlagsProperty_swigregister", FlagsProperty_swigregister, METH_VARARGS, NULL},
	 { (char *)"FlagsProperty_swiginit", FlagsProperty_swiginit, METH_VARARGS, NULL},
	 { (char *)"PGFileDialogAdapter_swigregister", PGFileDialogAdapter_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_FileProperty", (PyCFunction) _wrap_new_FileProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"delete_FileProperty", (PyCFunction)_wrap_delete_FileProperty, METH_O, NULL},
	 { (char *)"FileProperty_GetClassValidator", (PyCFunction)_wrap_FileProperty_GetClassValidator, METH_NOARGS, NULL},
	 { (char *)"FileProperty_GetFileName", (PyCFunction)_wrap_FileProperty_GetFileName, METH_O, NULL},
	 { (char *)"FileProperty_swigregister", FileProperty_swigregister, METH_VARARGS, NULL},
	 { (char *)"FileProperty_swiginit", FileProperty_swiginit, METH_VARARGS, NULL},
	 { (char *)"PGLongStringDialogAdapter_swigregister", PGLongStringDialogAdapter_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_LongStringProperty", (PyCFunction) _wrap_new_LongStringProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"delete_LongStringProperty", (PyCFunction)_wrap_delete_LongStringProperty, METH_O, NULL},
	 { (char *)"LongStringProperty_OnButtonClick", (PyCFunction) _wrap_LongStringProperty_OnButtonClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"LongStringProperty_DisplayEditorDialog", (PyCFunction) _wrap_LongStringProperty_DisplayEditorDialog, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"LongStringProperty_swigregister", LongStringProperty_swigregister, METH_VARARGS, NULL},
	 { (char *)"LongStringProperty_swiginit", LongStringProperty_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_ArrayStringProperty", (PyCFunction) _wrap_new_ArrayStringProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"delete_ArrayStringProperty", (PyCFunction)_wrap_delete_ArrayStringProperty, METH_O, NULL},
	 { (char *)"ArrayStringProperty_ConvertArrayToString", (PyCFunction) _wrap_ArrayStringProperty_ConvertArrayToString, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ArrayStringProperty_OnCustomStringEdit", (PyCFunction) _wrap_ArrayStringProperty_OnCustomStringEdit, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ArrayStringProperty_OnButtonClick", (PyCFunction) _wrap_ArrayStringProperty_OnButtonClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ArrayStringProperty_ArrayStringToString", (PyCFunction) _wrap_ArrayStringProperty_ArrayStringToString, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"ArrayStringProperty_swigregister", ArrayStringProperty_swigregister, METH_VARARGS, NULL},
	 { (char *)"ArrayStringProperty_swiginit", ArrayStringProperty_swiginit, METH_VARARGS, NULL},
	 { (char *)"delete_PGArrayEditorDialog", (PyCFunction)_wrap_delete_PGArrayEditorDialog, METH_O, NULL},
	 { (char *)"PGArrayEditorDialog_Init", (PyCFunction)_wrap_PGArrayEditorDialog_Init, METH_O, NULL},
	 { (char *)"PGArrayEditorDialog_Create", (PyCFunction) _wrap_PGArrayEditorDialog_Create, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGArrayEditorDialog_EnableCustomNewAction", (PyCFunction)_wrap_PGArrayEditorDialog_EnableCustomNewAction, METH_O, NULL},
	 { (char *)"PGArrayEditorDialog_SetDialogValue", (PyCFunction) _wrap_PGArrayEditorDialog_SetDialogValue, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGArrayEditorDialog_GetDialogValue", (PyCFunction)_wrap_PGArrayEditorDialog_GetDialogValue, METH_O, NULL},
	 { (char *)"PGArrayEditorDialog_GetTextCtrlValidator", (PyCFunction)_wrap_PGArrayEditorDialog_GetTextCtrlValidator, METH_O, NULL},
	 { (char *)"PGArrayEditorDialog_IsModified", (PyCFunction)_wrap_PGArrayEditorDialog_IsModified, METH_O, NULL},
	 { (char *)"PGArrayEditorDialog_GetSelection", (PyCFunction)_wrap_PGArrayEditorDialog_GetSelection, METH_O, NULL},
	 { (char *)"PGArrayEditorDialog_OnAddClick", (PyCFunction) _wrap_PGArrayEditorDialog_OnAddClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGArrayEditorDialog_OnDeleteClick", (PyCFunction) _wrap_PGArrayEditorDialog_OnDeleteClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGArrayEditorDialog_OnUpClick", (PyCFunction) _wrap_PGArrayEditorDialog_OnUpClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGArrayEditorDialog_OnDownClick", (PyCFunction) _wrap_PGArrayEditorDialog_OnDownClick, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGArrayEditorDialog_OnEndLabelEdit", (PyCFunction) _wrap_PGArrayEditorDialog_OnEndLabelEdit, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGArrayEditorDialog_OnIdle", (PyCFunction) _wrap_PGArrayEditorDialog_OnIdle, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGArrayEditorDialog_swigregister", PGArrayEditorDialog_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_PGArrayStringEditorDialog", (PyCFunction)_wrap_new_PGArrayStringEditorDialog, METH_NOARGS, NULL},
	 { (char *)"delete_PGArrayStringEditorDialog", (PyCFunction)_wrap_delete_PGArrayStringEditorDialog, METH_O, NULL},
	 { (char *)"PGArrayStringEditorDialog_Init", (PyCFunction)_wrap_PGArrayStringEditorDialog_Init, METH_O, NULL},
	 { (char *)"PGArrayStringEditorDialog_SetCustomButton", (PyCFunction) _wrap_PGArrayStringEditorDialog_SetCustomButton, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGArrayStringEditorDialog_OnCustomNewAction", (PyCFunction) _wrap_PGArrayStringEditorDialog_OnCustomNewAction, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PGArrayStringEditorDialog_swigregister", PGArrayStringEditorDialog_swigregister, METH_VARARGS, NULL},
	 { (char *)"PGArrayStringEditorDialog_swiginit", PGArrayStringEditorDialog_swiginit, METH_VARARGS, NULL},
	 { (char *)"ColourPropertyValue_m_type_set", _wrap_ColourPropertyValue_m_type_set, METH_VARARGS, NULL},
	 { (char *)"ColourPropertyValue_m_type_get", (PyCFunction)_wrap_ColourPropertyValue_m_type_get, METH_O, NULL},
	 { (char *)"ColourPropertyValue_m_colour_set", _wrap_ColourPropertyValue_m_colour_set, METH_VARARGS, NULL},
	 { (char *)"ColourPropertyValue_m_colour_get", (PyCFunction)_wrap_ColourPropertyValue_m_colour_get, METH_O, NULL},
	 { (char *)"delete_ColourPropertyValue", (PyCFunction)_wrap_delete_ColourPropertyValue, METH_O, NULL},
	 { (char *)"ColourPropertyValue_Init", (PyCFunction) _wrap_ColourPropertyValue_Init, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"new_ColourPropertyValue", _wrap_new_ColourPropertyValue, METH_VARARGS, NULL},
	 { (char *)"ColourPropertyValue_swigregister", ColourPropertyValue_swigregister, METH_VARARGS, NULL},
	 { (char *)"ColourPropertyValue_swiginit", ColourPropertyValue_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_FontProperty", (PyCFunction) _wrap_new_FontProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"delete_FontProperty", (PyCFunction)_wrap_delete_FontProperty, METH_O, NULL},
	 { (char *)"FontProperty_swigregister", FontProperty_swigregister, METH_VARARGS, NULL},
	 { (char *)"FontProperty_swiginit", FontProperty_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_SystemColourProperty", (PyCFunction) _wrap_new_SystemColourProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"delete_SystemColourProperty", (PyCFunction)_wrap_delete_SystemColourProperty, METH_O, NULL},
	 { (char *)"SystemColourProperty_ColourToString", (PyCFunction) _wrap_SystemColourProperty_ColourToString, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"SystemColourProperty_GetCustomColourIndex", (PyCFunction)_wrap_SystemColourProperty_GetCustomColourIndex, METH_O, NULL},
	 { (char *)"SystemColourProperty_QueryColourFromUser", (PyCFunction) _wrap_SystemColourProperty_QueryColourFromUser, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"SystemColourProperty_GetColour", (PyCFunction) _wrap_SystemColourProperty_GetColour, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"SystemColourProperty_GetVal", (PyCFunction) _wrap_SystemColourProperty_GetVal, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"SystemColourProperty_swigregister", SystemColourProperty_swigregister, METH_VARARGS, NULL},
	 { (char *)"SystemColourProperty_swiginit", SystemColourProperty_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_ColourProperty", (PyCFunction) _wrap_new_ColourProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"delete_ColourProperty", (PyCFunction)_wrap_delete_ColourProperty, METH_O, NULL},
	 { (char *)"ColourProperty_swigregister", ColourProperty_swigregister, METH_VARARGS, NULL},
	 { (char *)"ColourProperty_swiginit", ColourProperty_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_PropertyGridPage", (PyCFunction)_wrap_new_PropertyGridPage, METH_NOARGS, NULL},
	 { (char *)"delete_PropertyGridPage", (PyCFunction)_wrap_delete_PropertyGridPage, METH_O, NULL},
	 { (char *)"PropertyGridPage_FitColumns", (PyCFunction)_wrap_PropertyGridPage_FitColumns, METH_O, NULL},
	 { (char *)"PropertyGridPage_GetIndex", (PyCFunction)_wrap_PropertyGridPage_GetIndex, METH_O, NULL},
	 { (char *)"PropertyGridPage_GetSplitterPosition", (PyCFunction) _wrap_PropertyGridPage_GetSplitterPosition, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridPage_GetRoot", (PyCFunction)_wrap_PropertyGridPage_GetRoot, METH_O, NULL},
	 { (char *)"PropertyGridPage_GetStatePtr", _wrap_PropertyGridPage_GetStatePtr, METH_VARARGS, NULL},
	 { (char *)"PropertyGridPage_GetToolId", (PyCFunction)_wrap_PropertyGridPage_GetToolId, METH_O, NULL},
	 { (char *)"PropertyGridPage_Init", (PyCFunction)_wrap_PropertyGridPage_Init, METH_O, NULL},
	 { (char *)"PropertyGridPage_IsHandlingAllEvents", (PyCFunction)_wrap_PropertyGridPage_IsHandlingAllEvents, METH_O, NULL},
	 { (char *)"PropertyGridPage_OnShow", (PyCFunction)_wrap_PropertyGridPage_OnShow, METH_O, NULL},
	 { (char *)"PropertyGridPage_SetSplitterPosition", (PyCFunction) _wrap_PropertyGridPage_SetSplitterPosition, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridPage_swigregister", PropertyGridPage_swigregister, METH_VARARGS, NULL},
	 { (char *)"PropertyGridPage_swiginit", PropertyGridPage_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_PropertyGridManager", (PyCFunction) _wrap_new_PropertyGridManager, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"delete_PropertyGridManager", (PyCFunction)_wrap_delete_PropertyGridManager, METH_O, NULL},
	 { (char *)"PropertyGridManager_AddPage", (PyCFunction) _wrap_PropertyGridManager_AddPage, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridManager_ClearPage", (PyCFunction) _wrap_PropertyGridManager_ClearPage, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridManager_CommitChangesFromEditor", (PyCFunction) _wrap_PropertyGridManager_CommitChangesFromEditor, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridManager_Create", (PyCFunction) _wrap_PropertyGridManager_Create, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridManager_EnableCategories", (PyCFunction) _wrap_PropertyGridManager_EnableCategories, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridManager_EnsureVisible", (PyCFunction) _wrap_PropertyGridManager_EnsureVisible, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridManager_GetColumnCount", (PyCFunction) _wrap_PropertyGridManager_GetColumnCount, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridManager_GetDescBoxHeight", (PyCFunction)_wrap_PropertyGridManager_GetDescBoxHeight, METH_O, NULL},
	 { (char *)"PropertyGridManager_GetGrid", _wrap_PropertyGridManager_GetGrid, METH_VARARGS, NULL},
	 { (char *)"PropertyGridManager_GetIterator", _wrap_PropertyGridManager_GetIterator, METH_VARARGS, NULL},
	 { (char *)"PropertyGridManager_GetCurrentPage", (PyCFunction)_wrap_PropertyGridManager_GetCurrentPage, METH_O, NULL},
	 { (char *)"PropertyGridManager_GetPage", _wrap_PropertyGridManager_GetPage, METH_VARARGS, NULL},
	 { (char *)"PropertyGridManager_GetPageByName", (PyCFunction) _wrap_PropertyGridManager_GetPageByName, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridManager_GetPageByState", (PyCFunction) _wrap_PropertyGridManager_GetPageByState, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridManager_GetPageCount", (PyCFunction)_wrap_PropertyGridManager_GetPageCount, METH_O, NULL},
	 { (char *)"PropertyGridManager_GetPageName", (PyCFunction) _wrap_PropertyGridManager_GetPageName, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridManager_GetPageRoot", (PyCFunction) _wrap_PropertyGridManager_GetPageRoot, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridManager_GetSelectedPage", (PyCFunction)_wrap_PropertyGridManager_GetSelectedPage, METH_O, NULL},
	 { (char *)"PropertyGridManager_GetSelectedProperty", (PyCFunction)_wrap_PropertyGridManager_GetSelectedProperty, METH_O, NULL},
	 { (char *)"PropertyGridManager_GetSelection", (PyCFunction)_wrap_PropertyGridManager_GetSelection, METH_O, NULL},
	 { (char *)"PropertyGridManager_GetToolBar", (PyCFunction)_wrap_PropertyGridManager_GetToolBar, METH_O, NULL},
	 { (char *)"PropertyGridManager_InsertPage", (PyCFunction) _wrap_PropertyGridManager_InsertPage, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridManager_IsAnyModified", (PyCFunction)_wrap_PropertyGridManager_IsAnyModified, METH_O, NULL},
	 { (char *)"PropertyGridManager_IsFrozen", (PyCFunction)_wrap_PropertyGridManager_IsFrozen, METH_O, NULL},
	 { (char *)"PropertyGridManager_IsPageModified", (PyCFunction) _wrap_PropertyGridManager_IsPageModified, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridManager_IsPropertySelected", (PyCFunction) _wrap_PropertyGridManager_IsPropertySelected, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridManager_RemovePage", (PyCFunction) _wrap_PropertyGridManager_RemovePage, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridManager_SelectPage", _wrap_PropertyGridManager_SelectPage, METH_VARARGS, NULL},
	 { (char *)"PropertyGridManager_SelectProperty", (PyCFunction) _wrap_PropertyGridManager_SelectProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridManager_SetColumnTitle", (PyCFunction) _wrap_PropertyGridManager_SetColumnTitle, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridManager_SetColumnCount", (PyCFunction) _wrap_PropertyGridManager_SetColumnCount, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridManager_SetDescription", (PyCFunction) _wrap_PropertyGridManager_SetDescription, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridManager_SetDescBoxHeight", (PyCFunction) _wrap_PropertyGridManager_SetDescBoxHeight, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridManager_SetSplitterLeft", (PyCFunction) _wrap_PropertyGridManager_SetSplitterLeft, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridManager_SetPageSplitterPosition", (PyCFunction) _wrap_PropertyGridManager_SetPageSplitterPosition, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridManager_SetSplitterPosition", (PyCFunction) _wrap_PropertyGridManager_SetSplitterPosition, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridManager_SetId", (PyCFunction) _wrap_PropertyGridManager_SetId, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridManager_Freeze", (PyCFunction)_wrap_PropertyGridManager_Freeze, METH_O, NULL},
	 { (char *)"PropertyGridManager_Thaw", (PyCFunction)_wrap_PropertyGridManager_Thaw, METH_O, NULL},
	 { (char *)"PropertyGridManager_Reparent", (PyCFunction) _wrap_PropertyGridManager_Reparent, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PropertyGridManager_swigregister", PropertyGridManager_swigregister, METH_VARARGS, NULL},
	 { (char *)"PropertyGridManager_swiginit", PropertyGridManager_swiginit, METH_VARARGS, NULL},
	 { (char *)"NewPropertyCategory", (PyCFunction) _wrap_NewPropertyCategory, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"NewStringProperty", (PyCFunction) _wrap_NewStringProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"NewUIntProperty", (PyCFunction) _wrap_NewUIntProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"NewIntProperty", (PyCFunction) _wrap_NewIntProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"NewFloatProperty", (PyCFunction) _wrap_NewFloatProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"NewBoolProperty", (PyCFunction) _wrap_NewBoolProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"NewEnumProperty", (PyCFunction) _wrap_NewEnumProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"NewEditEnumProperty", (PyCFunction) _wrap_NewEditEnumProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"NewFlagsProperty", (PyCFunction) _wrap_NewFlagsProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"NewLongStringProperty", (PyCFunction) _wrap_NewLongStringProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"NewFileProperty", (PyCFunction) _wrap_NewFileProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"NewDirProperty", (PyCFunction) _wrap_NewDirProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"NewArrayStringProperty", (PyCFunction) _wrap_NewArrayStringProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"NewFontProperty", (PyCFunction) _wrap_NewFontProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"NewSystemColourProperty", (PyCFunction) _wrap_NewSystemColourProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"NewColourProperty", (PyCFunction) _wrap_NewColourProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"NewCursorProperty", (PyCFunction) _wrap_NewCursorProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"NewImageFileProperty", (PyCFunction) _wrap_NewImageFileProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"NewMultiChoiceProperty", (PyCFunction) _wrap_NewMultiChoiceProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"NewDateProperty", (PyCFunction) _wrap_NewDateProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"new_PyFloatProperty", (PyCFunction) _wrap_new_PyFloatProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyFloatProperty__SetSelf", (PyCFunction) _wrap_PyFloatProperty__SetSelf, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyFloatProperty_swigregister", PyFloatProperty_swigregister, METH_VARARGS, NULL},
	 { (char *)"PyFloatProperty_swiginit", PyFloatProperty_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_PyEditorDialogAdapter", (PyCFunction)_wrap_new_PyEditorDialogAdapter, METH_NOARGS, NULL},
	 { (char *)"PyEditorDialogAdapter__SetSelf", (PyCFunction) _wrap_PyEditorDialogAdapter__SetSelf, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyEditorDialogAdapter_swigregister", PyEditorDialogAdapter_swigregister, METH_VARARGS, NULL},
	 { (char *)"PyEditorDialogAdapter_swiginit", PyEditorDialogAdapter_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_PyEnumProperty", (PyCFunction) _wrap_new_PyEnumProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyEnumProperty__SetSelf", (PyCFunction) _wrap_PyEnumProperty__SetSelf, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyEnumProperty_swigregister", PyEnumProperty_swigregister, METH_VARARGS, NULL},
	 { (char *)"PyEnumProperty_swiginit", PyEnumProperty_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_PyArrayStringProperty", (PyCFunction) _wrap_new_PyArrayStringProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyArrayStringProperty__SetSelf", (PyCFunction) _wrap_PyArrayStringProperty__SetSelf, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyArrayStringProperty_swigregister", PyArrayStringProperty_swigregister, METH_VARARGS, NULL},
	 { (char *)"PyArrayStringProperty_swiginit", PyArrayStringProperty_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_PyComboBoxEditor", (PyCFunction)_wrap_new_PyComboBoxEditor, METH_NOARGS, NULL},
	 { (char *)"PyComboBoxEditor__SetSelf", (PyCFunction) _wrap_PyComboBoxEditor__SetSelf, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyComboBoxEditor_swigregister", PyComboBoxEditor_swigregister, METH_VARARGS, NULL},
	 { (char *)"PyComboBoxEditor_swiginit", PyComboBoxEditor_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_PyFileDialogAdapter", (PyCFunction)_wrap_new_PyFileDialogAdapter, METH_NOARGS, NULL},
	 { (char *)"PyFileDialogAdapter__SetSelf", (PyCFunction) _wrap_PyFileDialogAdapter__SetSelf, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyFileDialogAdapter_swigregister", PyFileDialogAdapter_swigregister, METH_VARARGS, NULL},
	 { (char *)"PyFileDialogAdapter_swiginit", PyFileDialogAdapter_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_PyStringProperty", (PyCFunction) _wrap_new_PyStringProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyStringProperty__SetSelf", (PyCFunction) _wrap_PyStringProperty__SetSelf, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyStringProperty_swigregister", PyStringProperty_swigregister, METH_VARARGS, NULL},
	 { (char *)"PyStringProperty_swiginit", PyStringProperty_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_PyLongStringDialogAdapter", (PyCFunction)_wrap_new_PyLongStringDialogAdapter, METH_NOARGS, NULL},
	 { (char *)"PyLongStringDialogAdapter__SetSelf", (PyCFunction) _wrap_PyLongStringDialogAdapter__SetSelf, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLongStringDialogAdapter_swigregister", PyLongStringDialogAdapter_swigregister, METH_VARARGS, NULL},
	 { (char *)"PyLongStringDialogAdapter_swiginit", PyLongStringDialogAdapter_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_PyEditEnumProperty", _wrap_new_PyEditEnumProperty, METH_VARARGS, NULL},
	 { (char *)"PyEditEnumProperty__SetSelf", (PyCFunction) _wrap_PyEditEnumProperty__SetSelf, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyEditEnumProperty_swigregister", PyEditEnumProperty_swigregister, METH_VARARGS, NULL},
	 { (char *)"PyEditEnumProperty_swiginit", PyEditEnumProperty_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_PyTextCtrlEditor", (PyCFunction)_wrap_new_PyTextCtrlEditor, METH_NOARGS, NULL},
	 { (char *)"PyTextCtrlEditor__SetSelf", (PyCFunction) _wrap_PyTextCtrlEditor__SetSelf, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyTextCtrlEditor_swigregister", PyTextCtrlEditor_swigregister, METH_VARARGS, NULL},
	 { (char *)"PyTextCtrlEditor_swiginit", PyTextCtrlEditor_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_PySystemColourProperty", _wrap_new_PySystemColourProperty, METH_VARARGS, NULL},
	 { (char *)"PySystemColourProperty__SetSelf", (PyCFunction) _wrap_PySystemColourProperty__SetSelf, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PySystemColourProperty_swigregister", PySystemColourProperty_swigregister, METH_VARARGS, NULL},
	 { (char *)"PySystemColourProperty_swiginit", PySystemColourProperty_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_PyFlagsProperty", (PyCFunction) _wrap_new_PyFlagsProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyFlagsProperty__SetSelf", (PyCFunction) _wrap_PyFlagsProperty__SetSelf, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyFlagsProperty_swigregister", PyFlagsProperty_swigregister, METH_VARARGS, NULL},
	 { (char *)"PyFlagsProperty_swiginit", PyFlagsProperty_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_PyFontProperty", (PyCFunction) _wrap_new_PyFontProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyFontProperty__SetSelf", (PyCFunction) _wrap_PyFontProperty__SetSelf, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyFontProperty_swigregister", PyFontProperty_swigregister, METH_VARARGS, NULL},
	 { (char *)"PyFontProperty_swiginit", PyFontProperty_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_PyColourProperty", (PyCFunction) _wrap_new_PyColourProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyColourProperty__SetSelf", (PyCFunction) _wrap_PyColourProperty__SetSelf, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyColourProperty_swigregister", PyColourProperty_swigregister, METH_VARARGS, NULL},
	 { (char *)"PyColourProperty_swiginit", PyColourProperty_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_PyFileProperty", (PyCFunction) _wrap_new_PyFileProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyFileProperty__SetSelf", (PyCFunction) _wrap_PyFileProperty__SetSelf, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyFileProperty_swigregister", PyFileProperty_swigregister, METH_VARARGS, NULL},
	 { (char *)"PyFileProperty_swiginit", PyFileProperty_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_PyIntProperty", _wrap_new_PyIntProperty, METH_VARARGS, NULL},
	 { (char *)"PyIntProperty__SetSelf", (PyCFunction) _wrap_PyIntProperty__SetSelf, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyIntProperty_swigregister", PyIntProperty_swigregister, METH_VARARGS, NULL},
	 { (char *)"PyIntProperty_swiginit", PyIntProperty_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_PyEditor", (PyCFunction)_wrap_new_PyEditor, METH_NOARGS, NULL},
	 { (char *)"PyEditor__SetSelf", (PyCFunction) _wrap_PyEditor__SetSelf, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyEditor_swigregister", PyEditor_swigregister, METH_VARARGS, NULL},
	 { (char *)"PyEditor_swiginit", PyEditor_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_PyChoiceEditor", (PyCFunction)_wrap_new_PyChoiceEditor, METH_NOARGS, NULL},
	 { (char *)"PyChoiceEditor__SetSelf", (PyCFunction) _wrap_PyChoiceEditor__SetSelf, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyChoiceEditor_swigregister", PyChoiceEditor_swigregister, METH_VARARGS, NULL},
	 { (char *)"PyChoiceEditor_swiginit", PyChoiceEditor_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_PyProperty", _wrap_new_PyProperty, METH_VARARGS, NULL},
	 { (char *)"PyProperty__SetSelf", (PyCFunction) _wrap_PyProperty__SetSelf, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyProperty_swigregister", PyProperty_swigregister, METH_VARARGS, NULL},
	 { (char *)"PyProperty_swiginit", PyProperty_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_PyUIntProperty", _wrap_new_PyUIntProperty, METH_VARARGS, NULL},
	 { (char *)"PyUIntProperty__SetSelf", (PyCFunction) _wrap_PyUIntProperty__SetSelf, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyUIntProperty_swigregister", PyUIntProperty_swigregister, METH_VARARGS, NULL},
	 { (char *)"PyUIntProperty_swiginit", PyUIntProperty_swiginit, METH_VARARGS, NULL},
	 { (char *)"new_PyLongStringProperty", (PyCFunction) _wrap_new_PyLongStringProperty, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLongStringProperty__SetSelf", (PyCFunction) _wrap_PyLongStringProperty__SetSelf, METH_VARARGS | METH_KEYWORDS, NULL},
	 { (char *)"PyLongStringProperty_swigregister", PyLongStringProperty_swigregister, METH_VARARGS, NULL},
	 { (char *)"PyLongStringProperty_swiginit", PyLongStringProperty_swiginit, METH_VARARGS, NULL},
	 { (char *)"RegisterEditor", (PyCFunction) _wrap_RegisterEditor, METH_VARARGS | METH_KEYWORDS, NULL},
	 { NULL, NULL, 0, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_wxPGTextCtrlAndButtonEditorTo_p_wxPGTextCtrlEditor(void *x) {
    return (void *)((wxPGTextCtrlEditor *)  ((wxPGTextCtrlAndButtonEditor *) x));
}
static void *_p_wxPGSpinCtrlEditorTo_p_wxPGTextCtrlEditor(void *x) {
    return (void *)((wxPGTextCtrlEditor *)  ((wxPGSpinCtrlEditor *) x));
}
static void *_p_PyTextCtrlEditorTo_p_wxPGTextCtrlEditor(void *x) {
    return (void *)((wxPGTextCtrlEditor *)  ((PyTextCtrlEditor *) x));
}
static void *_p_PyComboBoxEditorTo_p_wxPGComboBoxEditor(void *x) {
    return (void *)((wxPGComboBoxEditor *)  ((PyComboBoxEditor *) x));
}
static void *_p_wxContextMenuEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxContextMenuEvent *) x));
}
static void *_p_wxMenuEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxMenuEvent *) x));
}
static void *_p_wxCloseEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxCloseEvent *) x));
}
static void *_p_wxMouseEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxMouseEvent *) x));
}
static void *_p_wxEraseEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxEraseEvent *) x));
}
static void *_p_wxSetCursorEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxSetCursorEvent *) x));
}
static void *_p_wxSplitterEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *)(wxNotifyEvent *) ((wxSplitterEvent *) x));
}
static void *_p_wxInitDialogEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxInitDialogEvent *) x));
}
static void *_p_wxScrollEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxScrollEvent *) x));
}
static void *_p_wxBookCtrlEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *)(wxNotifyEvent *) ((wxBookCtrlEvent *) x));
}
static void *_p_wxWindowModalDialogEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxWindowModalDialogEvent *) x));
}
static void *_p_wxFindDialogEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxFindDialogEvent *) x));
}
static void *_p_wxNotifyEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxNotifyEvent *) x));
}
static void *_p_wxMouseCaptureLostEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxMouseCaptureLostEvent *) x));
}
static void *_p_wxPyEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxPyEvent *) x));
}
static void *_p_wxCalculateLayoutEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxCalculateLayoutEvent *) x));
}
static void *_p_wxWindowCreateEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxWindowCreateEvent *) x));
}
static void *_p_wxQueryNewPaletteEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxQueryNewPaletteEvent *) x));
}
static void *_p_wxMaximizeEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxMaximizeEvent *) x));
}
static void *_p_wxIconizeEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxIconizeEvent *) x));
}
static void *_p_wxActivateEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxActivateEvent *) x));
}
static void *_p_wxSizeEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxSizeEvent *) x));
}
static void *_p_wxMoveEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxMoveEvent *) x));
}
static void *_p_wxIdleEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxIdleEvent *) x));
}
static void *_p_wxDateEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxDateEvent *) x));
}
static void *_p_wxPaintEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxPaintEvent *) x));
}
static void *_p_wxNcPaintEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxNcPaintEvent *) x));
}
static void *_p_wxClipboardTextEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxClipboardTextEvent *) x));
}
static void *_p_wxUpdateUIEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxUpdateUIEvent *) x));
}
static void *_p_wxPaletteChangedEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxPaletteChangedEvent *) x));
}
static void *_p_wxDisplayChangedEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxDisplayChangedEvent *) x));
}
static void *_p_wxMouseCaptureChangedEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxMouseCaptureChangedEvent *) x));
}
static void *_p_wxSysColourChangedEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxSysColourChangedEvent *) x));
}
static void *_p_wxThreadEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxThreadEvent *) x));
}
static void *_p_wxPropertyGridEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxPropertyGridEvent *) x));
}
static void *_p_wxDropFilesEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxDropFilesEvent *) x));
}
static void *_p_wxChildFocusEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxChildFocusEvent *) x));
}
static void *_p_wxFocusEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxFocusEvent *) x));
}
static void *_p_wxSashEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxSashEvent *) x));
}
static void *_p_wxQueryLayoutInfoEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxQueryLayoutInfoEvent *) x));
}
static void *_p_wxShowEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxShowEvent *) x));
}
static void *_p_wxCommandEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxCommandEvent *) x));
}
static void *_p_wxPyCommandEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxPyCommandEvent *) x));
}
static void *_p_wxWindowDestroyEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *) (wxCommandEvent *) ((wxWindowDestroyEvent *) x));
}
static void *_p_wxNavigationKeyEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxNavigationKeyEvent *) x));
}
static void *_p_wxKeyEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxKeyEvent *) x));
}
static void *_p_wxScrollWinEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxScrollWinEvent *) x));
}
static void *_p_wxTaskBarIconEventTo_p_wxEvent(void *x) {
    return (void *)((wxEvent *)  ((wxTaskBarIconEvent *) x));
}
static void *_p_wxPropertyGridTo_p_wxControl(void *x) {
    return (void *)((wxControl *)  ((wxPropertyGrid *) x));
}
static void *_p_wxControlWithItemsTo_p_wxControl(void *x) {
    return (void *)((wxControl *)  ((wxControlWithItems *) x));
}
static void *_p_wxTextCtrlBaseTo_p_wxControl(void *x) {
    return (void *)((wxControl *)  ((wxTextCtrlBase *) x));
}
static void *_p_wxBookCtrlBaseTo_p_wxControl(void *x) {
    return (void *)((wxControl *)  ((wxBookCtrlBase *) x));
}
static void *_p_wxPGChoiceEntryTo_p_wxPGCell(void *x) {
    return (void *)((wxPGCell *)  ((wxPGChoiceEntry *) x));
}
static void *_p_wxPGCellRendererTo_p_wxRefCounter(void *x) {
    return (void *)((wxRefCounter *)  ((wxPGCellRenderer *) x));
}
static void *_p_wxPGDefaultRendererTo_p_wxRefCounter(void *x) {
    return (void *)((wxRefCounter *) (wxPGCellRenderer *) ((wxPGDefaultRenderer *) x));
}
static void *_p_wxPGCellDataTo_p_wxRefCounter(void *x) {
    return (void *)((wxRefCounter *)  ((wxPGCellData *) x));
}
static void *_p_wxPGChoicesDataTo_p_wxRefCounter(void *x) {
    return (void *)((wxRefCounter *)  ((wxPGChoicesData *) x));
}
static void *_p_wxPGVIteratorBaseTo_p_wxRefCounter(void *x) {
    return (void *)((wxRefCounter *)  ((wxPGVIteratorBase *) x));
}
static void *_p_wxPropertyGridIteratorTo_p_wxPropertyGridIteratorBase(void *x) {
    return (void *)((wxPropertyGridIteratorBase *)  ((wxPropertyGridIterator *) x));
}
static void *_p_wxPropertyGridConstIteratorTo_p_wxPropertyGridIteratorBase(void *x) {
    return (void *)((wxPropertyGridIteratorBase *)  ((wxPropertyGridConstIterator *) x));
}
static void *_p_wxPropertyGridPageTo_p_wxPropertyGridPageState(void *x) {
    return (void *)((wxPropertyGridPageState *)  ((wxPropertyGridPage *) x));
}
static void *_p_wxPGFileDialogAdapterTo_p_wxPGEditorDialogAdapter(void *x) {
    return (void *)((wxPGEditorDialogAdapter *)  ((wxPGFileDialogAdapter *) x));
}
static void *_p_wxPGLongStringDialogAdapterTo_p_wxPGEditorDialogAdapter(void *x) {
    return (void *)((wxPGEditorDialogAdapter *)  ((wxPGLongStringDialogAdapter *) x));
}
static void *_p_PyEditorDialogAdapterTo_p_wxPGEditorDialogAdapter(void *x) {
    return (void *)((wxPGEditorDialogAdapter *)  ((PyEditorDialogAdapter *) x));
}
static void *_p_PyFileDialogAdapterTo_p_wxPGEditorDialogAdapter(void *x) {
    return (void *)((wxPGEditorDialogAdapter *) (wxPGFileDialogAdapter *) ((PyFileDialogAdapter *) x));
}
static void *_p_PyLongStringDialogAdapterTo_p_wxPGEditorDialogAdapter(void *x) {
    return (void *)((wxPGEditorDialogAdapter *) (wxPGLongStringDialogAdapter *) ((PyLongStringDialogAdapter *) x));
}
static void *_p_PyFileDialogAdapterTo_p_wxPGFileDialogAdapter(void *x) {
    return (void *)((wxPGFileDialogAdapter *)  ((PyFileDialogAdapter *) x));
}
static void *_p_PyLongStringDialogAdapterTo_p_wxPGLongStringDialogAdapter(void *x) {
    return (void *)((wxPGLongStringDialogAdapter *)  ((PyLongStringDialogAdapter *) x));
}
static void *_p_wxPropertyGridTo_p_wxScrollHelper(void *x) {
    return (void *)((wxScrollHelper *)  ((wxPropertyGrid *) x));
}
static void *_p_wxScrolledWindowTo_p_wxScrollHelper(void *x) {
    return (void *)((wxScrollHelper *)  ((wxScrolledWindow *) x));
}
static void *_p_wxPyScrolledWindowTo_p_wxScrollHelper(void *x) {
    return (void *)((wxScrollHelper *) (wxScrolledWindow *) ((wxPyScrolledWindow *) x));
}
static void *_p_wxPreviewCanvasTo_p_wxScrollHelper(void *x) {
    return (void *)((wxScrollHelper *) (wxScrolledWindow *) ((wxPreviewCanvas *) x));
}
static void *_p_PyUIntPropertyTo_p_wxUIntProperty(void *x) {
    return (void *)((wxUIntProperty *)  ((PyUIntProperty *) x));
}
static void *_p_PyIntPropertyTo_p_wxIntProperty(void *x) {
    return (void *)((wxIntProperty *)  ((PyIntProperty *) x));
}
static void *_p_PyColourPropertyTo_p_wxColourProperty(void *x) {
    return (void *)((wxColourProperty *)  ((PyColourProperty *) x));
}
static void *_p_PyFontPropertyTo_p_wxFontProperty(void *x) {
    return (void *)((wxFontProperty *)  ((PyFontProperty *) x));
}
static void *_p_wxArrayStringPropertyTo_p_wxPGProperty(void *x) {
    return (void *)((wxPGProperty *)  ((wxArrayStringProperty *) x));
}
static void *_p_wxDirPropertyTo_p_wxPGProperty(void *x) {
    return (void *)((wxPGProperty *) (wxLongStringProperty *) ((wxDirProperty *) x));
}
static void *_p_wxLongStringPropertyTo_p_wxPGProperty(void *x) {
    return (void *)((wxPGProperty *)  ((wxLongStringProperty *) x));
}
static void *_p_wxFilePropertyTo_p_wxPGProperty(void *x) {
    return (void *)((wxPGProperty *)  ((wxFileProperty *) x));
}
static void *_p_wxFlagsPropertyTo_p_wxPGProperty(void *x) {
    return (void *)((wxPGProperty *)  ((wxFlagsProperty *) x));
}
static void *_p_wxEditEnumPropertyTo_p_wxPGProperty(void *x) {
    return (void *)((wxPGProperty *) (wxEnumProperty *) ((wxEditEnumProperty *) x));
}
static void *_p_wxEnumPropertyTo_p_wxPGProperty(void *x) {
    return (void *)((wxPGProperty *)  ((wxEnumProperty *) x));
}
static void *_p_wxBoolPropertyTo_p_wxPGProperty(void *x) {
    return (void *)((wxPGProperty *)  ((wxBoolProperty *) x));
}
static void *_p_wxFloatPropertyTo_p_wxPGProperty(void *x) {
    return (void *)((wxPGProperty *)  ((wxFloatProperty *) x));
}
static void *_p_wxUIntPropertyTo_p_wxPGProperty(void *x) {
    return (void *)((wxPGProperty *)  ((wxUIntProperty *) x));
}
static void *_p_wxIntPropertyTo_p_wxPGProperty(void *x) {
    return (void *)((wxPGProperty *)  ((wxIntProperty *) x));
}
static void *_p_wxStringPropertyTo_p_wxPGProperty(void *x) {
    return (void *)((wxPGProperty *)  ((wxStringProperty *) x));
}
static void *_p_wxPGRootPropertyTo_p_wxPGProperty(void *x) {
    return (void *)((wxPGProperty *)  ((wxPGRootProperty *) x));
}
static void *_p_wxFontPropertyTo_p_wxPGProperty(void *x) {
    return (void *)((wxPGProperty *)  ((wxFontProperty *) x));
}
static void *_p_wxSystemColourPropertyTo_p_wxPGProperty(void *x) {
    return (void *)((wxPGProperty *) (wxEnumProperty *) ((wxSystemColourProperty *) x));
}
static void *_p_wxColourPropertyTo_p_wxPGProperty(void *x) {
    return (void *)((wxPGProperty *) (wxEnumProperty *)(wxSystemColourProperty *) ((wxColourProperty *) x));
}
static void *_p_wxCursorPropertyTo_p_wxPGProperty(void *x) {
    return (void *)((wxPGProperty *) (wxEnumProperty *) ((wxCursorProperty *) x));
}
static void *_p_wxImageFilePropertyTo_p_wxPGProperty(void *x) {
    return (void *)((wxPGProperty *) (wxFileProperty *) ((wxImageFileProperty *) x));
}
static void *_p_PyFloatPropertyTo_p_wxPGProperty(void *x) {
    return (void *)((wxPGProperty *) (wxFloatProperty *) ((PyFloatProperty *) x));
}
static void *_p_PyEnumPropertyTo_p_wxPGProperty(void *x) {
    return (void *)((wxPGProperty *) (wxEnumProperty *) ((PyEnumProperty *) x));
}
static void *_p_PyArrayStringPropertyTo_p_wxPGProperty(void *x) {
    return (void *)((wxPGProperty *) (wxArrayStringProperty *) ((PyArrayStringProperty *) x));
}
static void *_p_PyStringPropertyTo_p_wxPGProperty(void *x) {
    return (void *)((wxPGProperty *) (wxStringProperty *) ((PyStringProperty *) x));
}
static void *_p_PyEditEnumPropertyTo_p_wxPGProperty(void *x) {
    return (void *)((wxPGProperty *) (wxEnumProperty *)(wxEditEnumProperty *) ((PyEditEnumProperty *) x));
}
static void *_p_PySystemColourPropertyTo_p_wxPGProperty(void *x) {
    return (void *)((wxPGProperty *) (wxEnumProperty *)(wxSystemColourProperty *) ((PySystemColourProperty *) x));
}
static void *_p_PyFlagsPropertyTo_p_wxPGProperty(void *x) {
    return (void *)((wxPGProperty *) (wxFlagsProperty *) ((PyFlagsProperty *) x));
}
static void *_p_PyFontPropertyTo_p_wxPGProperty(void *x) {
    return (void *)((wxPGProperty *) (wxFontProperty *) ((PyFontProperty *) x));
}
static void *_p_PyColourPropertyTo_p_wxPGProperty(void *x) {
    return (void *)((wxPGProperty *) (wxEnumProperty *)(wxSystemColourProperty *)(wxColourProperty *) ((PyColourProperty *) x));
}
static void *_p_PyFilePropertyTo_p_wxPGProperty(void *x) {
    return (void *)((wxPGProperty *) (wxFileProperty *) ((PyFileProperty *) x));
}
static void *_p_PyIntPropertyTo_p_wxPGProperty(void *x) {
    return (void *)((wxPGProperty *) (wxIntProperty *) ((PyIntProperty *) x));
}
static void *_p_PyPropertyTo_p_wxPGProperty(void *x) {
    return (void *)((wxPGProperty *)  ((PyProperty *) x));
}
static void *_p_PyUIntPropertyTo_p_wxPGProperty(void *x) {
    return (void *)((wxPGProperty *) (wxUIntProperty *) ((PyUIntProperty *) x));
}
static void *_p_PyLongStringPropertyTo_p_wxPGProperty(void *x) {
    return (void *)((wxPGProperty *) (wxLongStringProperty *) ((PyLongStringProperty *) x));
}
static void *_p_wxPropertyCategoryTo_p_wxPGProperty(void *x) {
    return (void *)((wxPGProperty *)  ((wxPropertyCategory *) x));
}
static void *_p_wxEditEnumPropertyTo_p_wxEnumProperty(void *x) {
    return (void *)((wxEnumProperty *)  ((wxEditEnumProperty *) x));
}
static void *_p_wxSystemColourPropertyTo_p_wxEnumProperty(void *x) {
    return (void *)((wxEnumProperty *)  ((wxSystemColourProperty *) x));
}
static void *_p_wxColourPropertyTo_p_wxEnumProperty(void *x) {
    return (void *)((wxEnumProperty *) (wxSystemColourProperty *) ((wxColourProperty *) x));
}
static void *_p_wxCursorPropertyTo_p_wxEnumProperty(void *x) {
    return (void *)((wxEnumProperty *)  ((wxCursorProperty *) x));
}
static void *_p_PyEnumPropertyTo_p_wxEnumProperty(void *x) {
    return (void *)((wxEnumProperty *)  ((PyEnumProperty *) x));
}
static void *_p_PyEditEnumPropertyTo_p_wxEnumProperty(void *x) {
    return (void *)((wxEnumProperty *) (wxEditEnumProperty *) ((PyEditEnumProperty *) x));
}
static void *_p_PySystemColourPropertyTo_p_wxEnumProperty(void *x) {
    return (void *)((wxEnumProperty *) (wxSystemColourProperty *) ((PySystemColourProperty *) x));
}
static void *_p_PyColourPropertyTo_p_wxEnumProperty(void *x) {
    return (void *)((wxEnumProperty *) (wxSystemColourProperty *)(wxColourProperty *) ((PyColourProperty *) x));
}
static void *_p_wxDirPropertyTo_p_wxLongStringProperty(void *x) {
    return (void *)((wxLongStringProperty *)  ((wxDirProperty *) x));
}
static void *_p_PyLongStringPropertyTo_p_wxLongStringProperty(void *x) {
    return (void *)((wxLongStringProperty *)  ((PyLongStringProperty *) x));
}
static void *_p_wxColourPropertyTo_p_wxSystemColourProperty(void *x) {
    return (void *)((wxSystemColourProperty *)  ((wxColourProperty *) x));
}
static void *_p_PySystemColourPropertyTo_p_wxSystemColourProperty(void *x) {
    return (void *)((wxSystemColourProperty *)  ((PySystemColourProperty *) x));
}
static void *_p_PyColourPropertyTo_p_wxSystemColourProperty(void *x) {
    return (void *)((wxSystemColourProperty *) (wxColourProperty *) ((PyColourProperty *) x));
}
static void *_p_wxImageFilePropertyTo_p_wxFileProperty(void *x) {
    return (void *)((wxFileProperty *)  ((wxImageFileProperty *) x));
}
static void *_p_PyFilePropertyTo_p_wxFileProperty(void *x) {
    return (void *)((wxFileProperty *)  ((PyFileProperty *) x));
}
static void *_p_PyFloatPropertyTo_p_wxFloatProperty(void *x) {
    return (void *)((wxFloatProperty *)  ((PyFloatProperty *) x));
}
static void *_p_PyArrayStringPropertyTo_p_wxArrayStringProperty(void *x) {
    return (void *)((wxArrayStringProperty *)  ((PyArrayStringProperty *) x));
}
static void *_p_PyStringPropertyTo_p_wxStringProperty(void *x) {
    return (void *)((wxStringProperty *)  ((PyStringProperty *) x));
}
static void *_p_PyEditEnumPropertyTo_p_wxEditEnumProperty(void *x) {
    return (void *)((wxEditEnumProperty *)  ((PyEditEnumProperty *) x));
}
static void *_p_PyFlagsPropertyTo_p_wxFlagsProperty(void *x) {
    return (void *)((wxFlagsProperty *)  ((PyFlagsProperty *) x));
}
static void *_p_wxSplashScreenTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxFrame *) ((wxSplashScreen *) x));
}
static void *_p_wxMiniFrameTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxFrame *) ((wxMiniFrame *) x));
}
static void *_p_wxEventBlockerTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *)  ((wxEventBlocker *) x));
}
static void *_p_wxPyPanelTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxPanel *) ((wxPyPanel *) x));
}
static void *_p_wxMenuBarTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxMenuBar *) x));
}
static void *_p_wxTextCtrlBaseTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *) ((wxTextCtrlBase *) x));
}
static void *_p_wxBookCtrlBaseTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *) ((wxBookCtrlBase *) x));
}
static void *_p_wxValidatorTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *)  ((wxValidator *) x));
}
static void *_p_wxPyValidatorTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxValidator *) ((wxPyValidator *) x));
}
static void *_p_wxMenuTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *)  ((wxMenu *) x));
}
static void *_p_wxFileDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxFileDialog *) x));
}
static void *_p_wxMultiChoiceDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxMultiChoiceDialog *) x));
}
static void *_p_wxSingleChoiceDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxSingleChoiceDialog *) x));
}
static void *_p_wxTextEntryDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxTextEntryDialog *) x));
}
static void *_p_wxPasswordEntryDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxDialog *)(wxTextEntryDialog *) ((wxPasswordEntryDialog *) x));
}
static void *_p_wxNumberEntryDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxNumberEntryDialog *) x));
}
static void *_p_wxMessageDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxMessageDialog *) x));
}
static void *_p_wxGenericProgressDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxGenericProgressDialog *) x));
}
static void *_p_wxProgressDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxDialog *)(wxGenericProgressDialog *) ((wxProgressDialog *) x));
}
static void *_p_wxFindReplaceDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxFindReplaceDialog *) x));
}
static void *_p_wxPGMultiButtonTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxPGMultiButton *) x));
}
static void *_p_wxPanelTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxPanel *) x));
}
static void *_p_wxStatusBarTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxStatusBar *) x));
}
static void *_p_wxPyHVScrolledWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxPanel *) ((wxPyHVScrolledWindow *) x));
}
static void *_p_wxPyHScrolledWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxPanel *) ((wxPyHScrolledWindow *) x));
}
static void *_p_wxPyVScrolledWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxPanel *) ((wxPyVScrolledWindow *) x));
}
static void *_p_wxTipWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxFrame *) ((wxTipWindow *) x));
}
static void *_p_wxPyPopupTransientWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxPopupWindow *) ((wxPyPopupTransientWindow *) x));
}
static void *_p_wxPopupWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxPopupWindow *) x));
}
static void *_p_wxSashLayoutWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxSashWindow *) ((wxSashLayoutWindow *) x));
}
static void *_p_wxSashWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxSashWindow *) x));
}
static void *_p_wxSplitterWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxSplitterWindow *) x));
}
static void *_p_wxSplashScreenWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxSplashScreenWindow *) x));
}
static void *_p_wxTopLevelWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxTopLevelWindow *) x));
}
static void *_p_wxWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *)  ((wxWindow *) x));
}
static void *_p_wxScrolledWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxPanel *) ((wxScrolledWindow *) x));
}
static void *_p_wxMDIClientWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxMDIClientWindow *) x));
}
static void *_p_wxPyScrolledWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxPanel *)(wxScrolledWindow *) ((wxPyScrolledWindow *) x));
}
static void *_p_wxControlTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxControl *) x));
}
static void *_p_wxPreviewFrameTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxFrame *) ((wxPreviewFrame *) x));
}
static void *_p_wxPyPreviewFrameTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxFrame *)(wxPreviewFrame *) ((wxPyPreviewFrame *) x));
}
static void *_p_wxMDIChildFrameTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxFrame *) ((wxMDIChildFrame *) x));
}
static void *_p_wxPyAppTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *)  ((wxPyApp *) x));
}
static void *_p_wxPropertyGridPageTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *)  ((wxPropertyGridPage *) x));
}
static void *_p_wxControlWithItemsTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *) ((wxControlWithItems *) x));
}
static void *_p_wxPyEvtHandlerTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *)  ((wxPyEvtHandler *) x));
}
static void *_p_wxPyWindowTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *) ((wxPyWindow *) x));
}
static void *_p_wxPreviewCanvasTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxPanel *)(wxScrolledWindow *) ((wxPreviewCanvas *) x));
}
static void *_p_wxSimpleHtmlListBoxTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxPanel *)(wxPyVScrolledWindow *)(wxPyVListBox *)(wxPyHtmlListBox *) ((wxSimpleHtmlListBox *) x));
}
static void *_p_wxPyHtmlListBoxTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxPanel *)(wxPyVScrolledWindow *)(wxPyVListBox *) ((wxPyHtmlListBox *) x));
}
static void *_p_wxPyVListBoxTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxPanel *)(wxPyVScrolledWindow *) ((wxPyVListBox *) x));
}
static void *_p_wxPropertyGridTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxControl *) ((wxPropertyGrid *) x));
}
static void *_p_wxPreviewControlBarTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxPanel *) ((wxPreviewControlBar *) x));
}
static void *_p_wxPyPreviewControlBarTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxPanel *)(wxPreviewControlBar *) ((wxPyPreviewControlBar *) x));
}
static void *_p_wxPyTaskBarIconTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *)  ((wxPyTaskBarIcon *) x));
}
static void *_p_wxFrameTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *) ((wxFrame *) x));
}
static void *_p_wxDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *) ((wxDialog *) x));
}
static void *_p_wxColourDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxColourDialog *) x));
}
static void *_p_wxDirDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxDirDialog *) x));
}
static void *_p_wxFontDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxFontDialog *) x));
}
static void *_p_wxPGArrayEditorDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxPGArrayEditorDialog *) x));
}
static void *_p_wxPGArrayStringEditorDialogTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxDialog *)(wxPGArrayEditorDialog *) ((wxPGArrayStringEditorDialog *) x));
}
static void *_p_wxMDIParentFrameTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxTopLevelWindow *)(wxFrame *) ((wxMDIParentFrame *) x));
}
static void *_p_wxPropertyGridManagerTo_p_wxEvtHandler(void *x) {
    return (void *)((wxEvtHandler *) (wxWindow *)(wxPanel *) ((wxPropertyGridManager *) x));
}
static void *_p_wxPropertyGridTo_p_wxPropertyGridInterface(void *x) {
    return (void *)((wxPropertyGridInterface *)  ((wxPropertyGrid *) x));
}
static void *_p_wxPropertyGridPageTo_p_wxPropertyGridInterface(void *x) {
    return (void *)((wxPropertyGridInterface *)  ((wxPropertyGridPage *) x));
}
static void *_p_wxPropertyGridManagerTo_p_wxPropertyGridInterface(void *x) {
    return (void *)((wxPropertyGridInterface *)  ((wxPropertyGridManager *) x));
}
static void *_p_wxPGTextCtrlEditorTo_p_wxPGEditor(void *x) {
    return (void *)((wxPGEditor *)  ((wxPGTextCtrlEditor *) x));
}
static void *_p_wxPGComboBoxEditorTo_p_wxPGEditor(void *x) {
    return (void *)((wxPGEditor *) (wxPGChoiceEditor *) ((wxPGComboBoxEditor *) x));
}
static void *_p_wxPGChoiceAndButtonEditorTo_p_wxPGEditor(void *x) {
    return (void *)((wxPGEditor *) (wxPGChoiceEditor *) ((wxPGChoiceAndButtonEditor *) x));
}
static void *_p_wxPGTextCtrlAndButtonEditorTo_p_wxPGEditor(void *x) {
    return (void *)((wxPGEditor *) (wxPGTextCtrlEditor *) ((wxPGTextCtrlAndButtonEditor *) x));
}
static void *_p_wxPGCheckBoxEditorTo_p_wxPGEditor(void *x) {
    return (void *)((wxPGEditor *)  ((wxPGCheckBoxEditor *) x));
}
static void *_p_wxPGSpinCtrlEditorTo_p_wxPGEditor(void *x) {
    return (void *)((wxPGEditor *) (wxPGTextCtrlEditor *) ((wxPGSpinCtrlEditor *) x));
}
static void *_p_PyComboBoxEditorTo_p_wxPGEditor(void *x) {
    return (void *)((wxPGEditor *) (wxPGChoiceEditor *)(wxPGComboBoxEditor *) ((PyComboBoxEditor *) x));
}
static void *_p_PyTextCtrlEditorTo_p_wxPGEditor(void *x) {
    return (void *)((wxPGEditor *) (wxPGTextCtrlEditor *) ((PyTextCtrlEditor *) x));
}
static void *_p_wxPGChoiceEditorTo_p_wxPGEditor(void *x) {
    return (void *)((wxPGEditor *)  ((wxPGChoiceEditor *) x));
}
static void *_p_PyEditorTo_p_wxPGEditor(void *x) {
    return (void *)((wxPGEditor *)  ((PyEditor *) x));
}
static void *_p_PyChoiceEditorTo_p_wxPGEditor(void *x) {
    return (void *)((wxPGEditor *) (wxPGChoiceEditor *) ((PyChoiceEditor *) x));
}
static void *_p_wxPGComboBoxEditorTo_p_wxPGChoiceEditor(void *x) {
    return (void *)((wxPGChoiceEditor *)  ((wxPGComboBoxEditor *) x));
}
static void *_p_wxPGChoiceAndButtonEditorTo_p_wxPGChoiceEditor(void *x) {
    return (void *)((wxPGChoiceEditor *)  ((wxPGChoiceAndButtonEditor *) x));
}
static void *_p_PyComboBoxEditorTo_p_wxPGChoiceEditor(void *x) {
    return (void *)((wxPGChoiceEditor *) (wxPGComboBoxEditor *) ((PyComboBoxEditor *) x));
}
static void *_p_PyChoiceEditorTo_p_wxPGChoiceEditor(void *x) {
    return (void *)((wxPGChoiceEditor *)  ((PyChoiceEditor *) x));
}
static void *_p_wxPGDefaultRendererTo_p_wxPGCellRenderer(void *x) {
    return (void *)((wxPGCellRenderer *)  ((wxPGDefaultRenderer *) x));
}
static void *_p_wxUpdateUIEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxUpdateUIEvent *) x));
}
static void *_p_wxPGChoiceEntryTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGCell *) ((wxPGChoiceEntry *) x));
}
static void *_p_wxPreviewCanvasTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxPanel *)(wxScrolledWindow *) ((wxPreviewCanvas *) x));
}
static void *_p_wxEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxEvent *) x));
}
static void *_p_wxFindDialogEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxFindDialogEvent *) x));
}
static void *_p_wxWindowModalDialogEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxWindowModalDialogEvent *) x));
}
static void *_p_wxInitDialogEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxInitDialogEvent *) x));
}
static void *_p_wxIndividualLayoutConstraintTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxIndividualLayoutConstraint *) x));
}
static void *_p_wxPGRootPropertyTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGProperty *) ((wxPGRootProperty *) x));
}
static void *_p_wxPGPropertyTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxPGProperty *) x));
}
static void *_p_wxStringPropertyTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGProperty *) ((wxStringProperty *) x));
}
static void *_p_wxIntPropertyTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGProperty *) ((wxIntProperty *) x));
}
static void *_p_wxUIntPropertyTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGProperty *) ((wxUIntProperty *) x));
}
static void *_p_wxFloatPropertyTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGProperty *) ((wxFloatProperty *) x));
}
static void *_p_wxBoolPropertyTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGProperty *) ((wxBoolProperty *) x));
}
static void *_p_wxEnumPropertyTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGProperty *) ((wxEnumProperty *) x));
}
static void *_p_wxEditEnumPropertyTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGProperty *)(wxEnumProperty *) ((wxEditEnumProperty *) x));
}
static void *_p_wxFlagsPropertyTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGProperty *) ((wxFlagsProperty *) x));
}
static void *_p_wxFilePropertyTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGProperty *) ((wxFileProperty *) x));
}
static void *_p_wxLongStringPropertyTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGProperty *) ((wxLongStringProperty *) x));
}
static void *_p_wxDirPropertyTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGProperty *)(wxLongStringProperty *) ((wxDirProperty *) x));
}
static void *_p_wxArrayStringPropertyTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGProperty *) ((wxArrayStringProperty *) x));
}
static void *_p_wxFontPropertyTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGProperty *) ((wxFontProperty *) x));
}
static void *_p_wxSystemColourPropertyTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGProperty *)(wxEnumProperty *) ((wxSystemColourProperty *) x));
}
static void *_p_wxColourPropertyTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGProperty *)(wxEnumProperty *)(wxSystemColourProperty *) ((wxColourProperty *) x));
}
static void *_p_wxCursorPropertyTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGProperty *)(wxEnumProperty *) ((wxCursorProperty *) x));
}
static void *_p_wxImageFilePropertyTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGProperty *)(wxFileProperty *) ((wxImageFileProperty *) x));
}
static void *_p_PyFloatPropertyTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGProperty *)(wxFloatProperty *) ((PyFloatProperty *) x));
}
static void *_p_PyEnumPropertyTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGProperty *)(wxEnumProperty *) ((PyEnumProperty *) x));
}
static void *_p_PyArrayStringPropertyTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGProperty *)(wxArrayStringProperty *) ((PyArrayStringProperty *) x));
}
static void *_p_PyStringPropertyTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGProperty *)(wxStringProperty *) ((PyStringProperty *) x));
}
static void *_p_PyEditEnumPropertyTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGProperty *)(wxEnumProperty *)(wxEditEnumProperty *) ((PyEditEnumProperty *) x));
}
static void *_p_PySystemColourPropertyTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGProperty *)(wxEnumProperty *)(wxSystemColourProperty *) ((PySystemColourProperty *) x));
}
static void *_p_PyFlagsPropertyTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGProperty *)(wxFlagsProperty *) ((PyFlagsProperty *) x));
}
static void *_p_PyFontPropertyTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGProperty *)(wxFontProperty *) ((PyFontProperty *) x));
}
static void *_p_PyColourPropertyTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGProperty *)(wxEnumProperty *)(wxSystemColourProperty *)(wxColourProperty *) ((PyColourProperty *) x));
}
static void *_p_PyFilePropertyTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGProperty *)(wxFileProperty *) ((PyFileProperty *) x));
}
static void *_p_PyIntPropertyTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGProperty *)(wxIntProperty *) ((PyIntProperty *) x));
}
static void *_p_PyPropertyTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGProperty *) ((PyProperty *) x));
}
static void *_p_PyUIntPropertyTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGProperty *)(wxUIntProperty *) ((PyUIntProperty *) x));
}
static void *_p_PyLongStringPropertyTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGProperty *)(wxLongStringProperty *) ((PyLongStringProperty *) x));
}
static void *_p_wxPyPreviewFrameTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxFrame *)(wxPreviewFrame *) ((wxPyPreviewFrame *) x));
}
static void *_p_wxPreviewFrameTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxFrame *) ((wxPreviewFrame *) x));
}
static void *_p_wxMenuItemTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxMenuItem *) x));
}
static void *_p_wxImageTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxImage *) x));
}
static void *_p_wxPySizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *) ((wxPySizer *) x));
}
static void *_p_wxPyTaskBarIconTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *) ((wxPyTaskBarIcon *) x));
}
static void *_p_wxLayoutAlgorithmTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxLayoutAlgorithm *) x));
}
static void *_p_wxPyAppTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *) ((wxPyApp *) x));
}
static void *_p_wxTextCtrlBaseTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *) ((wxTextCtrlBase *) x));
}
static void *_p_wxBookCtrlBaseTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *) ((wxBookCtrlBase *) x));
}
static void *_p_wxPyPreviewControlBarTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxPanel *)(wxPreviewControlBar *) ((wxPyPreviewControlBar *) x));
}
static void *_p_wxPreviewControlBarTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxPanel *) ((wxPreviewControlBar *) x));
}
static void *_p_wxFindReplaceDataTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxFindReplaceData *) x));
}
static void *_p_wxValidatorTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *) ((wxValidator *) x));
}
static void *_p_wxPyValidatorTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxValidator *) ((wxPyValidator *) x));
}
static void *_p_wxEraseEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxEraseEvent *) x));
}
static void *_p_wxMouseEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxMouseEvent *) x));
}
static void *_p_wxCloseEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxCloseEvent *) x));
}
static void *_p_wxWrapSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *)(wxBoxSizer *) ((wxWrapSizer *) x));
}
static void *_p_wxScrollEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxScrollEvent *) x));
}
static void *_p_wxBookCtrlEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *)(wxNotifyEvent *) ((wxBookCtrlEvent *) x));
}
static void *_p_wxPrintDialogDataTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxPrintDialogData *) x));
}
static void *_p_wxPageSetupDialogDataTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxPageSetupDialogData *) x));
}
static void *_p_wxPrinterTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxPrinter *) x));
}
static void *_p_wxControlWithItemsTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *) ((wxControlWithItems *) x));
}
static void *_p_wxFlexGridSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *)(wxGridSizer *) ((wxFlexGridSizer *) x));
}
static void *_p_wxGridSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *) ((wxGridSizer *) x));
}
static void *_p_wxAcceleratorTableTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxAcceleratorTable *) x));
}
static void *_p_wxControlTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxControl *) x));
}
static void *_p_wxColourDataTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxColourData *) x));
}
static void *_p_wxMoveEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxMoveEvent *) x));
}
static void *_p_wxSizeEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxSizeEvent *) x));
}
static void *_p_wxActivateEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxActivateEvent *) x));
}
static void *_p_wxIconizeEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxIconizeEvent *) x));
}
static void *_p_wxMaximizeEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxMaximizeEvent *) x));
}
static void *_p_wxQueryNewPaletteEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxQueryNewPaletteEvent *) x));
}
static void *_p_wxWindowCreateEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxWindowCreateEvent *) x));
}
static void *_p_wxIdleEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxIdleEvent *) x));
}
static void *_p_wxDateEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxDateEvent *) x));
}
static void *_p_wxCalculateLayoutEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxCalculateLayoutEvent *) x));
}
static void *_p_wxMouseCaptureLostEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxMouseCaptureLostEvent *) x));
}
static void *_p_wxPyPrintoutTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxPyPrintout *) x));
}
static void *_p_wxMDIChildFrameTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxFrame *) ((wxMDIChildFrame *) x));
}
static void *_p_wxStdDialogButtonSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *)(wxBoxSizer *) ((wxStdDialogButtonSizer *) x));
}
static void *_p_wxKeyEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxKeyEvent *) x));
}
static void *_p_wxNavigationKeyEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxNavigationKeyEvent *) x));
}
static void *_p_wxWindowDestroyEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxWindowDestroyEvent *) x));
}
static void *_p_wxSashEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxSashEvent *) x));
}
static void *_p_wxSimpleHtmlListBoxTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxPanel *)(wxPyVScrolledWindow *)(wxPyVListBox *)(wxPyHtmlListBox *) ((wxSimpleHtmlListBox *) x));
}
static void *_p_wxPyHtmlListBoxTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxPanel *)(wxPyVScrolledWindow *)(wxPyVListBox *) ((wxPyHtmlListBox *) x));
}
static void *_p_wxPyVListBoxTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxPanel *)(wxPyVScrolledWindow *) ((wxPyVListBox *) x));
}
static void *_p_wxPrintDataTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxPrintData *) x));
}
static void *_p_wxFontDataTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxFontData *) x));
}
static void *_p_wxMiniFrameTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxFrame *) ((wxMiniFrame *) x));
}
static void *_p_wxFrameTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *) ((wxFrame *) x));
}
static void *_p_wxPyPanelTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxPanel *) ((wxPyPanel *) x));
}
static void *_p_wxQueryLayoutInfoEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxQueryLayoutInfoEvent *) x));
}
static void *_p_wxSplashScreenTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxFrame *) ((wxSplashScreen *) x));
}
static void *_p_wxFileSystemTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxFileSystem *) x));
}
static void *_p_wxPyPrintPreviewTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPrintPreview *) ((wxPyPrintPreview *) x));
}
static void *_p_wxPrintPreviewTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxPrintPreview *) x));
}
static void *_p_wxLayoutConstraintsTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxLayoutConstraints *) x));
}
static void *_p_wxStaticBoxSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *)(wxBoxSizer *) ((wxStaticBoxSizer *) x));
}
static void *_p_wxBoxSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *) ((wxBoxSizer *) x));
}
static void *_p_wxSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxSizer *) x));
}
static void *_p_wxGridBagSizerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizer *)(wxGridSizer *)(wxFlexGridSizer *) ((wxGridBagSizer *) x));
}
static void *_p_wxNcPaintEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxNcPaintEvent *) x));
}
static void *_p_wxPaintEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxPaintEvent *) x));
}
static void *_p_wxClipboardTextEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxClipboardTextEvent *) x));
}
static void *_p_wxFSFileTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxFSFile *) x));
}
static void *_p_wxStandardDialogLayoutAdapterTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxDialogLayoutAdapter *) ((wxStandardDialogLayoutAdapter *) x));
}
static void *_p_wxDialogLayoutAdapterTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxDialogLayoutAdapter *) x));
}
static void *_p_wxSplitterEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *)(wxNotifyEvent *) ((wxSplitterEvent *) x));
}
static void *_p_wxSetCursorEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxSetCursorEvent *) x));
}
static void *_p_wxPGEditorDialogAdapterTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxPGEditorDialogAdapter *) x));
}
static void *_p_wxPGFileDialogAdapterTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGEditorDialogAdapter *) ((wxPGFileDialogAdapter *) x));
}
static void *_p_wxPGLongStringDialogAdapterTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGEditorDialogAdapter *) ((wxPGLongStringDialogAdapter *) x));
}
static void *_p_PyEditorDialogAdapterTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGEditorDialogAdapter *) ((PyEditorDialogAdapter *) x));
}
static void *_p_PyFileDialogAdapterTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGEditorDialogAdapter *)(wxPGFileDialogAdapter *) ((PyFileDialogAdapter *) x));
}
static void *_p_PyLongStringDialogAdapterTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGEditorDialogAdapter *)(wxPGLongStringDialogAdapter *) ((PyLongStringDialogAdapter *) x));
}
static void *_p_wxMenuTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *) ((wxMenu *) x));
}
static void *_p_wxGBSizerItemTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxSizerItem *) ((wxGBSizerItem *) x));
}
static void *_p_wxSizerItemTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxSizerItem *) x));
}
static void *_p_wxPGMultiButtonTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxPGMultiButton *) x));
}
static void *_p_wxPrintDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxPrintDialog *) x));
}
static void *_p_wxPageSetupDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxPageSetupDialog *) x));
}
static void *_p_wxFontDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxFontDialog *) x));
}
static void *_p_wxDirDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxDirDialog *) x));
}
static void *_p_wxColourDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxColourDialog *) x));
}
static void *_p_wxDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *) ((wxDialog *) x));
}
static void *_p_wxNotifyEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxNotifyEvent *) x));
}
static void *_p_wxPyEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxPyEvent *) x));
}
static void *_p_wxPGArrayEditorDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxPGArrayEditorDialog *) x));
}
static void *_p_wxPGArrayStringEditorDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxDialog *)(wxPGArrayEditorDialog *) ((wxPGArrayStringEditorDialog *) x));
}
static void *_p_wxPyEvtHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *) ((wxPyEvtHandler *) x));
}
static void *_p_wxEvtHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxEvtHandler *) x));
}
static void *_p_wxTGAHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxTGAHandler *) x));
}
static void *_p_wxTIFFHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxTIFFHandler *) x));
}
static void *_p_wxXPMHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxXPMHandler *) x));
}
static void *_p_wxImageHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxImageHandler *) x));
}
static void *_p_wxPyImageHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxPyImageHandler *) x));
}
static void *_p_wxBMPHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxBMPHandler *) x));
}
static void *_p_wxICOHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *)(wxBMPHandler *) ((wxICOHandler *) x));
}
static void *_p_wxCURHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *)(wxBMPHandler *)(wxICOHandler *) ((wxCURHandler *) x));
}
static void *_p_wxANIHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *)(wxBMPHandler *)(wxICOHandler *)(wxCURHandler *) ((wxANIHandler *) x));
}
static void *_p_wxPNGHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxPNGHandler *) x));
}
static void *_p_wxGIFHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxGIFHandler *) x));
}
static void *_p_wxPCXHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxPCXHandler *) x));
}
static void *_p_wxJPEGHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxJPEGHandler *) x));
}
static void *_p_wxPNMHandlerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxImageHandler *) ((wxPNMHandler *) x));
}
static void *_p_wxShowEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxShowEvent *) x));
}
static void *_p_wxPyScrolledWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxPanel *)(wxScrolledWindow *) ((wxPyScrolledWindow *) x));
}
static void *_p_wxMDIClientWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxMDIClientWindow *) x));
}
static void *_p_wxPyHVScrolledWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxPanel *) ((wxPyHVScrolledWindow *) x));
}
static void *_p_wxPyHScrolledWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxPanel *) ((wxPyHScrolledWindow *) x));
}
static void *_p_wxPyVScrolledWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxPanel *) ((wxPyVScrolledWindow *) x));
}
static void *_p_wxTipWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxFrame *) ((wxTipWindow *) x));
}
static void *_p_wxPyPopupTransientWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxPopupWindow *) ((wxPyPopupTransientWindow *) x));
}
static void *_p_wxPopupWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxPopupWindow *) x));
}
static void *_p_wxSashLayoutWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxSashWindow *) ((wxSashLayoutWindow *) x));
}
static void *_p_wxSashWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxSashWindow *) x));
}
static void *_p_wxSplitterWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxSplitterWindow *) x));
}
static void *_p_wxSplashScreenWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxSplashScreenWindow *) x));
}
static void *_p_wxTopLevelWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxTopLevelWindow *) x));
}
static void *_p_wxScrolledWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxPanel *) ((wxScrolledWindow *) x));
}
static void *_p_wxWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *) ((wxWindow *) x));
}
static void *_p_wxPGTextCtrlEditorTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGEditor *) ((wxPGTextCtrlEditor *) x));
}
static void *_p_wxPGComboBoxEditorTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGEditor *)(wxPGChoiceEditor *) ((wxPGComboBoxEditor *) x));
}
static void *_p_wxPGChoiceAndButtonEditorTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGEditor *)(wxPGChoiceEditor *) ((wxPGChoiceAndButtonEditor *) x));
}
static void *_p_wxPGTextCtrlAndButtonEditorTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGEditor *)(wxPGTextCtrlEditor *) ((wxPGTextCtrlAndButtonEditor *) x));
}
static void *_p_wxPGCheckBoxEditorTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGEditor *) ((wxPGCheckBoxEditor *) x));
}
static void *_p_wxPGSpinCtrlEditorTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGEditor *)(wxPGTextCtrlEditor *) ((wxPGSpinCtrlEditor *) x));
}
static void *_p_PyComboBoxEditorTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGEditor *)(wxPGChoiceEditor *)(wxPGComboBoxEditor *) ((PyComboBoxEditor *) x));
}
static void *_p_PyTextCtrlEditorTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGEditor *)(wxPGTextCtrlEditor *) ((PyTextCtrlEditor *) x));
}
static void *_p_wxPropertyGridPageTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *) ((wxPropertyGridPage *) x));
}
static void *_p_wxPGCellTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxPGCell *) x));
}
static void *_p_wxPropertyGridTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxControl *) ((wxPropertyGrid *) x));
}
static void *_p_wxFindReplaceDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxFindReplaceDialog *) x));
}
static void *_p_wxProgressDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxDialog *)(wxGenericProgressDialog *) ((wxProgressDialog *) x));
}
static void *_p_wxGenericProgressDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxGenericProgressDialog *) x));
}
static void *_p_wxMessageDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxMessageDialog *) x));
}
static void *_p_wxNumberEntryDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxNumberEntryDialog *) x));
}
static void *_p_wxPasswordEntryDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxDialog *)(wxTextEntryDialog *) ((wxPasswordEntryDialog *) x));
}
static void *_p_wxTextEntryDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxTextEntryDialog *) x));
}
static void *_p_wxSingleChoiceDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxSingleChoiceDialog *) x));
}
static void *_p_wxMultiChoiceDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxMultiChoiceDialog *) x));
}
static void *_p_wxFileDialogTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxDialog *) ((wxFileDialog *) x));
}
static void *_p_wxPyWindowTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxPyWindow *) x));
}
static void *_p_wxThreadEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxThreadEvent *) x));
}
static void *_p_wxSysColourChangedEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxSysColourChangedEvent *) x));
}
static void *_p_wxMouseCaptureChangedEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxMouseCaptureChangedEvent *) x));
}
static void *_p_wxDisplayChangedEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxDisplayChangedEvent *) x));
}
static void *_p_wxPaletteChangedEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxPaletteChangedEvent *) x));
}
static void *_p_wxEventBlockerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *) ((wxEventBlocker *) x));
}
static void *_p_wxPropertyGridEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxPropertyGridEvent *) x));
}
static void *_p_wxPGEditorTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxPGEditor *) x));
}
static void *_p_wxPGChoiceEditorTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGEditor *) ((wxPGChoiceEditor *) x));
}
static void *_p_PyEditorTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGEditor *) ((PyEditor *) x));
}
static void *_p_PyChoiceEditorTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGEditor *)(wxPGChoiceEditor *) ((PyChoiceEditor *) x));
}
static void *_p_wxColourPropertyValueTo_p_wxObject(void *x) {
    return (void *)((wxObject *)  ((wxColourPropertyValue *) x));
}
static void *_p_wxPanelTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxPanel *) x));
}
static void *_p_wxTaskBarIconEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxTaskBarIconEvent *) x));
}
static void *_p_wxScrollWinEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxScrollWinEvent *) x));
}
static void *_p_wxMenuEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxMenuEvent *) x));
}
static void *_p_wxContextMenuEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxContextMenuEvent *) x));
}
static void *_p_wxCommandEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxCommandEvent *) x));
}
static void *_p_wxPyCommandEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxPyCommandEvent *) x));
}
static void *_p_wxPropertyGridManagerTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxPanel *) ((wxPropertyGridManager *) x));
}
static void *_p_wxStatusBarTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxStatusBar *) x));
}
static void *_p_wxFocusEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxFocusEvent *) x));
}
static void *_p_wxChildFocusEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *)(wxCommandEvent *) ((wxChildFocusEvent *) x));
}
static void *_p_wxDropFilesEventTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvent *) ((wxDropFilesEvent *) x));
}
static void *_p_wxPropertyCategoryTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxPGProperty *) ((wxPropertyCategory *) x));
}
static void *_p_wxMDIParentFrameTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *)(wxTopLevelWindow *)(wxFrame *) ((wxMDIParentFrame *) x));
}
static void *_p_wxMenuBarTo_p_wxObject(void *x) {
    return (void *)((wxObject *) (wxEvtHandler *)(wxWindow *) ((wxMenuBar *) x));
}
static void *_p_wxSplashScreenTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxFrame *) ((wxSplashScreen *) x));
}
static void *_p_wxMiniFrameTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxFrame *) ((wxMiniFrame *) x));
}
static void *_p_wxPyPanelTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxPanel *) ((wxPyPanel *) x));
}
static void *_p_wxMenuBarTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxMenuBar *) x));
}
static void *_p_wxTextCtrlBaseTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *) ((wxTextCtrlBase *) x));
}
static void *_p_wxBookCtrlBaseTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *) ((wxBookCtrlBase *) x));
}
static void *_p_wxNumberEntryDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxDialog *) ((wxNumberEntryDialog *) x));
}
static void *_p_wxPasswordEntryDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxDialog *)(wxTextEntryDialog *) ((wxPasswordEntryDialog *) x));
}
static void *_p_wxTextEntryDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxDialog *) ((wxTextEntryDialog *) x));
}
static void *_p_wxSingleChoiceDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxDialog *) ((wxSingleChoiceDialog *) x));
}
static void *_p_wxMultiChoiceDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxDialog *) ((wxMultiChoiceDialog *) x));
}
static void *_p_wxFileDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxDialog *) ((wxFileDialog *) x));
}
static void *_p_wxMessageDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxDialog *) ((wxMessageDialog *) x));
}
static void *_p_wxGenericProgressDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxDialog *) ((wxGenericProgressDialog *) x));
}
static void *_p_wxProgressDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxDialog *)(wxGenericProgressDialog *) ((wxProgressDialog *) x));
}
static void *_p_wxFindReplaceDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxDialog *) ((wxFindReplaceDialog *) x));
}
static void *_p_wxPGMultiButtonTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxPGMultiButton *) x));
}
static void *_p_wxPanelTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxPanel *) x));
}
static void *_p_wxStatusBarTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxStatusBar *) x));
}
static void *_p_wxPyHVScrolledWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxPanel *) ((wxPyHVScrolledWindow *) x));
}
static void *_p_wxPyHScrolledWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxPanel *) ((wxPyHScrolledWindow *) x));
}
static void *_p_wxPyVScrolledWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxPanel *) ((wxPyVScrolledWindow *) x));
}
static void *_p_wxTipWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxFrame *) ((wxTipWindow *) x));
}
static void *_p_wxPyPopupTransientWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxPopupWindow *) ((wxPyPopupTransientWindow *) x));
}
static void *_p_wxPopupWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxPopupWindow *) x));
}
static void *_p_wxSashLayoutWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxSashWindow *) ((wxSashLayoutWindow *) x));
}
static void *_p_wxSashWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxSashWindow *) x));
}
static void *_p_wxSplitterWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxSplitterWindow *) x));
}
static void *_p_wxScrolledWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxPanel *) ((wxScrolledWindow *) x));
}
static void *_p_wxTopLevelWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxTopLevelWindow *) x));
}
static void *_p_wxSplashScreenWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxSplashScreenWindow *) x));
}
static void *_p_wxMDIClientWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxMDIClientWindow *) x));
}
static void *_p_wxPyScrolledWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxPanel *)(wxScrolledWindow *) ((wxPyScrolledWindow *) x));
}
static void *_p_wxControlTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxControl *) x));
}
static void *_p_wxPreviewFrameTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxFrame *) ((wxPreviewFrame *) x));
}
static void *_p_wxPyPreviewFrameTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxFrame *)(wxPreviewFrame *) ((wxPyPreviewFrame *) x));
}
static void *_p_wxMDIChildFrameTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxFrame *) ((wxMDIChildFrame *) x));
}
static void *_p_wxControlWithItemsTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *) ((wxControlWithItems *) x));
}
static void *_p_wxPyWindowTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *)  ((wxPyWindow *) x));
}
static void *_p_wxPreviewCanvasTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxPanel *)(wxScrolledWindow *) ((wxPreviewCanvas *) x));
}
static void *_p_wxSimpleHtmlListBoxTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxPanel *)(wxPyVScrolledWindow *)(wxPyVListBox *)(wxPyHtmlListBox *) ((wxSimpleHtmlListBox *) x));
}
static void *_p_wxPyHtmlListBoxTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxPanel *)(wxPyVScrolledWindow *)(wxPyVListBox *) ((wxPyHtmlListBox *) x));
}
static void *_p_wxPyVListBoxTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxPanel *)(wxPyVScrolledWindow *) ((wxPyVListBox *) x));
}
static void *_p_wxPropertyGridTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxControl *) ((wxPropertyGrid *) x));
}
static void *_p_wxPreviewControlBarTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxPanel *) ((wxPreviewControlBar *) x));
}
static void *_p_wxPyPreviewControlBarTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxPanel *)(wxPreviewControlBar *) ((wxPyPreviewControlBar *) x));
}
static void *_p_wxFrameTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *) ((wxFrame *) x));
}
static void *_p_wxDirDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxDialog *) ((wxDirDialog *) x));
}
static void *_p_wxColourDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxDialog *) ((wxColourDialog *) x));
}
static void *_p_wxDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *) ((wxDialog *) x));
}
static void *_p_wxFontDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxDialog *) ((wxFontDialog *) x));
}
static void *_p_wxPGArrayEditorDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxDialog *) ((wxPGArrayEditorDialog *) x));
}
static void *_p_wxPGArrayStringEditorDialogTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxDialog *)(wxPGArrayEditorDialog *) ((wxPGArrayStringEditorDialog *) x));
}
static void *_p_wxMDIParentFrameTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxTopLevelWindow *)(wxFrame *) ((wxMDIParentFrame *) x));
}
static void *_p_wxPropertyGridManagerTo_p_wxWindow(void *x) {
    return (void *)((wxWindow *) (wxPanel *) ((wxPropertyGridManager *) x));
}
static void *_p_wxFrameTo_p_wxTopLevelWindow(void *x) {
    return (void *)((wxTopLevelWindow *)  ((wxFrame *) x));
}
static void *_p_wxMiniFrameTo_p_wxTopLevelWindow(void *x) {
    return (void *)((wxTopLevelWindow *) (wxFrame *) ((wxMiniFrame *) x));
}
static void *_p_wxFontDialogTo_p_wxTopLevelWindow(void *x) {
    return (void *)((wxTopLevelWindow *) (wxDialog *) ((wxFontDialog *) x));
}
static void *_p_wxDirDialogTo_p_wxTopLevelWindow(void *x) {
    return (void *)((wxTopLevelWindow *) (wxDialog *) ((wxDirDialog *) x));
}
static void *_p_wxColourDialogTo_p_wxTopLevelWindow(void *x) {
    return (void *)((wxTopLevelWindow *) (wxDialog *) ((wxColourDialog *) x));
}
static void *_p_wxDialogTo_p_wxTopLevelWindow(void *x) {
    return (void *)((wxTopLevelWindow *)  ((wxDialog *) x));
}
static void *_p_wxPGArrayEditorDialogTo_p_wxTopLevelWindow(void *x) {
    return (void *)((wxTopLevelWindow *) (wxDialog *) ((wxPGArrayEditorDialog *) x));
}
static void *_p_wxPGArrayStringEditorDialogTo_p_wxTopLevelWindow(void *x) {
    return (void *)((wxTopLevelWindow *) (wxDialog *)(wxPGArrayEditorDialog *) ((wxPGArrayStringEditorDialog *) x));
}
static void *_p_wxSplashScreenTo_p_wxTopLevelWindow(void *x) {
    return (void *)((wxTopLevelWindow *) (wxFrame *) ((wxSplashScreen *) x));
}
static void *_p_wxTipWindowTo_p_wxTopLevelWindow(void *x) {
    return (void *)((wxTopLevelWindow *) (wxFrame *) ((wxTipWindow *) x));
}
static void *_p_wxMDIParentFrameTo_p_wxTopLevelWindow(void *x) {
    return (void *)((wxTopLevelWindow *) (wxFrame *) ((wxMDIParentFrame *) x));
}
static void *_p_wxMDIChildFrameTo_p_wxTopLevelWindow(void *x) {
    return (void *)((wxTopLevelWindow *) (wxFrame *) ((wxMDIChildFrame *) x));
}
static void *_p_wxNumberEntryDialogTo_p_wxTopLevelWindow(void *x) {
    return (void *)((wxTopLevelWindow *) (wxDialog *) ((wxNumberEntryDialog *) x));
}
static void *_p_wxPasswordEntryDialogTo_p_wxTopLevelWindow(void *x) {
    return (void *)((wxTopLevelWindow *) (wxDialog *)(wxTextEntryDialog *) ((wxPasswordEntryDialog *) x));
}
static void *_p_wxTextEntryDialogTo_p_wxTopLevelWindow(void *x) {
    return (void *)((wxTopLevelWindow *) (wxDialog *) ((wxTextEntryDialog *) x));
}
static void *_p_wxSingleChoiceDialogTo_p_wxTopLevelWindow(void *x) {
    return (void *)((wxTopLevelWindow *) (wxDialog *) ((wxSingleChoiceDialog *) x));
}
static void *_p_wxMultiChoiceDialogTo_p_wxTopLevelWindow(void *x) {
    return (void *)((wxTopLevelWindow *) (wxDialog *) ((wxMultiChoiceDialog *) x));
}
static void *_p_wxFileDialogTo_p_wxTopLevelWindow(void *x) {
    return (void *)((wxTopLevelWindow *) (wxDialog *) ((wxFileDialog *) x));
}
static void *_p_wxMessageDialogTo_p_wxTopLevelWindow(void *x) {
    return (void *)((wxTopLevelWindow *) (wxDialog *) ((wxMessageDialog *) x));
}
static void *_p_wxGenericProgressDialogTo_p_wxTopLevelWindow(void *x) {
    return (void *)((wxTopLevelWindow *) (wxDialog *) ((wxGenericProgressDialog *) x));
}
static void *_p_wxProgressDialogTo_p_wxTopLevelWindow(void *x) {
    return (void *)((wxTopLevelWindow *) (wxDialog *)(wxGenericProgressDialog *) ((wxProgressDialog *) x));
}
static void *_p_wxFindReplaceDialogTo_p_wxTopLevelWindow(void *x) {
    return (void *)((wxTopLevelWindow *) (wxDialog *) ((wxFindReplaceDialog *) x));
}
static void *_p_wxPreviewFrameTo_p_wxTopLevelWindow(void *x) {
    return (void *)((wxTopLevelWindow *) (wxFrame *) ((wxPreviewFrame *) x));
}
static void *_p_wxPyPreviewFrameTo_p_wxTopLevelWindow(void *x) {
    return (void *)((wxTopLevelWindow *) (wxFrame *)(wxPreviewFrame *) ((wxPyPreviewFrame *) x));
}
static void *_p_p_wxSplashScreenTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxTopLevelWindow *)(wxFrame *) ((wxSplashScreen **) x));
}
static void *_p_p_wxMiniFrameTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxTopLevelWindow *)(wxFrame *) ((wxMiniFrame **) x));
}
static void *_p_p_wxPyPanelTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxPanel *) ((wxPyPanel **) x));
}
static void *_p_p_wxMenuBarTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **)  ((wxMenuBar **) x));
}
static void *_p_p_wxTextCtrlBaseTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxControl *) ((wxTextCtrlBase **) x));
}
static void *_p_p_wxBookCtrlBaseTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxControl *) ((wxBookCtrlBase **) x));
}
static void *_p_p_wxNumberEntryDialogTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxTopLevelWindow *)(wxDialog *) ((wxNumberEntryDialog **) x));
}
static void *_p_p_wxPasswordEntryDialogTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxTopLevelWindow *)(wxDialog *)(wxTextEntryDialog *) ((wxPasswordEntryDialog **) x));
}
static void *_p_p_wxTextEntryDialogTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxTopLevelWindow *)(wxDialog *) ((wxTextEntryDialog **) x));
}
static void *_p_p_wxSingleChoiceDialogTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxTopLevelWindow *)(wxDialog *) ((wxSingleChoiceDialog **) x));
}
static void *_p_p_wxMultiChoiceDialogTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxTopLevelWindow *)(wxDialog *) ((wxMultiChoiceDialog **) x));
}
static void *_p_p_wxFileDialogTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxTopLevelWindow *)(wxDialog *) ((wxFileDialog **) x));
}
static void *_p_p_wxMessageDialogTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxTopLevelWindow *)(wxDialog *) ((wxMessageDialog **) x));
}
static void *_p_p_wxGenericProgressDialogTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxTopLevelWindow *)(wxDialog *) ((wxGenericProgressDialog **) x));
}
static void *_p_p_wxProgressDialogTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxTopLevelWindow *)(wxDialog *)(wxGenericProgressDialog *) ((wxProgressDialog **) x));
}
static void *_p_p_wxFindReplaceDialogTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxTopLevelWindow *)(wxDialog *) ((wxFindReplaceDialog **) x));
}
static void *_p_p_wxPGMultiButtonTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **)  ((wxPGMultiButton **) x));
}
static void *_p_p_wxPanelTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **)  ((wxPanel **) x));
}
static void *_p_p_wxStatusBarTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **)  ((wxStatusBar **) x));
}
static void *_p_p_wxPyHVScrolledWindowTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxPanel *) ((wxPyHVScrolledWindow **) x));
}
static void *_p_p_wxPyHScrolledWindowTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxPanel *) ((wxPyHScrolledWindow **) x));
}
static void *_p_p_wxPyVScrolledWindowTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxPanel *) ((wxPyVScrolledWindow **) x));
}
static void *_p_p_wxTipWindowTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxTopLevelWindow *)(wxFrame *) ((wxTipWindow **) x));
}
static void *_p_p_wxPyPopupTransientWindowTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxPopupWindow *) ((wxPyPopupTransientWindow **) x));
}
static void *_p_p_wxPopupWindowTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **)  ((wxPopupWindow **) x));
}
static void *_p_p_wxSashLayoutWindowTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxSashWindow *) ((wxSashLayoutWindow **) x));
}
static void *_p_p_wxSashWindowTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **)  ((wxSashWindow **) x));
}
static void *_p_p_wxSplitterWindowTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **)  ((wxSplitterWindow **) x));
}
static void *_p_p_wxScrolledWindowTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxPanel *) ((wxScrolledWindow **) x));
}
static void *_p_p_wxTopLevelWindowTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **)  ((wxTopLevelWindow **) x));
}
static void *_p_p_wxSplashScreenWindowTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **)  ((wxSplashScreenWindow **) x));
}
static void *_p_p_wxMDIClientWindowTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **)  ((wxMDIClientWindow **) x));
}
static void *_p_p_wxPyScrolledWindowTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxPanel *)(wxScrolledWindow *) ((wxPyScrolledWindow **) x));
}
static void *_p_p_wxControlTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **)  ((wxControl **) x));
}
static void *_p_p_wxPreviewFrameTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxTopLevelWindow *)(wxFrame *) ((wxPreviewFrame **) x));
}
static void *_p_p_wxPyPreviewFrameTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxTopLevelWindow *)(wxFrame *)(wxPreviewFrame *) ((wxPyPreviewFrame **) x));
}
static void *_p_p_wxMDIChildFrameTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxTopLevelWindow *)(wxFrame *) ((wxMDIChildFrame **) x));
}
static void *_p_p_wxControlWithItemsTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxControl *) ((wxControlWithItems **) x));
}
static void *_p_p_wxPyWindowTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **)  ((wxPyWindow **) x));
}
static void *_p_p_wxPreviewCanvasTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxPanel *)(wxScrolledWindow *) ((wxPreviewCanvas **) x));
}
static void *_p_p_wxSimpleHtmlListBoxTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxPanel *)(wxPyVScrolledWindow *)(wxPyVListBox *)(wxPyHtmlListBox *) ((wxSimpleHtmlListBox **) x));
}
static void *_p_p_wxPyHtmlListBoxTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxPanel *)(wxPyVScrolledWindow *)(wxPyVListBox *) ((wxPyHtmlListBox **) x));
}
static void *_p_p_wxPyVListBoxTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxPanel *)(wxPyVScrolledWindow *) ((wxPyVListBox **) x));
}
static void *_p_p_wxPropertyGridTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxControl *) ((wxPropertyGrid **) x));
}
static void *_p_p_wxPreviewControlBarTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxPanel *) ((wxPreviewControlBar **) x));
}
static void *_p_p_wxPyPreviewControlBarTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxPanel *)(wxPreviewControlBar *) ((wxPyPreviewControlBar **) x));
}
static void *_p_p_wxFrameTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxTopLevelWindow *) ((wxFrame **) x));
}
static void *_p_p_wxDirDialogTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxTopLevelWindow *)(wxDialog *) ((wxDirDialog **) x));
}
static void *_p_p_wxColourDialogTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxTopLevelWindow *)(wxDialog *) ((wxColourDialog **) x));
}
static void *_p_p_wxDialogTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxTopLevelWindow *) ((wxDialog **) x));
}
static void *_p_p_wxFontDialogTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxTopLevelWindow *)(wxDialog *) ((wxFontDialog **) x));
}
static void *_p_p_wxPGArrayEditorDialogTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxTopLevelWindow *)(wxDialog *) ((wxPGArrayEditorDialog **) x));
}
static void *_p_p_wxPGArrayStringEditorDialogTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxTopLevelWindow *)(wxDialog *)(wxPGArrayEditorDialog *) ((wxPGArrayStringEditorDialog **) x));
}
static void *_p_p_wxMDIParentFrameTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxTopLevelWindow *)(wxFrame *) ((wxMDIParentFrame **) x));
}
static void *_p_p_wxPropertyGridManagerTo_p_p_wxWindow(void *x) {
    return (void *)((wxWindow **) (wxPanel *) ((wxPropertyGridManager **) x));
}
static void *_p_wxPGArrayEditorDialogTo_p_wxDialog(void *x) {
    return (void *)((wxDialog *)  ((wxPGArrayEditorDialog *) x));
}
static void *_p_wxFontDialogTo_p_wxDialog(void *x) {
    return (void *)((wxDialog *)  ((wxFontDialog *) x));
}
static void *_p_wxDirDialogTo_p_wxDialog(void *x) {
    return (void *)((wxDialog *)  ((wxDirDialog *) x));
}
static void *_p_wxColourDialogTo_p_wxDialog(void *x) {
    return (void *)((wxDialog *)  ((wxColourDialog *) x));
}
static void *_p_wxPGArrayStringEditorDialogTo_p_wxDialog(void *x) {
    return (void *)((wxDialog *) (wxPGArrayEditorDialog *) ((wxPGArrayStringEditorDialog *) x));
}
static void *_p_wxFindReplaceDialogTo_p_wxDialog(void *x) {
    return (void *)((wxDialog *)  ((wxFindReplaceDialog *) x));
}
static void *_p_wxProgressDialogTo_p_wxDialog(void *x) {
    return (void *)((wxDialog *) (wxGenericProgressDialog *) ((wxProgressDialog *) x));
}
static void *_p_wxGenericProgressDialogTo_p_wxDialog(void *x) {
    return (void *)((wxDialog *)  ((wxGenericProgressDialog *) x));
}
static void *_p_wxMessageDialogTo_p_wxDialog(void *x) {
    return (void *)((wxDialog *)  ((wxMessageDialog *) x));
}
static void *_p_wxNumberEntryDialogTo_p_wxDialog(void *x) {
    return (void *)((wxDialog *)  ((wxNumberEntryDialog *) x));
}
static void *_p_wxPasswordEntryDialogTo_p_wxDialog(void *x) {
    return (void *)((wxDialog *) (wxTextEntryDialog *) ((wxPasswordEntryDialog *) x));
}
static void *_p_wxTextEntryDialogTo_p_wxDialog(void *x) {
    return (void *)((wxDialog *)  ((wxTextEntryDialog *) x));
}
static void *_p_wxSingleChoiceDialogTo_p_wxDialog(void *x) {
    return (void *)((wxDialog *)  ((wxSingleChoiceDialog *) x));
}
static void *_p_wxMultiChoiceDialogTo_p_wxDialog(void *x) {
    return (void *)((wxDialog *)  ((wxMultiChoiceDialog *) x));
}
static void *_p_wxFileDialogTo_p_wxDialog(void *x) {
    return (void *)((wxDialog *)  ((wxFileDialog *) x));
}
static void *_p_wxPGArrayStringEditorDialogTo_p_wxPGArrayEditorDialog(void *x) {
    return (void *)((wxPGArrayEditorDialog *)  ((wxPGArrayStringEditorDialog *) x));
}
static void *_p_wxScrolledWindowTo_p_wxPanel(void *x) {
    return (void *)((wxPanel *)  ((wxScrolledWindow *) x));
}
static void *_p_wxPyVScrolledWindowTo_p_wxPanel(void *x) {
    return (void *)((wxPanel *)  ((wxPyVScrolledWindow *) x));
}
static void *_p_wxPyHScrolledWindowTo_p_wxPanel(void *x) {
    return (void *)((wxPanel *)  ((wxPyHScrolledWindow *) x));
}
static void *_p_wxPyHVScrolledWindowTo_p_wxPanel(void *x) {
    return (void *)((wxPanel *)  ((wxPyHVScrolledWindow *) x));
}
static void *_p_wxPyScrolledWindowTo_p_wxPanel(void *x) {
    return (void *)((wxPanel *) (wxScrolledWindow *) ((wxPyScrolledWindow *) x));
}
static void *_p_wxPyVListBoxTo_p_wxPanel(void *x) {
    return (void *)((wxPanel *) (wxPyVScrolledWindow *) ((wxPyVListBox *) x));
}
static void *_p_wxPyHtmlListBoxTo_p_wxPanel(void *x) {
    return (void *)((wxPanel *) (wxPyVScrolledWindow *)(wxPyVListBox *) ((wxPyHtmlListBox *) x));
}
static void *_p_wxSimpleHtmlListBoxTo_p_wxPanel(void *x) {
    return (void *)((wxPanel *) (wxPyVScrolledWindow *)(wxPyVListBox *)(wxPyHtmlListBox *) ((wxSimpleHtmlListBox *) x));
}
static void *_p_wxPyPanelTo_p_wxPanel(void *x) {
    return (void *)((wxPanel *)  ((wxPyPanel *) x));
}
static void *_p_wxPropertyGridManagerTo_p_wxPanel(void *x) {
    return (void *)((wxPanel *)  ((wxPropertyGridManager *) x));
}
static void *_p_wxPreviewCanvasTo_p_wxPanel(void *x) {
    return (void *)((wxPanel *) (wxScrolledWindow *) ((wxPreviewCanvas *) x));
}
static void *_p_wxPreviewControlBarTo_p_wxPanel(void *x) {
    return (void *)((wxPanel *)  ((wxPreviewControlBar *) x));
}
static void *_p_wxPyPreviewControlBarTo_p_wxPanel(void *x) {
    return (void *)((wxPanel *) (wxPreviewControlBar *) ((wxPyPreviewControlBar *) x));
}
static void *_p_wxSashEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxSashEvent *) x));
}
static void *_p_wxWindowDestroyEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxWindowDestroyEvent *) x));
}
static void *_p_wxSplitterEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *) (wxNotifyEvent *) ((wxSplitterEvent *) x));
}
static void *_p_wxClipboardTextEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxClipboardTextEvent *) x));
}
static void *_p_wxBookCtrlEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *) (wxNotifyEvent *) ((wxBookCtrlEvent *) x));
}
static void *_p_wxScrollEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxScrollEvent *) x));
}
static void *_p_wxPyCommandEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxPyCommandEvent *) x));
}
static void *_p_wxContextMenuEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxContextMenuEvent *) x));
}
static void *_p_wxChildFocusEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxChildFocusEvent *) x));
}
static void *_p_wxDateEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxDateEvent *) x));
}
static void *_p_wxWindowCreateEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxWindowCreateEvent *) x));
}
static void *_p_wxPropertyGridEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxPropertyGridEvent *) x));
}
static void *_p_wxNotifyEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxNotifyEvent *) x));
}
static void *_p_wxWindowModalDialogEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxWindowModalDialogEvent *) x));
}
static void *_p_wxUpdateUIEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxUpdateUIEvent *) x));
}
static void *_p_wxFindDialogEventTo_p_wxCommandEvent(void *x) {
    return (void *)((wxCommandEvent *)  ((wxFindDialogEvent *) x));
}
static void *_p_wxPyValidatorTo_p_wxValidator(void *x) {
    return (void *)((wxValidator *)  ((wxPyValidator *) x));
}
static swig_type_info _swigt__p_FlagType = {"_p_FlagType", "FlagType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PyArrayStringProperty = {"_p_PyArrayStringProperty", "PyArrayStringProperty *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PyChoiceEditor = {"_p_PyChoiceEditor", "PyChoiceEditor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PyColourProperty = {"_p_PyColourProperty", "PyColourProperty *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PyComboBoxEditor = {"_p_PyComboBoxEditor", "PyComboBoxEditor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PyEditEnumProperty = {"_p_PyEditEnumProperty", "PyEditEnumProperty *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PyEditor = {"_p_PyEditor", "PyEditor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PyEditorDialogAdapter = {"_p_PyEditorDialogAdapter", "PyEditorDialogAdapter *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PyEnumProperty = {"_p_PyEnumProperty", "PyEnumProperty *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PyFileDialogAdapter = {"_p_PyFileDialogAdapter", "PyFileDialogAdapter *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PyFileProperty = {"_p_PyFileProperty", "PyFileProperty *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PyFlagsProperty = {"_p_PyFlagsProperty", "PyFlagsProperty *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PyFloatProperty = {"_p_PyFloatProperty", "PyFloatProperty *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PyFontProperty = {"_p_PyFontProperty", "PyFontProperty *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PyIntProperty = {"_p_PyIntProperty", "PyIntProperty *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PyLongStringDialogAdapter = {"_p_PyLongStringDialogAdapter", "PyLongStringDialogAdapter *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PyLongStringProperty = {"_p_PyLongStringProperty", "PyLongStringProperty *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PyProperty = {"_p_PyProperty", "PyProperty *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PyStringProperty = {"_p_PyStringProperty", "PyStringProperty *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PySystemColourProperty = {"_p_PySystemColourProperty", "PySystemColourProperty *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PyTextCtrlEditor = {"_p_PyTextCtrlEditor", "PyTextCtrlEditor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PyUIntProperty = {"_p_PyUIntProperty", "PyUIntProperty *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ValArrItem = {"_p_ValArrItem", "ValArrItem *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_double = {"_p_double", "double *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_p_wxPropertyGrid_p_wxPGProperty_p_wxPGProperty__int = {"_p_f_p_wxPropertyGrid_p_wxPGProperty_p_wxPGProperty__int", "int (*)(wxPropertyGrid *,wxPGProperty *,wxPGProperty *)|wxPGSortCallback", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int = {"_p_int", "int *|wxEventType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_long = {"_p_long", "long *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_wxChar = {"_p_p_wxChar", "wxChar **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_wxWindow = {"_p_p_wxWindow", "wxWindow **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_wxSplashScreen = {"_p_p_wxSplashScreen", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxMiniFrame = {"_p_p_wxMiniFrame", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxPyPanel = {"_p_p_wxPyPanel", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxMenuBar = {"_p_p_wxMenuBar", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxTextCtrlBase = {"_p_p_wxTextCtrlBase", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxBookCtrlBase = {"_p_p_wxBookCtrlBase", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxMessageDialog = {"_p_p_wxMessageDialog", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxFileDialog = {"_p_p_wxFileDialog", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxMultiChoiceDialog = {"_p_p_wxMultiChoiceDialog", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxFindReplaceDialog = {"_p_p_wxFindReplaceDialog", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxProgressDialog = {"_p_p_wxProgressDialog", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxGenericProgressDialog = {"_p_p_wxGenericProgressDialog", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxNumberEntryDialog = {"_p_p_wxNumberEntryDialog", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxPasswordEntryDialog = {"_p_p_wxPasswordEntryDialog", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxTextEntryDialog = {"_p_p_wxTextEntryDialog", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxSingleChoiceDialog = {"_p_p_wxSingleChoiceDialog", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxPGMultiButton = {"_p_p_wxPGMultiButton", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxPanel = {"_p_p_wxPanel", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxStatusBar = {"_p_p_wxStatusBar", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxPyHVScrolledWindow = {"_p_p_wxPyHVScrolledWindow", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxPyHScrolledWindow = {"_p_p_wxPyHScrolledWindow", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxPyVScrolledWindow = {"_p_p_wxPyVScrolledWindow", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxTipWindow = {"_p_p_wxTipWindow", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxPyPopupTransientWindow = {"_p_p_wxPyPopupTransientWindow", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxPopupWindow = {"_p_p_wxPopupWindow", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxSashLayoutWindow = {"_p_p_wxSashLayoutWindow", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxSashWindow = {"_p_p_wxSashWindow", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxSplitterWindow = {"_p_p_wxSplitterWindow", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxScrolledWindow = {"_p_p_wxScrolledWindow", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxTopLevelWindow = {"_p_p_wxTopLevelWindow", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxSplashScreenWindow = {"_p_p_wxSplashScreenWindow", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxMDIClientWindow = {"_p_p_wxMDIClientWindow", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxPyScrolledWindow = {"_p_p_wxPyScrolledWindow", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxControl = {"_p_p_wxControl", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxPreviewFrame = {"_p_p_wxPreviewFrame", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxPyPreviewFrame = {"_p_p_wxPyPreviewFrame", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxMDIChildFrame = {"_p_p_wxMDIChildFrame", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxControlWithItems = {"_p_p_wxControlWithItems", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxPyWindow = {"_p_p_wxPyWindow", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxPreviewCanvas = {"_p_p_wxPreviewCanvas", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxSimpleHtmlListBox = {"_p_p_wxSimpleHtmlListBox", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxPyHtmlListBox = {"_p_p_wxPyHtmlListBox", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxPyVListBox = {"_p_p_wxPyVListBox", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxPropertyGrid = {"_p_p_wxPropertyGrid", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxPreviewControlBar = {"_p_p_wxPreviewControlBar", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxPyPreviewControlBar = {"_p_p_wxPyPreviewControlBar", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxFrame = {"_p_p_wxFrame", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxDirDialog = {"_p_p_wxDirDialog", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxColourDialog = {"_p_p_wxColourDialog", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxDialog = {"_p_p_wxDialog", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxFontDialog = {"_p_p_wxFontDialog", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxPGArrayEditorDialog = {"_p_p_wxPGArrayEditorDialog", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxPGArrayStringEditorDialog = {"_p_p_wxPGArrayStringEditorDialog", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxMDIParentFrame = {"_p_p_wxMDIParentFrame", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_p_wxPropertyGridManager = {"_p_p_wxPropertyGridManager", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_unsigned_char = {"_p_unsigned_char", "unsigned char *|byte *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_int = {"_p_unsigned_int", "unsigned int *|time_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_long = {"_p_unsigned_long", "unsigned long *|wxUIntPtr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_void = {"_p_void", "void *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxArrayInt = {"_p_wxArrayInt", "wxArrayInt *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxArrayPGProperty = {"_p_wxArrayPGProperty", "wxArrayPGProperty *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxArrayString = {"_p_wxArrayString", "wxArrayString *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxArrayStringProperty = {"_p_wxArrayStringProperty", "wxArrayStringProperty *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxBitmap = {"_p_wxBitmap", "wxBitmap *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxChar = {"_p_wxChar", "wxChar *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxColour = {"_p_wxColour", "wxColour *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxColourProperty = {"_p_wxColourProperty", "wxColourProperty *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxColourPropertyValue = {"_p_wxColourPropertyValue", "wxColourPropertyValue *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxCommandEvent = {"_p_wxCommandEvent", "wxCommandEvent *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxSashEvent = {"_p_wxSashEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxWindowDestroyEvent = {"_p_wxWindowDestroyEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxSplitterEvent = {"_p_wxSplitterEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxClipboardTextEvent = {"_p_wxClipboardTextEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxBookCtrlEvent = {"_p_wxBookCtrlEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxScrollEvent = {"_p_wxScrollEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyCommandEvent = {"_p_wxPyCommandEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxContextMenuEvent = {"_p_wxContextMenuEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxChildFocusEvent = {"_p_wxChildFocusEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxDateEvent = {"_p_wxDateEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxWindowCreateEvent = {"_p_wxWindowCreateEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxNotifyEvent = {"_p_wxNotifyEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxWindowModalDialogEvent = {"_p_wxWindowModalDialogEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxUpdateUIEvent = {"_p_wxUpdateUIEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxFindDialogEvent = {"_p_wxFindDialogEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxControl = {"_p_wxControl", "wxControl *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxControlWithItems = {"_p_wxControlWithItems", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxTextCtrlBase = {"_p_wxTextCtrlBase", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxBookCtrlBase = {"_p_wxBookCtrlBase", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxDC = {"_p_wxDC", "wxDC *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxDateTime = {"_p_wxDateTime", "wxDateTime *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxDialog = {"_p_wxDialog", "wxDialog *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxFontDialog = {"_p_wxFontDialog", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxDirDialog = {"_p_wxDirDialog", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxColourDialog = {"_p_wxColourDialog", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxFindReplaceDialog = {"_p_wxFindReplaceDialog", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxProgressDialog = {"_p_wxProgressDialog", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxGenericProgressDialog = {"_p_wxGenericProgressDialog", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxMessageDialog = {"_p_wxMessageDialog", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxNumberEntryDialog = {"_p_wxNumberEntryDialog", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPasswordEntryDialog = {"_p_wxPasswordEntryDialog", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxTextEntryDialog = {"_p_wxTextEntryDialog", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxSingleChoiceDialog = {"_p_wxSingleChoiceDialog", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxMultiChoiceDialog = {"_p_wxMultiChoiceDialog", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxFileDialog = {"_p_wxFileDialog", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxDuplexMode = {"_p_wxDuplexMode", "enum wxDuplexMode *|wxDuplexMode *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxEditEnumProperty = {"_p_wxEditEnumProperty", "wxEditEnumProperty *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxEnumProperty = {"_p_wxEnumProperty", "wxEnumProperty *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxCursorProperty = {"_p_wxCursorProperty", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxEvent = {"_p_wxEvent", "wxEvent *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxMenuEvent = {"_p_wxMenuEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxCloseEvent = {"_p_wxCloseEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxMouseEvent = {"_p_wxMouseEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxEraseEvent = {"_p_wxEraseEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxSetCursorEvent = {"_p_wxSetCursorEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxInitDialogEvent = {"_p_wxInitDialogEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyEvent = {"_p_wxPyEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxMouseCaptureLostEvent = {"_p_wxMouseCaptureLostEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxCalculateLayoutEvent = {"_p_wxCalculateLayoutEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxQueryNewPaletteEvent = {"_p_wxQueryNewPaletteEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxMaximizeEvent = {"_p_wxMaximizeEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxIconizeEvent = {"_p_wxIconizeEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxActivateEvent = {"_p_wxActivateEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxSizeEvent = {"_p_wxSizeEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxMoveEvent = {"_p_wxMoveEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPaintEvent = {"_p_wxPaintEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxNcPaintEvent = {"_p_wxNcPaintEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPaletteChangedEvent = {"_p_wxPaletteChangedEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxDisplayChangedEvent = {"_p_wxDisplayChangedEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxMouseCaptureChangedEvent = {"_p_wxMouseCaptureChangedEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxSysColourChangedEvent = {"_p_wxSysColourChangedEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxThreadEvent = {"_p_wxThreadEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxDropFilesEvent = {"_p_wxDropFilesEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxFocusEvent = {"_p_wxFocusEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxQueryLayoutInfoEvent = {"_p_wxQueryLayoutInfoEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxShowEvent = {"_p_wxShowEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxNavigationKeyEvent = {"_p_wxNavigationKeyEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxKeyEvent = {"_p_wxKeyEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxScrollWinEvent = {"_p_wxScrollWinEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxTaskBarIconEvent = {"_p_wxTaskBarIconEvent", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxEvtHandler = {"_p_wxEvtHandler", "wxEvtHandler *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxSplashScreen = {"_p_wxSplashScreen", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxMiniFrame = {"_p_wxMiniFrame", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyPanel = {"_p_wxPyPanel", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxEventBlocker = {"_p_wxEventBlocker", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxMenuBar = {"_p_wxMenuBar", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyValidator = {"_p_wxPyValidator", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxStatusBar = {"_p_wxStatusBar", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxScrolledWindow = {"_p_wxScrolledWindow", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyVScrolledWindow = {"_p_wxPyVScrolledWindow", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyHScrolledWindow = {"_p_wxPyHScrolledWindow", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyHVScrolledWindow = {"_p_wxPyHVScrolledWindow", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyScrolledWindow = {"_p_wxPyScrolledWindow", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxSplashScreenWindow = {"_p_wxSplashScreenWindow", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxSplitterWindow = {"_p_wxSplitterWindow", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxSashWindow = {"_p_wxSashWindow", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxSashLayoutWindow = {"_p_wxSashLayoutWindow", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPopupWindow = {"_p_wxPopupWindow", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyPopupTransientWindow = {"_p_wxPyPopupTransientWindow", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxTipWindow = {"_p_wxTipWindow", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxMDIClientWindow = {"_p_wxMDIClientWindow", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPreviewFrame = {"_p_wxPreviewFrame", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyPreviewFrame = {"_p_wxPyPreviewFrame", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxMDIChildFrame = {"_p_wxMDIChildFrame", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyApp = {"_p_wxPyApp", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyEvtHandler = {"_p_wxPyEvtHandler", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPreviewCanvas = {"_p_wxPreviewCanvas", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyWindow = {"_p_wxPyWindow", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyVListBox = {"_p_wxPyVListBox", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyHtmlListBox = {"_p_wxPyHtmlListBox", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxSimpleHtmlListBox = {"_p_wxSimpleHtmlListBox", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPreviewControlBar = {"_p_wxPreviewControlBar", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyPreviewControlBar = {"_p_wxPyPreviewControlBar", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyTaskBarIcon = {"_p_wxPyTaskBarIcon", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxFrame = {"_p_wxFrame", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxMenu = {"_p_wxMenu", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxMDIParentFrame = {"_p_wxMDIParentFrame", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxFileName = {"_p_wxFileName", "wxFileName *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxFileProperty = {"_p_wxFileProperty", "wxFileProperty *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxImageFileProperty = {"_p_wxImageFileProperty", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxFlagsProperty = {"_p_wxFlagsProperty", "wxFlagsProperty *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxFloatProperty = {"_p_wxFloatProperty", "wxFloatProperty *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxFont = {"_p_wxFont", "wxFont *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxFontProperty = {"_p_wxFontProperty", "wxFontProperty *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxIdleEvent = {"_p_wxIdleEvent", "wxIdleEvent *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxIntProperty = {"_p_wxIntProperty", "wxIntProperty *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxListEvent = {"_p_wxListEvent", "wxListEvent *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxLongLong = {"_p_wxLongLong", "wxLongLong *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxLongLong_t = {"_p_wxLongLong_t", "wxLongLong_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxLongStringProperty = {"_p_wxLongStringProperty", "wxLongStringProperty *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxDirProperty = {"_p_wxDirProperty", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxNumericPropertyValidator = {"_p_wxNumericPropertyValidator", "wxNumericPropertyValidator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxObject = {"_p_wxObject", "wxObject *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxIndividualLayoutConstraint = {"_p_wxIndividualLayoutConstraint", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPGRootProperty = {"_p_wxPGRootProperty", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxBoolProperty = {"_p_wxBoolProperty", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxMenuItem = {"_p_wxMenuItem", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxImage = {"_p_wxImage", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPySizer = {"_p_wxPySizer", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxLayoutAlgorithm = {"_p_wxLayoutAlgorithm", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxFindReplaceData = {"_p_wxFindReplaceData", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxWrapSizer = {"_p_wxWrapSizer", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPageSetupDialogData = {"_p_wxPageSetupDialogData", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPrintDialogData = {"_p_wxPrintDialogData", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPrinter = {"_p_wxPrinter", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxGridSizer = {"_p_wxGridSizer", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxFlexGridSizer = {"_p_wxFlexGridSizer", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxAcceleratorTable = {"_p_wxAcceleratorTable", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxColourData = {"_p_wxColourData", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyPrintout = {"_p_wxPyPrintout", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxStdDialogButtonSizer = {"_p_wxStdDialogButtonSizer", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPrintData = {"_p_wxPrintData", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxFontData = {"_p_wxFontData", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxFileSystem = {"_p_wxFileSystem", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyPrintPreview = {"_p_wxPyPrintPreview", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPrintPreview = {"_p_wxPrintPreview", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxLayoutConstraints = {"_p_wxLayoutConstraints", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxStaticBoxSizer = {"_p_wxStaticBoxSizer", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxBoxSizer = {"_p_wxBoxSizer", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxSizer = {"_p_wxSizer", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxGridBagSizer = {"_p_wxGridBagSizer", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxFSFile = {"_p_wxFSFile", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxStandardDialogLayoutAdapter = {"_p_wxStandardDialogLayoutAdapter", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxDialogLayoutAdapter = {"_p_wxDialogLayoutAdapter", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxGBSizerItem = {"_p_wxGBSizerItem", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxSizerItem = {"_p_wxSizerItem", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPageSetupDialog = {"_p_wxPageSetupDialog", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPrintDialog = {"_p_wxPrintDialog", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPNMHandler = {"_p_wxPNMHandler", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxJPEGHandler = {"_p_wxJPEGHandler", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPCXHandler = {"_p_wxPCXHandler", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxGIFHandler = {"_p_wxGIFHandler", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPNGHandler = {"_p_wxPNGHandler", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxANIHandler = {"_p_wxANIHandler", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxCURHandler = {"_p_wxCURHandler", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxICOHandler = {"_p_wxICOHandler", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxBMPHandler = {"_p_wxBMPHandler", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPyImageHandler = {"_p_wxPyImageHandler", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxImageHandler = {"_p_wxImageHandler", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxXPMHandler = {"_p_wxXPMHandler", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxTIFFHandler = {"_p_wxTIFFHandler", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxTGAHandler = {"_p_wxTGAHandler", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPGTextCtrlAndButtonEditor = {"_p_wxPGTextCtrlAndButtonEditor", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPGSpinCtrlEditor = {"_p_wxPGSpinCtrlEditor", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPGChoiceAndButtonEditor = {"_p_wxPGChoiceAndButtonEditor", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPGCheckBoxEditor = {"_p_wxPGCheckBoxEditor", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPGArrayEditorDialog = {"_p_wxPGArrayEditorDialog", "wxPGArrayEditorDialog *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxPGArrayStringEditorDialog = {"_p_wxPGArrayStringEditorDialog", "wxPGArrayStringEditorDialog *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxPGAttributeStorage = {"_p_wxPGAttributeStorage", "wxPGAttributeStorage *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxPGCell = {"_p_wxPGCell", "wxPGCell *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxPGCellData = {"_p_wxPGCellData", "wxPGCellData *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxPGCellRenderer = {"_p_wxPGCellRenderer", "wxPGCellRenderer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxPGDefaultRenderer = {"_p_wxPGDefaultRenderer", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_wxPGChoiceEditor = {"_p_wxPGChoiceEditor", "wxPGChoiceEditor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxPGChoiceEntry = {"_p_wxPGChoiceEntry", "wxPGChoiceEntry *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxPGChoices = {"_p_wxPGChoices", "wxPGChoices *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxPGChoicesData = {"_p_wxPGChoicesData", "wxPGChoicesData *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxPGComboBoxEditor = {"_p_wxPGComboBoxEditor", "wxPGComboBoxEditor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxPGCommonValue = {"_p_wxPGCommonValue", "wxPGCommonValue *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxPGEditor = {"_p_wxPGEditor", "wxPGEditor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxPGEditorDialogAdapter = {"_p_wxPGEditorDialogAdapter", "wxPGEditorDialogAdapter *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxPGFileDialogAdapter = {"_p_wxPGFileDialogAdapter", "wxPGFileDialogAdapter *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxPGLongStringDialogAdapter = {"_p_wxPGLongStringDialogAdapter", "wxPGLongStringDialogAdapter *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxPGMultiButton = {"_p_wxPGMultiButton", "wxPGMultiButton *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxPGPaintData = {"_p_wxPGPaintData", "wxPGPaintData *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxPGPropArgCls = {"_p_wxPGPropArgCls", "wxPGPropArgCls *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxPGProperty = {"_p_wxPGProperty", "wxPGProperty *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxPGTextCtrlEditor = {"_p_wxPGTextCtrlEditor", "wxPGTextCtrlEditor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxPGVIterator = {"_p_wxPGVIterator", "wxPGVIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxPGVIteratorBase = {"_p_wxPGVIteratorBase", "wxPGVIteratorBase *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxPGValidationInfo = {"_p_wxPGValidationInfo", "wxPGValidationInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxPGWindowList = {"_p_wxPGWindowList", "wxPGWindowList *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxPanel = {"_p_wxPanel", "wxPanel *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxPaperSize = {"_p_wxPaperSize", "enum wxPaperSize *|wxPaperSize *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxPoint = {"_p_wxPoint", "wxPoint *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxPropertyCategory = {"_p_wxPropertyCategory", "wxPropertyCategory *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxPropertyGrid = {"_p_wxPropertyGrid", "wxPropertyGrid *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxPropertyGridConstIterator = {"_p_wxPropertyGridConstIterator", "wxPropertyGridConstIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxPropertyGridEvent = {"_p_wxPropertyGridEvent", "wxPropertyGridEvent *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxPropertyGridHitTestResult = {"_p_wxPropertyGridHitTestResult", "wxPropertyGridHitTestResult *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxPropertyGridInterface = {"_p_wxPropertyGridInterface", "wxPropertyGridInterface *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxPropertyGridIterator = {"_p_wxPropertyGridIterator", "wxPropertyGridIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxPropertyGridIteratorBase = {"_p_wxPropertyGridIteratorBase", "wxPropertyGridIteratorBase *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxPropertyGridManager = {"_p_wxPropertyGridManager", "wxPropertyGridManager *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxPropertyGridPage = {"_p_wxPropertyGridPage", "wxPropertyGridPage *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxPropertyGridPageState = {"_p_wxPropertyGridPageState", "wxPropertyGridPageState *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxPropertyGridPopulator = {"_p_wxPropertyGridPopulator", "wxPropertyGridPopulator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxRect = {"_p_wxRect", "wxRect *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxRefCounter = {"_p_wxRefCounter", "wxRefCounter *|wxObjectRefData *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxScrollHelper = {"_p_wxScrollHelper", "wxScrollHelper *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxSize = {"_p_wxSize", "wxSize *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxString = {"_p_wxString", "wxString *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxStringProperty = {"_p_wxStringProperty", "wxStringProperty *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxSystemColourProperty = {"_p_wxSystemColourProperty", "wxSystemColourProperty *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxTopLevelWindow = {"_p_wxTopLevelWindow", "wxTopLevelWindow *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxUIntProperty = {"_p_wxUIntProperty", "wxUIntProperty *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxULongLong = {"_p_wxULongLong", "wxULongLong *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxUniChar = {"_p_wxUniChar", "wxUniChar *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxValidator = {"_p_wxValidator", "wxValidator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxVariant = {"_p_wxVariant", "wxVariant *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxWindow = {"_p_wxWindow", "wxWindow *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wxWindowBase = {"_p_wxWindowBase", "wxWindowBase *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_FlagType,
  &_swigt__p_PyArrayStringProperty,
  &_swigt__p_PyChoiceEditor,
  &_swigt__p_PyColourProperty,
  &_swigt__p_PyComboBoxEditor,
  &_swigt__p_PyEditEnumProperty,
  &_swigt__p_PyEditor,
  &_swigt__p_PyEditorDialogAdapter,
  &_swigt__p_PyEnumProperty,
  &_swigt__p_PyFileDialogAdapter,
  &_swigt__p_PyFileProperty,
  &_swigt__p_PyFlagsProperty,
  &_swigt__p_PyFloatProperty,
  &_swigt__p_PyFontProperty,
  &_swigt__p_PyIntProperty,
  &_swigt__p_PyLongStringDialogAdapter,
  &_swigt__p_PyLongStringProperty,
  &_swigt__p_PyProperty,
  &_swigt__p_PyStringProperty,
  &_swigt__p_PySystemColourProperty,
  &_swigt__p_PyTextCtrlEditor,
  &_swigt__p_PyUIntProperty,
  &_swigt__p_ValArrItem,
  &_swigt__p_char,
  &_swigt__p_double,
  &_swigt__p_f_p_wxPropertyGrid_p_wxPGProperty_p_wxPGProperty__int,
  &_swigt__p_int,
  &_swigt__p_long,
  &_swigt__p_p_wxBookCtrlBase,
  &_swigt__p_p_wxChar,
  &_swigt__p_p_wxColourDialog,
  &_swigt__p_p_wxControl,
  &_swigt__p_p_wxControlWithItems,
  &_swigt__p_p_wxDialog,
  &_swigt__p_p_wxDirDialog,
  &_swigt__p_p_wxFileDialog,
  &_swigt__p_p_wxFindReplaceDialog,
  &_swigt__p_p_wxFontDialog,
  &_swigt__p_p_wxFrame,
  &_swigt__p_p_wxGenericProgressDialog,
  &_swigt__p_p_wxMDIChildFrame,
  &_swigt__p_p_wxMDIClientWindow,
  &_swigt__p_p_wxMDIParentFrame,
  &_swigt__p_p_wxMenuBar,
  &_swigt__p_p_wxMessageDialog,
  &_swigt__p_p_wxMiniFrame,
  &_swigt__p_p_wxMultiChoiceDialog,
  &_swigt__p_p_wxNumberEntryDialog,
  &_swigt__p_p_wxPGArrayEditorDialog,
  &_swigt__p_p_wxPGArrayStringEditorDialog,
  &_swigt__p_p_wxPGMultiButton,
  &_swigt__p_p_wxPanel,
  &_swigt__p_p_wxPasswordEntryDialog,
  &_swigt__p_p_wxPopupWindow,
  &_swigt__p_p_wxPreviewCanvas,
  &_swigt__p_p_wxPreviewControlBar,
  &_swigt__p_p_wxPreviewFrame,
  &_swigt__p_p_wxProgressDialog,
  &_swigt__p_p_wxPropertyGrid,
  &_swigt__p_p_wxPropertyGridManager,
  &_swigt__p_p_wxPyHScrolledWindow,
  &_swigt__p_p_wxPyHVScrolledWindow,
  &_swigt__p_p_wxPyHtmlListBox,
  &_swigt__p_p_wxPyPanel,
  &_swigt__p_p_wxPyPopupTransientWindow,
  &_swigt__p_p_wxPyPreviewControlBar,
  &_swigt__p_p_wxPyPreviewFrame,
  &_swigt__p_p_wxPyScrolledWindow,
  &_swigt__p_p_wxPyVListBox,
  &_swigt__p_p_wxPyVScrolledWindow,
  &_swigt__p_p_wxPyWindow,
  &_swigt__p_p_wxSashLayoutWindow,
  &_swigt__p_p_wxSashWindow,
  &_swigt__p_p_wxScrolledWindow,
  &_swigt__p_p_wxSimpleHtmlListBox,
  &_swigt__p_p_wxSingleChoiceDialog,
  &_swigt__p_p_wxSplashScreen,
  &_swigt__p_p_wxSplashScreenWindow,
  &_swigt__p_p_wxSplitterWindow,
  &_swigt__p_p_wxStatusBar,
  &_swigt__p_p_wxTextCtrlBase,
  &_swigt__p_p_wxTextEntryDialog,
  &_swigt__p_p_wxTipWindow,
  &_swigt__p_p_wxTopLevelWindow,
  &_swigt__p_p_wxWindow,
  &_swigt__p_unsigned_char,
  &_swigt__p_unsigned_int,
  &_swigt__p_unsigned_long,
  &_swigt__p_void,
  &_swigt__p_wxANIHandler,
  &_swigt__p_wxAcceleratorTable,
  &_swigt__p_wxActivateEvent,
  &_swigt__p_wxArrayInt,
  &_swigt__p_wxArrayPGProperty,
  &_swigt__p_wxArrayString,
  &_swigt__p_wxArrayStringProperty,
  &_swigt__p_wxBMPHandler,
  &_swigt__p_wxBitmap,
  &_swigt__p_wxBookCtrlBase,
  &_swigt__p_wxBookCtrlEvent,
  &_swigt__p_wxBoolProperty,
  &_swigt__p_wxBoxSizer,
  &_swigt__p_wxCURHandler,
  &_swigt__p_wxCalculateLayoutEvent,
  &_swigt__p_wxChar,
  &_swigt__p_wxChildFocusEvent,
  &_swigt__p_wxClipboardTextEvent,
  &_swigt__p_wxCloseEvent,
  &_swigt__p_wxColour,
  &_swigt__p_wxColourData,
  &_swigt__p_wxColourDialog,
  &_swigt__p_wxColourProperty,
  &_swigt__p_wxColourPropertyValue,
  &_swigt__p_wxCommandEvent,
  &_swigt__p_wxContextMenuEvent,
  &_swigt__p_wxControl,
  &_swigt__p_wxControlWithItems,
  &_swigt__p_wxCursorProperty,
  &_swigt__p_wxDC,
  &_swigt__p_wxDateEvent,
  &_swigt__p_wxDateTime,
  &_swigt__p_wxDialog,
  &_swigt__p_wxDialogLayoutAdapter,
  &_swigt__p_wxDirDialog,
  &_swigt__p_wxDirProperty,
  &_swigt__p_wxDisplayChangedEvent,
  &_swigt__p_wxDropFilesEvent,
  &_swigt__p_wxDuplexMode,
  &_swigt__p_wxEditEnumProperty,
  &_swigt__p_wxEnumProperty,
  &_swigt__p_wxEraseEvent,
  &_swigt__p_wxEvent,
  &_swigt__p_wxEventBlocker,
  &_swigt__p_wxEvtHandler,
  &_swigt__p_wxFSFile,
  &_swigt__p_wxFileDialog,
  &_swigt__p_wxFileName,
  &_swigt__p_wxFileProperty,
  &_swigt__p_wxFileSystem,
  &_swigt__p_wxFindDialogEvent,
  &_swigt__p_wxFindReplaceData,
  &_swigt__p_wxFindReplaceDialog,
  &_swigt__p_wxFlagsProperty,
  &_swigt__p_wxFlexGridSizer,
  &_swigt__p_wxFloatProperty,
  &_swigt__p_wxFocusEvent,
  &_swigt__p_wxFont,
  &_swigt__p_wxFontData,
  &_swigt__p_wxFontDialog,
  &_swigt__p_wxFontProperty,
  &_swigt__p_wxFrame,
  &_swigt__p_wxGBSizerItem,
  &_swigt__p_wxGIFHandler,
  &_swigt__p_wxGenericProgressDialog,
  &_swigt__p_wxGridBagSizer,
  &_swigt__p_wxGridSizer,
  &_swigt__p_wxICOHandler,
  &_swigt__p_wxIconizeEvent,
  &_swigt__p_wxIdleEvent,
  &_swigt__p_wxImage,
  &_swigt__p_wxImageFileProperty,
  &_swigt__p_wxImageHandler,
  &_swigt__p_wxIndividualLayoutConstraint,
  &_swigt__p_wxInitDialogEvent,
  &_swigt__p_wxIntProperty,
  &_swigt__p_wxJPEGHandler,
  &_swigt__p_wxKeyEvent,
  &_swigt__p_wxLayoutAlgorithm,
  &_swigt__p_wxLayoutConstraints,
  &_swigt__p_wxListEvent,
  &_swigt__p_wxLongLong,
  &_swigt__p_wxLongLong_t,
  &_swigt__p_wxLongStringProperty,
  &_swigt__p_wxMDIChildFrame,
  &_swigt__p_wxMDIClientWindow,
  &_swigt__p_wxMDIParentFrame,
  &_swigt__p_wxMaximizeEvent,
  &_swigt__p_wxMenu,
  &_swigt__p_wxMenuBar,
  &_swigt__p_wxMenuEvent,
  &_swigt__p_wxMenuItem,
  &_swigt__p_wxMessageDialog,
  &_swigt__p_wxMiniFrame,
  &_swigt__p_wxMouseCaptureChangedEvent,
  &_swigt__p_wxMouseCaptureLostEvent,
  &_swigt__p_wxMouseEvent,
  &_swigt__p_wxMoveEvent,
  &_swigt__p_wxMultiChoiceDialog,
  &_swigt__p_wxNavigationKeyEvent,
  &_swigt__p_wxNcPaintEvent,
  &_swigt__p_wxNotifyEvent,
  &_swigt__p_wxNumberEntryDialog,
  &_swigt__p_wxNumericPropertyValidator,
  &_swigt__p_wxObject,
  &_swigt__p_wxPCXHandler,
  &_swigt__p_wxPGArrayEditorDialog,
  &_swigt__p_wxPGArrayStringEditorDialog,
  &_swigt__p_wxPGAttributeStorage,
  &_swigt__p_wxPGCell,
  &_swigt__p_wxPGCellData,
  &_swigt__p_wxPGCellRenderer,
  &_swigt__p_wxPGCheckBoxEditor,
  &_swigt__p_wxPGChoiceAndButtonEditor,
  &_swigt__p_wxPGChoiceEditor,
  &_swigt__p_wxPGChoiceEntry,
  &_swigt__p_wxPGChoices,
  &_swigt__p_wxPGChoicesData,
  &_swigt__p_wxPGComboBoxEditor,
  &_swigt__p_wxPGCommonValue,
  &_swigt__p_wxPGDefaultRenderer,
  &_swigt__p_wxPGEditor,
  &_swigt__p_wxPGEditorDialogAdapter,
  &_swigt__p_wxPGFileDialogAdapter,
  &_swigt__p_wxPGLongStringDialogAdapter,
  &_swigt__p_wxPGMultiButton,
  &_swigt__p_wxPGPaintData,
  &_swigt__p_wxPGPropArgCls,
  &_swigt__p_wxPGProperty,
  &_swigt__p_wxPGRootProperty,
  &_swigt__p_wxPGSpinCtrlEditor,
  &_swigt__p_wxPGTextCtrlAndButtonEditor,
  &_swigt__p_wxPGTextCtrlEditor,
  &_swigt__p_wxPGVIterator,
  &_swigt__p_wxPGVIteratorBase,
  &_swigt__p_wxPGValidationInfo,
  &_swigt__p_wxPGWindowList,
  &_swigt__p_wxPNGHandler,
  &_swigt__p_wxPNMHandler,
  &_swigt__p_wxPageSetupDialog,
  &_swigt__p_wxPageSetupDialogData,
  &_swigt__p_wxPaintEvent,
  &_swigt__p_wxPaletteChangedEvent,
  &_swigt__p_wxPanel,
  &_swigt__p_wxPaperSize,
  &_swigt__p_wxPasswordEntryDialog,
  &_swigt__p_wxPoint,
  &_swigt__p_wxPopupWindow,
  &_swigt__p_wxPreviewCanvas,
  &_swigt__p_wxPreviewControlBar,
  &_swigt__p_wxPreviewFrame,
  &_swigt__p_wxPrintData,
  &_swigt__p_wxPrintDialog,
  &_swigt__p_wxPrintDialogData,
  &_swigt__p_wxPrintPreview,
  &_swigt__p_wxPrinter,
  &_swigt__p_wxProgressDialog,
  &_swigt__p_wxPropertyCategory,
  &_swigt__p_wxPropertyGrid,
  &_swigt__p_wxPropertyGridConstIterator,
  &_swigt__p_wxPropertyGridEvent,
  &_swigt__p_wxPropertyGridHitTestResult,
  &_swigt__p_wxPropertyGridInterface,
  &_swigt__p_wxPropertyGridIterator,
  &_swigt__p_wxPropertyGridIteratorBase,
  &_swigt__p_wxPropertyGridManager,
  &_swigt__p_wxPropertyGridPage,
  &_swigt__p_wxPropertyGridPageState,
  &_swigt__p_wxPropertyGridPopulator,
  &_swigt__p_wxPyApp,
  &_swigt__p_wxPyCommandEvent,
  &_swigt__p_wxPyEvent,
  &_swigt__p_wxPyEvtHandler,
  &_swigt__p_wxPyHScrolledWindow,
  &_swigt__p_wxPyHVScrolledWindow,
  &_swigt__p_wxPyHtmlListBox,
  &_swigt__p_wxPyImageHandler,
  &_swigt__p_wxPyPanel,
  &_swigt__p_wxPyPopupTransientWindow,
  &_swigt__p_wxPyPreviewControlBar,
  &_swigt__p_wxPyPreviewFrame,
  &_swigt__p_wxPyPrintPreview,
  &_swigt__p_wxPyPrintout,
  &_swigt__p_wxPyScrolledWindow,
  &_swigt__p_wxPySizer,
  &_swigt__p_wxPyTaskBarIcon,
  &_swigt__p_wxPyVListBox,
  &_swigt__p_wxPyVScrolledWindow,
  &_swigt__p_wxPyValidator,
  &_swigt__p_wxPyWindow,
  &_swigt__p_wxQueryLayoutInfoEvent,
  &_swigt__p_wxQueryNewPaletteEvent,
  &_swigt__p_wxRect,
  &_swigt__p_wxRefCounter,
  &_swigt__p_wxSashEvent,
  &_swigt__p_wxSashLayoutWindow,
  &_swigt__p_wxSashWindow,
  &_swigt__p_wxScrollEvent,
  &_swigt__p_wxScrollHelper,
  &_swigt__p_wxScrollWinEvent,
  &_swigt__p_wxScrolledWindow,
  &_swigt__p_wxSetCursorEvent,
  &_swigt__p_wxShowEvent,
  &_swigt__p_wxSimpleHtmlListBox,
  &_swigt__p_wxSingleChoiceDialog,
  &_swigt__p_wxSize,
  &_swigt__p_wxSizeEvent,
  &_swigt__p_wxSizer,
  &_swigt__p_wxSizerItem,
  &_swigt__p_wxSplashScreen,
  &_swigt__p_wxSplashScreenWindow,
  &_swigt__p_wxSplitterEvent,
  &_swigt__p_wxSplitterWindow,
  &_swigt__p_wxStandardDialogLayoutAdapter,
  &_swigt__p_wxStaticBoxSizer,
  &_swigt__p_wxStatusBar,
  &_swigt__p_wxStdDialogButtonSizer,
  &_swigt__p_wxString,
  &_swigt__p_wxStringProperty,
  &_swigt__p_wxSysColourChangedEvent,
  &_swigt__p_wxSystemColourProperty,
  &_swigt__p_wxTGAHandler,
  &_swigt__p_wxTIFFHandler,
  &_swigt__p_wxTaskBarIconEvent,
  &_swigt__p_wxTextCtrlBase,
  &_swigt__p_wxTextEntryDialog,
  &_swigt__p_wxThreadEvent,
  &_swigt__p_wxTipWindow,
  &_swigt__p_wxTopLevelWindow,
  &_swigt__p_wxUIntProperty,
  &_swigt__p_wxULongLong,
  &_swigt__p_wxUniChar,
  &_swigt__p_wxUpdateUIEvent,
  &_swigt__p_wxValidator,
  &_swigt__p_wxVariant,
  &_swigt__p_wxWindow,
  &_swigt__p_wxWindowBase,
  &_swigt__p_wxWindowCreateEvent,
  &_swigt__p_wxWindowDestroyEvent,
  &_swigt__p_wxWindowModalDialogEvent,
  &_swigt__p_wxWrapSizer,
  &_swigt__p_wxXPMHandler,
};

static swig_cast_info _swigc__p_FlagType[] = {  {&_swigt__p_FlagType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PyArrayStringProperty[] = {  {&_swigt__p_PyArrayStringProperty, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PyChoiceEditor[] = {  {&_swigt__p_PyChoiceEditor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PyColourProperty[] = {  {&_swigt__p_PyColourProperty, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PyComboBoxEditor[] = {  {&_swigt__p_PyComboBoxEditor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PyEditEnumProperty[] = {  {&_swigt__p_PyEditEnumProperty, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PyEditor[] = {  {&_swigt__p_PyEditor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PyEditorDialogAdapter[] = {  {&_swigt__p_PyEditorDialogAdapter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PyEnumProperty[] = {  {&_swigt__p_PyEnumProperty, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PyFileDialogAdapter[] = {  {&_swigt__p_PyFileDialogAdapter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PyFileProperty[] = {  {&_swigt__p_PyFileProperty, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PyFlagsProperty[] = {  {&_swigt__p_PyFlagsProperty, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PyFloatProperty[] = {  {&_swigt__p_PyFloatProperty, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PyFontProperty[] = {  {&_swigt__p_PyFontProperty, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PyIntProperty[] = {  {&_swigt__p_PyIntProperty, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PyLongStringDialogAdapter[] = {  {&_swigt__p_PyLongStringDialogAdapter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PyLongStringProperty[] = {  {&_swigt__p_PyLongStringProperty, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PyProperty[] = {  {&_swigt__p_PyProperty, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PyStringProperty[] = {  {&_swigt__p_PyStringProperty, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PySystemColourProperty[] = {  {&_swigt__p_PySystemColourProperty, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PyTextCtrlEditor[] = {  {&_swigt__p_PyTextCtrlEditor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PyUIntProperty[] = {  {&_swigt__p_PyUIntProperty, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ValArrItem[] = {  {&_swigt__p_ValArrItem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_double[] = {  {&_swigt__p_double, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_p_wxPropertyGrid_p_wxPGProperty_p_wxPGProperty__int[] = {  {&_swigt__p_f_p_wxPropertyGrid_p_wxPGProperty_p_wxPGProperty__int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_long[] = {  {&_swigt__p_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxChar[] = {  {&_swigt__p_p_wxChar, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxSplashScreen[] = {{&_swigt__p_p_wxSplashScreen, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxMiniFrame[] = {{&_swigt__p_p_wxMiniFrame, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxPyPanel[] = {{&_swigt__p_p_wxPyPanel, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxMenuBar[] = {{&_swigt__p_p_wxMenuBar, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxTextCtrlBase[] = {{&_swigt__p_p_wxTextCtrlBase, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxBookCtrlBase[] = {{&_swigt__p_p_wxBookCtrlBase, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxMessageDialog[] = {{&_swigt__p_p_wxMessageDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxFileDialog[] = {{&_swigt__p_p_wxFileDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxMultiChoiceDialog[] = {{&_swigt__p_p_wxMultiChoiceDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxFindReplaceDialog[] = {{&_swigt__p_p_wxFindReplaceDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxProgressDialog[] = {{&_swigt__p_p_wxProgressDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxGenericProgressDialog[] = {{&_swigt__p_p_wxGenericProgressDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxNumberEntryDialog[] = {{&_swigt__p_p_wxNumberEntryDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxPasswordEntryDialog[] = {{&_swigt__p_p_wxPasswordEntryDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxTextEntryDialog[] = {{&_swigt__p_p_wxTextEntryDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxSingleChoiceDialog[] = {{&_swigt__p_p_wxSingleChoiceDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxPGMultiButton[] = {{&_swigt__p_p_wxPGMultiButton, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxPanel[] = {{&_swigt__p_p_wxPanel, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxStatusBar[] = {{&_swigt__p_p_wxStatusBar, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxPyHVScrolledWindow[] = {{&_swigt__p_p_wxPyHVScrolledWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxPyHScrolledWindow[] = {{&_swigt__p_p_wxPyHScrolledWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxPyVScrolledWindow[] = {{&_swigt__p_p_wxPyVScrolledWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxTipWindow[] = {{&_swigt__p_p_wxTipWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxPyPopupTransientWindow[] = {{&_swigt__p_p_wxPyPopupTransientWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxPopupWindow[] = {{&_swigt__p_p_wxPopupWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxSashLayoutWindow[] = {{&_swigt__p_p_wxSashLayoutWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxSashWindow[] = {{&_swigt__p_p_wxSashWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxSplitterWindow[] = {{&_swigt__p_p_wxSplitterWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxScrolledWindow[] = {{&_swigt__p_p_wxScrolledWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxTopLevelWindow[] = {{&_swigt__p_p_wxTopLevelWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxSplashScreenWindow[] = {{&_swigt__p_p_wxSplashScreenWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxMDIClientWindow[] = {{&_swigt__p_p_wxMDIClientWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxPyScrolledWindow[] = {{&_swigt__p_p_wxPyScrolledWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxControl[] = {{&_swigt__p_p_wxControl, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxPreviewFrame[] = {{&_swigt__p_p_wxPreviewFrame, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxPyPreviewFrame[] = {{&_swigt__p_p_wxPyPreviewFrame, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxMDIChildFrame[] = {{&_swigt__p_p_wxMDIChildFrame, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxControlWithItems[] = {{&_swigt__p_p_wxControlWithItems, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxPyWindow[] = {{&_swigt__p_p_wxPyWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxPreviewCanvas[] = {{&_swigt__p_p_wxPreviewCanvas, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxSimpleHtmlListBox[] = {{&_swigt__p_p_wxSimpleHtmlListBox, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxPyHtmlListBox[] = {{&_swigt__p_p_wxPyHtmlListBox, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxPyVListBox[] = {{&_swigt__p_p_wxPyVListBox, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxPropertyGrid[] = {{&_swigt__p_p_wxPropertyGrid, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxPreviewControlBar[] = {{&_swigt__p_p_wxPreviewControlBar, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxPyPreviewControlBar[] = {{&_swigt__p_p_wxPyPreviewControlBar, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxFrame[] = {{&_swigt__p_p_wxFrame, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxDirDialog[] = {{&_swigt__p_p_wxDirDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxColourDialog[] = {{&_swigt__p_p_wxColourDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxDialog[] = {{&_swigt__p_p_wxDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxFontDialog[] = {{&_swigt__p_p_wxFontDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxPGArrayEditorDialog[] = {{&_swigt__p_p_wxPGArrayEditorDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxPGArrayStringEditorDialog[] = {{&_swigt__p_p_wxPGArrayStringEditorDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxMDIParentFrame[] = {{&_swigt__p_p_wxMDIParentFrame, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxPropertyGridManager[] = {{&_swigt__p_p_wxPropertyGridManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_wxWindow[] = {  {&_swigt__p_p_wxSplashScreen, _p_p_wxSplashScreenTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxMiniFrame, _p_p_wxMiniFrameTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxPyPanel, _p_p_wxPyPanelTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxMenuBar, _p_p_wxMenuBarTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxTextCtrlBase, _p_p_wxTextCtrlBaseTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxBookCtrlBase, _p_p_wxBookCtrlBaseTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxMessageDialog, _p_p_wxMessageDialogTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxFileDialog, _p_p_wxFileDialogTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxMultiChoiceDialog, _p_p_wxMultiChoiceDialogTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxFindReplaceDialog, _p_p_wxFindReplaceDialogTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxProgressDialog, _p_p_wxProgressDialogTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxGenericProgressDialog, _p_p_wxGenericProgressDialogTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxNumberEntryDialog, _p_p_wxNumberEntryDialogTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxPasswordEntryDialog, _p_p_wxPasswordEntryDialogTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxTextEntryDialog, _p_p_wxTextEntryDialogTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxSingleChoiceDialog, _p_p_wxSingleChoiceDialogTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxPGMultiButton, _p_p_wxPGMultiButtonTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxPanel, _p_p_wxPanelTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxStatusBar, _p_p_wxStatusBarTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxPyHVScrolledWindow, _p_p_wxPyHVScrolledWindowTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxPyHScrolledWindow, _p_p_wxPyHScrolledWindowTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxPyVScrolledWindow, _p_p_wxPyVScrolledWindowTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxTipWindow, _p_p_wxTipWindowTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxPyPopupTransientWindow, _p_p_wxPyPopupTransientWindowTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxPopupWindow, _p_p_wxPopupWindowTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxSashLayoutWindow, _p_p_wxSashLayoutWindowTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxSashWindow, _p_p_wxSashWindowTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxSplitterWindow, _p_p_wxSplitterWindowTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxScrolledWindow, _p_p_wxScrolledWindowTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxTopLevelWindow, _p_p_wxTopLevelWindowTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxSplashScreenWindow, _p_p_wxSplashScreenWindowTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxMDIClientWindow, _p_p_wxMDIClientWindowTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxPyScrolledWindow, _p_p_wxPyScrolledWindowTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxWindow, 0, 0, 0},  {&_swigt__p_p_wxControl, _p_p_wxControlTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxPreviewFrame, _p_p_wxPreviewFrameTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxPyPreviewFrame, _p_p_wxPyPreviewFrameTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxMDIChildFrame, _p_p_wxMDIChildFrameTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxControlWithItems, _p_p_wxControlWithItemsTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxPyWindow, _p_p_wxPyWindowTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxPreviewCanvas, _p_p_wxPreviewCanvasTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxSimpleHtmlListBox, _p_p_wxSimpleHtmlListBoxTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxPyHtmlListBox, _p_p_wxPyHtmlListBoxTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxPyVListBox, _p_p_wxPyVListBoxTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxPropertyGrid, _p_p_wxPropertyGridTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxPreviewControlBar, _p_p_wxPreviewControlBarTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxPyPreviewControlBar, _p_p_wxPyPreviewControlBarTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxFrame, _p_p_wxFrameTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxDirDialog, _p_p_wxDirDialogTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxColourDialog, _p_p_wxColourDialogTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxDialog, _p_p_wxDialogTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxFontDialog, _p_p_wxFontDialogTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxPGArrayEditorDialog, _p_p_wxPGArrayEditorDialogTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxPGArrayStringEditorDialog, _p_p_wxPGArrayStringEditorDialogTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxMDIParentFrame, _p_p_wxMDIParentFrameTo_p_p_wxWindow, 0, 0},  {&_swigt__p_p_wxPropertyGridManager, _p_p_wxPropertyGridManagerTo_p_p_wxWindow, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_char[] = {  {&_swigt__p_unsigned_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_int[] = {  {&_swigt__p_unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_long[] = {  {&_swigt__p_unsigned_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_void[] = {  {&_swigt__p_void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxArrayInt[] = {  {&_swigt__p_wxArrayInt, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxArrayPGProperty[] = {  {&_swigt__p_wxArrayPGProperty, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxArrayString[] = {  {&_swigt__p_wxArrayString, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxArrayStringProperty[] = {  {&_swigt__p_wxArrayStringProperty, 0, 0, 0},  {&_swigt__p_PyArrayStringProperty, _p_PyArrayStringPropertyTo_p_wxArrayStringProperty, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxBitmap[] = {  {&_swigt__p_wxBitmap, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxChar[] = {  {&_swigt__p_wxChar, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxColour[] = {  {&_swigt__p_wxColour, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxColourProperty[] = {  {&_swigt__p_wxColourProperty, 0, 0, 0},  {&_swigt__p_PyColourProperty, _p_PyColourPropertyTo_p_wxColourProperty, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxColourPropertyValue[] = {  {&_swigt__p_wxColourPropertyValue, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSashEvent[] = {{&_swigt__p_wxSashEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxWindowDestroyEvent[] = {{&_swigt__p_wxWindowDestroyEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSplitterEvent[] = {{&_swigt__p_wxSplitterEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxClipboardTextEvent[] = {{&_swigt__p_wxClipboardTextEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxBookCtrlEvent[] = {{&_swigt__p_wxBookCtrlEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxScrollEvent[] = {{&_swigt__p_wxScrollEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyCommandEvent[] = {{&_swigt__p_wxPyCommandEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxContextMenuEvent[] = {{&_swigt__p_wxContextMenuEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxChildFocusEvent[] = {{&_swigt__p_wxChildFocusEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxDateEvent[] = {{&_swigt__p_wxDateEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxWindowCreateEvent[] = {{&_swigt__p_wxWindowCreateEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxNotifyEvent[] = {{&_swigt__p_wxNotifyEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxWindowModalDialogEvent[] = {{&_swigt__p_wxWindowModalDialogEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxUpdateUIEvent[] = {{&_swigt__p_wxUpdateUIEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxFindDialogEvent[] = {{&_swigt__p_wxFindDialogEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxCommandEvent[] = {  {&_swigt__p_wxSashEvent, _p_wxSashEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxWindowDestroyEvent, _p_wxWindowDestroyEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxSplitterEvent, _p_wxSplitterEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxClipboardTextEvent, _p_wxClipboardTextEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxBookCtrlEvent, _p_wxBookCtrlEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxScrollEvent, _p_wxScrollEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxPyCommandEvent, _p_wxPyCommandEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxCommandEvent, 0, 0, 0},  {&_swigt__p_wxContextMenuEvent, _p_wxContextMenuEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxChildFocusEvent, _p_wxChildFocusEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxDateEvent, _p_wxDateEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxWindowCreateEvent, _p_wxWindowCreateEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxPropertyGridEvent, _p_wxPropertyGridEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxNotifyEvent, _p_wxNotifyEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxWindowModalDialogEvent, _p_wxWindowModalDialogEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxUpdateUIEvent, _p_wxUpdateUIEventTo_p_wxCommandEvent, 0, 0},  {&_swigt__p_wxFindDialogEvent, _p_wxFindDialogEventTo_p_wxCommandEvent, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxControlWithItems[] = {{&_swigt__p_wxControlWithItems, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxTextCtrlBase[] = {{&_swigt__p_wxTextCtrlBase, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxBookCtrlBase[] = {{&_swigt__p_wxBookCtrlBase, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxControl[] = {  {&_swigt__p_wxPropertyGrid, _p_wxPropertyGridTo_p_wxControl, 0, 0},  {&_swigt__p_wxControl, 0, 0, 0},  {&_swigt__p_wxControlWithItems, _p_wxControlWithItemsTo_p_wxControl, 0, 0},  {&_swigt__p_wxTextCtrlBase, _p_wxTextCtrlBaseTo_p_wxControl, 0, 0},  {&_swigt__p_wxBookCtrlBase, _p_wxBookCtrlBaseTo_p_wxControl, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxDC[] = {  {&_swigt__p_wxDC, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxDateTime[] = {  {&_swigt__p_wxDateTime, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxFontDialog[] = {{&_swigt__p_wxFontDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxDirDialog[] = {{&_swigt__p_wxDirDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxColourDialog[] = {{&_swigt__p_wxColourDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxFindReplaceDialog[] = {{&_swigt__p_wxFindReplaceDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxProgressDialog[] = {{&_swigt__p_wxProgressDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxGenericProgressDialog[] = {{&_swigt__p_wxGenericProgressDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxMessageDialog[] = {{&_swigt__p_wxMessageDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxNumberEntryDialog[] = {{&_swigt__p_wxNumberEntryDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPasswordEntryDialog[] = {{&_swigt__p_wxPasswordEntryDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxTextEntryDialog[] = {{&_swigt__p_wxTextEntryDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSingleChoiceDialog[] = {{&_swigt__p_wxSingleChoiceDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxMultiChoiceDialog[] = {{&_swigt__p_wxMultiChoiceDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxFileDialog[] = {{&_swigt__p_wxFileDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxDialog[] = {  {&_swigt__p_wxPGArrayEditorDialog, _p_wxPGArrayEditorDialogTo_p_wxDialog, 0, 0},  {&_swigt__p_wxFontDialog, _p_wxFontDialogTo_p_wxDialog, 0, 0},  {&_swigt__p_wxDirDialog, _p_wxDirDialogTo_p_wxDialog, 0, 0},  {&_swigt__p_wxColourDialog, _p_wxColourDialogTo_p_wxDialog, 0, 0},  {&_swigt__p_wxPGArrayStringEditorDialog, _p_wxPGArrayStringEditorDialogTo_p_wxDialog, 0, 0},  {&_swigt__p_wxDialog, 0, 0, 0},  {&_swigt__p_wxFindReplaceDialog, _p_wxFindReplaceDialogTo_p_wxDialog, 0, 0},  {&_swigt__p_wxProgressDialog, _p_wxProgressDialogTo_p_wxDialog, 0, 0},  {&_swigt__p_wxGenericProgressDialog, _p_wxGenericProgressDialogTo_p_wxDialog, 0, 0},  {&_swigt__p_wxMessageDialog, _p_wxMessageDialogTo_p_wxDialog, 0, 0},  {&_swigt__p_wxNumberEntryDialog, _p_wxNumberEntryDialogTo_p_wxDialog, 0, 0},  {&_swigt__p_wxPasswordEntryDialog, _p_wxPasswordEntryDialogTo_p_wxDialog, 0, 0},  {&_swigt__p_wxTextEntryDialog, _p_wxTextEntryDialogTo_p_wxDialog, 0, 0},  {&_swigt__p_wxSingleChoiceDialog, _p_wxSingleChoiceDialogTo_p_wxDialog, 0, 0},  {&_swigt__p_wxMultiChoiceDialog, _p_wxMultiChoiceDialogTo_p_wxDialog, 0, 0},  {&_swigt__p_wxFileDialog, _p_wxFileDialogTo_p_wxDialog, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxDuplexMode[] = {  {&_swigt__p_wxDuplexMode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxEditEnumProperty[] = {  {&_swigt__p_wxEditEnumProperty, 0, 0, 0},  {&_swigt__p_PyEditEnumProperty, _p_PyEditEnumPropertyTo_p_wxEditEnumProperty, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxCursorProperty[] = {{&_swigt__p_wxCursorProperty, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxEnumProperty[] = {  {&_swigt__p_wxEnumProperty, 0, 0, 0},  {&_swigt__p_wxEditEnumProperty, _p_wxEditEnumPropertyTo_p_wxEnumProperty, 0, 0},  {&_swigt__p_PyEditEnumProperty, _p_PyEditEnumPropertyTo_p_wxEnumProperty, 0, 0},  {&_swigt__p_wxSystemColourProperty, _p_wxSystemColourPropertyTo_p_wxEnumProperty, 0, 0},  {&_swigt__p_wxColourProperty, _p_wxColourPropertyTo_p_wxEnumProperty, 0, 0},  {&_swigt__p_PyColourProperty, _p_PyColourPropertyTo_p_wxEnumProperty, 0, 0},  {&_swigt__p_PySystemColourProperty, _p_PySystemColourPropertyTo_p_wxEnumProperty, 0, 0},  {&_swigt__p_wxCursorProperty, _p_wxCursorPropertyTo_p_wxEnumProperty, 0, 0},  {&_swigt__p_PyEnumProperty, _p_PyEnumPropertyTo_p_wxEnumProperty, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxMenuEvent[] = {{&_swigt__p_wxMenuEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxCloseEvent[] = {{&_swigt__p_wxCloseEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxMouseEvent[] = {{&_swigt__p_wxMouseEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxEraseEvent[] = {{&_swigt__p_wxEraseEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSetCursorEvent[] = {{&_swigt__p_wxSetCursorEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxInitDialogEvent[] = {{&_swigt__p_wxInitDialogEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyEvent[] = {{&_swigt__p_wxPyEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxMouseCaptureLostEvent[] = {{&_swigt__p_wxMouseCaptureLostEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxCalculateLayoutEvent[] = {{&_swigt__p_wxCalculateLayoutEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxQueryNewPaletteEvent[] = {{&_swigt__p_wxQueryNewPaletteEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxMaximizeEvent[] = {{&_swigt__p_wxMaximizeEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxIconizeEvent[] = {{&_swigt__p_wxIconizeEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxActivateEvent[] = {{&_swigt__p_wxActivateEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSizeEvent[] = {{&_swigt__p_wxSizeEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxMoveEvent[] = {{&_swigt__p_wxMoveEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPaintEvent[] = {{&_swigt__p_wxPaintEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxNcPaintEvent[] = {{&_swigt__p_wxNcPaintEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPaletteChangedEvent[] = {{&_swigt__p_wxPaletteChangedEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxDisplayChangedEvent[] = {{&_swigt__p_wxDisplayChangedEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxMouseCaptureChangedEvent[] = {{&_swigt__p_wxMouseCaptureChangedEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSysColourChangedEvent[] = {{&_swigt__p_wxSysColourChangedEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxThreadEvent[] = {{&_swigt__p_wxThreadEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxDropFilesEvent[] = {{&_swigt__p_wxDropFilesEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxFocusEvent[] = {{&_swigt__p_wxFocusEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxQueryLayoutInfoEvent[] = {{&_swigt__p_wxQueryLayoutInfoEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxShowEvent[] = {{&_swigt__p_wxShowEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxNavigationKeyEvent[] = {{&_swigt__p_wxNavigationKeyEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxKeyEvent[] = {{&_swigt__p_wxKeyEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxScrollWinEvent[] = {{&_swigt__p_wxScrollWinEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxTaskBarIconEvent[] = {{&_swigt__p_wxTaskBarIconEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxEvent[] = {  {&_swigt__p_wxContextMenuEvent, _p_wxContextMenuEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxMenuEvent, _p_wxMenuEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxCloseEvent, _p_wxCloseEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxMouseEvent, _p_wxMouseEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxEraseEvent, _p_wxEraseEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxSetCursorEvent, _p_wxSetCursorEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxSplitterEvent, _p_wxSplitterEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxInitDialogEvent, _p_wxInitDialogEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxWindowModalDialogEvent, _p_wxWindowModalDialogEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxFindDialogEvent, _p_wxFindDialogEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxScrollEvent, _p_wxScrollEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxBookCtrlEvent, _p_wxBookCtrlEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxNotifyEvent, _p_wxNotifyEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxPyEvent, _p_wxPyEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxMouseCaptureLostEvent, _p_wxMouseCaptureLostEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxCalculateLayoutEvent, _p_wxCalculateLayoutEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxEvent, 0, 0, 0},  {&_swigt__p_wxWindowCreateEvent, _p_wxWindowCreateEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxQueryNewPaletteEvent, _p_wxQueryNewPaletteEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxMaximizeEvent, _p_wxMaximizeEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxIconizeEvent, _p_wxIconizeEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxActivateEvent, _p_wxActivateEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxSizeEvent, _p_wxSizeEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxMoveEvent, _p_wxMoveEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxIdleEvent, _p_wxIdleEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxDateEvent, _p_wxDateEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxPaintEvent, _p_wxPaintEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxNcPaintEvent, _p_wxNcPaintEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxClipboardTextEvent, _p_wxClipboardTextEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxUpdateUIEvent, _p_wxUpdateUIEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxPaletteChangedEvent, _p_wxPaletteChangedEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxDisplayChangedEvent, _p_wxDisplayChangedEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxMouseCaptureChangedEvent, _p_wxMouseCaptureChangedEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxSysColourChangedEvent, _p_wxSysColourChangedEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxThreadEvent, _p_wxThreadEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxPropertyGridEvent, _p_wxPropertyGridEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxDropFilesEvent, _p_wxDropFilesEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxChildFocusEvent, _p_wxChildFocusEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxFocusEvent, _p_wxFocusEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxSashEvent, _p_wxSashEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxQueryLayoutInfoEvent, _p_wxQueryLayoutInfoEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxShowEvent, _p_wxShowEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxCommandEvent, _p_wxCommandEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxPyCommandEvent, _p_wxPyCommandEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxWindowDestroyEvent, _p_wxWindowDestroyEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxNavigationKeyEvent, _p_wxNavigationKeyEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxKeyEvent, _p_wxKeyEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxScrollWinEvent, _p_wxScrollWinEventTo_p_wxEvent, 0, 0},  {&_swigt__p_wxTaskBarIconEvent, _p_wxTaskBarIconEventTo_p_wxEvent, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSplashScreen[] = {{&_swigt__p_wxSplashScreen, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxMiniFrame[] = {{&_swigt__p_wxMiniFrame, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyPanel[] = {{&_swigt__p_wxPyPanel, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxEventBlocker[] = {{&_swigt__p_wxEventBlocker, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxMenuBar[] = {{&_swigt__p_wxMenuBar, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyValidator[] = {{&_swigt__p_wxPyValidator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxStatusBar[] = {{&_swigt__p_wxStatusBar, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxScrolledWindow[] = {{&_swigt__p_wxScrolledWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyVScrolledWindow[] = {{&_swigt__p_wxPyVScrolledWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyHScrolledWindow[] = {{&_swigt__p_wxPyHScrolledWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyHVScrolledWindow[] = {{&_swigt__p_wxPyHVScrolledWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyScrolledWindow[] = {{&_swigt__p_wxPyScrolledWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSplashScreenWindow[] = {{&_swigt__p_wxSplashScreenWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSplitterWindow[] = {{&_swigt__p_wxSplitterWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSashWindow[] = {{&_swigt__p_wxSashWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSashLayoutWindow[] = {{&_swigt__p_wxSashLayoutWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPopupWindow[] = {{&_swigt__p_wxPopupWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyPopupTransientWindow[] = {{&_swigt__p_wxPyPopupTransientWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxTipWindow[] = {{&_swigt__p_wxTipWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxMDIClientWindow[] = {{&_swigt__p_wxMDIClientWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPreviewFrame[] = {{&_swigt__p_wxPreviewFrame, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyPreviewFrame[] = {{&_swigt__p_wxPyPreviewFrame, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxMDIChildFrame[] = {{&_swigt__p_wxMDIChildFrame, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyApp[] = {{&_swigt__p_wxPyApp, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyEvtHandler[] = {{&_swigt__p_wxPyEvtHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPreviewCanvas[] = {{&_swigt__p_wxPreviewCanvas, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyWindow[] = {{&_swigt__p_wxPyWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyVListBox[] = {{&_swigt__p_wxPyVListBox, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyHtmlListBox[] = {{&_swigt__p_wxPyHtmlListBox, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSimpleHtmlListBox[] = {{&_swigt__p_wxSimpleHtmlListBox, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPreviewControlBar[] = {{&_swigt__p_wxPreviewControlBar, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyPreviewControlBar[] = {{&_swigt__p_wxPyPreviewControlBar, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyTaskBarIcon[] = {{&_swigt__p_wxPyTaskBarIcon, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxFrame[] = {{&_swigt__p_wxFrame, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxMenu[] = {{&_swigt__p_wxMenu, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxMDIParentFrame[] = {{&_swigt__p_wxMDIParentFrame, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxEvtHandler[] = {  {&_swigt__p_wxSplashScreen, _p_wxSplashScreenTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxMiniFrame, _p_wxMiniFrameTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPyPanel, _p_wxPyPanelTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxEventBlocker, _p_wxEventBlockerTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxMenuBar, _p_wxMenuBarTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxTextCtrlBase, _p_wxTextCtrlBaseTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxBookCtrlBase, _p_wxBookCtrlBaseTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxValidator, _p_wxValidatorTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPyValidator, _p_wxPyValidatorTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxSingleChoiceDialog, _p_wxSingleChoiceDialogTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxMultiChoiceDialog, _p_wxMultiChoiceDialogTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxFileDialog, _p_wxFileDialogTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxTextEntryDialog, _p_wxTextEntryDialogTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPasswordEntryDialog, _p_wxPasswordEntryDialogTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxNumberEntryDialog, _p_wxNumberEntryDialogTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxFindReplaceDialog, _p_wxFindReplaceDialogTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxProgressDialog, _p_wxProgressDialogTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxGenericProgressDialog, _p_wxGenericProgressDialogTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxMessageDialog, _p_wxMessageDialogTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPGMultiButton, _p_wxPGMultiButtonTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPanel, _p_wxPanelTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxStatusBar, _p_wxStatusBarTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxScrolledWindow, _p_wxScrolledWindowTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPyVScrolledWindow, _p_wxPyVScrolledWindowTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPyHScrolledWindow, _p_wxPyHScrolledWindowTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPyHVScrolledWindow, _p_wxPyHVScrolledWindowTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPyScrolledWindow, _p_wxPyScrolledWindowTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxSplashScreenWindow, _p_wxSplashScreenWindowTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxSplitterWindow, _p_wxSplitterWindowTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxSashWindow, _p_wxSashWindowTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxSashLayoutWindow, _p_wxSashLayoutWindowTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPopupWindow, _p_wxPopupWindowTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPyPopupTransientWindow, _p_wxPyPopupTransientWindowTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxTipWindow, _p_wxTipWindowTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxTopLevelWindow, _p_wxTopLevelWindowTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxWindow, _p_wxWindowTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxMDIClientWindow, _p_wxMDIClientWindowTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPreviewFrame, _p_wxPreviewFrameTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPyPreviewFrame, _p_wxPyPreviewFrameTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxControl, _p_wxControlTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxMDIChildFrame, _p_wxMDIChildFrameTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPyApp, _p_wxPyAppTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPropertyGridPage, _p_wxPropertyGridPageTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxControlWithItems, _p_wxControlWithItemsTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxEvtHandler, 0, 0, 0},  {&_swigt__p_wxPyEvtHandler, _p_wxPyEvtHandlerTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPreviewCanvas, _p_wxPreviewCanvasTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPyWindow, _p_wxPyWindowTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPyVListBox, _p_wxPyVListBoxTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPyHtmlListBox, _p_wxPyHtmlListBoxTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxSimpleHtmlListBox, _p_wxSimpleHtmlListBoxTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPropertyGrid, _p_wxPropertyGridTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPreviewControlBar, _p_wxPreviewControlBarTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPyPreviewControlBar, _p_wxPyPreviewControlBarTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPyTaskBarIcon, _p_wxPyTaskBarIconTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxFrame, _p_wxFrameTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPGArrayStringEditorDialog, _p_wxPGArrayStringEditorDialogTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPGArrayEditorDialog, _p_wxPGArrayEditorDialogTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxDialog, _p_wxDialogTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxColourDialog, _p_wxColourDialogTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxDirDialog, _p_wxDirDialogTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxFontDialog, _p_wxFontDialogTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxMenu, _p_wxMenuTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxMDIParentFrame, _p_wxMDIParentFrameTo_p_wxEvtHandler, 0, 0},  {&_swigt__p_wxPropertyGridManager, _p_wxPropertyGridManagerTo_p_wxEvtHandler, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxFileName[] = {  {&_swigt__p_wxFileName, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxImageFileProperty[] = {{&_swigt__p_wxImageFileProperty, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxFileProperty[] = {  {&_swigt__p_wxFileProperty, 0, 0, 0},  {&_swigt__p_wxImageFileProperty, _p_wxImageFilePropertyTo_p_wxFileProperty, 0, 0},  {&_swigt__p_PyFileProperty, _p_PyFilePropertyTo_p_wxFileProperty, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxFlagsProperty[] = {  {&_swigt__p_wxFlagsProperty, 0, 0, 0},  {&_swigt__p_PyFlagsProperty, _p_PyFlagsPropertyTo_p_wxFlagsProperty, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxFloatProperty[] = {  {&_swigt__p_wxFloatProperty, 0, 0, 0},  {&_swigt__p_PyFloatProperty, _p_PyFloatPropertyTo_p_wxFloatProperty, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxFont[] = {  {&_swigt__p_wxFont, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxFontProperty[] = {  {&_swigt__p_wxFontProperty, 0, 0, 0},  {&_swigt__p_PyFontProperty, _p_PyFontPropertyTo_p_wxFontProperty, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxIdleEvent[] = {  {&_swigt__p_wxIdleEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxIntProperty[] = {  {&_swigt__p_wxIntProperty, 0, 0, 0},  {&_swigt__p_PyIntProperty, _p_PyIntPropertyTo_p_wxIntProperty, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxListEvent[] = {  {&_swigt__p_wxListEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxLongLong[] = {  {&_swigt__p_wxLongLong, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxLongLong_t[] = {  {&_swigt__p_wxLongLong_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxDirProperty[] = {{&_swigt__p_wxDirProperty, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxLongStringProperty[] = {  {&_swigt__p_wxLongStringProperty, 0, 0, 0},  {&_swigt__p_wxDirProperty, _p_wxDirPropertyTo_p_wxLongStringProperty, 0, 0},  {&_swigt__p_PyLongStringProperty, _p_PyLongStringPropertyTo_p_wxLongStringProperty, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxNumericPropertyValidator[] = {  {&_swigt__p_wxNumericPropertyValidator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxIndividualLayoutConstraint[] = {{&_swigt__p_wxIndividualLayoutConstraint, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPGRootProperty[] = {{&_swigt__p_wxPGRootProperty, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxBoolProperty[] = {{&_swigt__p_wxBoolProperty, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxMenuItem[] = {{&_swigt__p_wxMenuItem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxImage[] = {{&_swigt__p_wxImage, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPySizer[] = {{&_swigt__p_wxPySizer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxLayoutAlgorithm[] = {{&_swigt__p_wxLayoutAlgorithm, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxFindReplaceData[] = {{&_swigt__p_wxFindReplaceData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxWrapSizer[] = {{&_swigt__p_wxWrapSizer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPageSetupDialogData[] = {{&_swigt__p_wxPageSetupDialogData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPrintDialogData[] = {{&_swigt__p_wxPrintDialogData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPrinter[] = {{&_swigt__p_wxPrinter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxGridSizer[] = {{&_swigt__p_wxGridSizer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxFlexGridSizer[] = {{&_swigt__p_wxFlexGridSizer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxAcceleratorTable[] = {{&_swigt__p_wxAcceleratorTable, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxColourData[] = {{&_swigt__p_wxColourData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyPrintout[] = {{&_swigt__p_wxPyPrintout, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxStdDialogButtonSizer[] = {{&_swigt__p_wxStdDialogButtonSizer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPrintData[] = {{&_swigt__p_wxPrintData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxFontData[] = {{&_swigt__p_wxFontData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxFileSystem[] = {{&_swigt__p_wxFileSystem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyPrintPreview[] = {{&_swigt__p_wxPyPrintPreview, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPrintPreview[] = {{&_swigt__p_wxPrintPreview, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxLayoutConstraints[] = {{&_swigt__p_wxLayoutConstraints, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxStaticBoxSizer[] = {{&_swigt__p_wxStaticBoxSizer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxBoxSizer[] = {{&_swigt__p_wxBoxSizer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSizer[] = {{&_swigt__p_wxSizer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxGridBagSizer[] = {{&_swigt__p_wxGridBagSizer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxFSFile[] = {{&_swigt__p_wxFSFile, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxStandardDialogLayoutAdapter[] = {{&_swigt__p_wxStandardDialogLayoutAdapter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxDialogLayoutAdapter[] = {{&_swigt__p_wxDialogLayoutAdapter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxGBSizerItem[] = {{&_swigt__p_wxGBSizerItem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSizerItem[] = {{&_swigt__p_wxSizerItem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPageSetupDialog[] = {{&_swigt__p_wxPageSetupDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPrintDialog[] = {{&_swigt__p_wxPrintDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPNMHandler[] = {{&_swigt__p_wxPNMHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxJPEGHandler[] = {{&_swigt__p_wxJPEGHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPCXHandler[] = {{&_swigt__p_wxPCXHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxGIFHandler[] = {{&_swigt__p_wxGIFHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPNGHandler[] = {{&_swigt__p_wxPNGHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxANIHandler[] = {{&_swigt__p_wxANIHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxCURHandler[] = {{&_swigt__p_wxCURHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxICOHandler[] = {{&_swigt__p_wxICOHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxBMPHandler[] = {{&_swigt__p_wxBMPHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPyImageHandler[] = {{&_swigt__p_wxPyImageHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxImageHandler[] = {{&_swigt__p_wxImageHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxXPMHandler[] = {{&_swigt__p_wxXPMHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxTIFFHandler[] = {{&_swigt__p_wxTIFFHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxTGAHandler[] = {{&_swigt__p_wxTGAHandler, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPGTextCtrlAndButtonEditor[] = {{&_swigt__p_wxPGTextCtrlAndButtonEditor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPGSpinCtrlEditor[] = {{&_swigt__p_wxPGSpinCtrlEditor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPGChoiceAndButtonEditor[] = {{&_swigt__p_wxPGChoiceAndButtonEditor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPGCheckBoxEditor[] = {{&_swigt__p_wxPGCheckBoxEditor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxObject[] = {  {&_swigt__p_wxUpdateUIEvent, _p_wxUpdateUIEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxPGChoiceEntry, _p_wxPGChoiceEntryTo_p_wxObject, 0, 0},  {&_swigt__p_wxPreviewCanvas, _p_wxPreviewCanvasTo_p_wxObject, 0, 0},  {&_swigt__p_wxEvent, _p_wxEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxFindDialogEvent, _p_wxFindDialogEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxInitDialogEvent, _p_wxInitDialogEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxWindowModalDialogEvent, _p_wxWindowModalDialogEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxIndividualLayoutConstraint, _p_wxIndividualLayoutConstraintTo_p_wxObject, 0, 0},  {&_swigt__p_wxStringProperty, _p_wxStringPropertyTo_p_wxObject, 0, 0},  {&_swigt__p_wxIntProperty, _p_wxIntPropertyTo_p_wxObject, 0, 0},  {&_swigt__p_wxUIntProperty, _p_wxUIntPropertyTo_p_wxObject, 0, 0},  {&_swigt__p_PyIntProperty, _p_PyIntPropertyTo_p_wxObject, 0, 0},  {&_swigt__p_PyProperty, _p_PyPropertyTo_p_wxObject, 0, 0},  {&_swigt__p_PyUIntProperty, _p_PyUIntPropertyTo_p_wxObject, 0, 0},  {&_swigt__p_wxPGProperty, _p_wxPGPropertyTo_p_wxObject, 0, 0},  {&_swigt__p_wxPGRootProperty, _p_wxPGRootPropertyTo_p_wxObject, 0, 0},  {&_swigt__p_wxFloatProperty, _p_wxFloatPropertyTo_p_wxObject, 0, 0},  {&_swigt__p_wxBoolProperty, _p_wxBoolPropertyTo_p_wxObject, 0, 0},  {&_swigt__p_wxEnumProperty, _p_wxEnumPropertyTo_p_wxObject, 0, 0},  {&_swigt__p_wxEditEnumProperty, _p_wxEditEnumPropertyTo_p_wxObject, 0, 0},  {&_swigt__p_PySystemColourProperty, _p_PySystemColourPropertyTo_p_wxObject, 0, 0},  {&_swigt__p_PyEditEnumProperty, _p_PyEditEnumPropertyTo_p_wxObject, 0, 0},  {&_swigt__p_PyStringProperty, _p_PyStringPropertyTo_p_wxObject, 0, 0},  {&_swigt__p_PyArrayStringProperty, _p_PyArrayStringPropertyTo_p_wxObject, 0, 0},  {&_swigt__p_PyEnumProperty, _p_PyEnumPropertyTo_p_wxObject, 0, 0},  {&_swigt__p_PyFloatProperty, _p_PyFloatPropertyTo_p_wxObject, 0, 0},  {&_swigt__p_wxImageFileProperty, _p_wxImageFilePropertyTo_p_wxObject, 0, 0},  {&_swigt__p_wxCursorProperty, _p_wxCursorPropertyTo_p_wxObject, 0, 0},  {&_swigt__p_wxColourProperty, _p_wxColourPropertyTo_p_wxObject, 0, 0},  {&_swigt__p_PyColourProperty, _p_PyColourPropertyTo_p_wxObject, 0, 0},  {&_swigt__p_wxSystemColourProperty, _p_wxSystemColourPropertyTo_p_wxObject, 0, 0},  {&_swigt__p_wxFontProperty, _p_wxFontPropertyTo_p_wxObject, 0, 0},  {&_swigt__p_PyFontProperty, _p_PyFontPropertyTo_p_wxObject, 0, 0},  {&_swigt__p_wxArrayStringProperty, _p_wxArrayStringPropertyTo_p_wxObject, 0, 0},  {&_swigt__p_wxDirProperty, _p_wxDirPropertyTo_p_wxObject, 0, 0},  {&_swigt__p_wxLongStringProperty, _p_wxLongStringPropertyTo_p_wxObject, 0, 0},  {&_swigt__p_PyLongStringProperty, _p_PyLongStringPropertyTo_p_wxObject, 0, 0},  {&_swigt__p_wxFileProperty, _p_wxFilePropertyTo_p_wxObject, 0, 0},  {&_swigt__p_PyFileProperty, _p_PyFilePropertyTo_p_wxObject, 0, 0},  {&_swigt__p_wxFlagsProperty, _p_wxFlagsPropertyTo_p_wxObject, 0, 0},  {&_swigt__p_PyFlagsProperty, _p_PyFlagsPropertyTo_p_wxObject, 0, 0},  {&_swigt__p_wxPreviewFrame, _p_wxPreviewFrameTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyPreviewFrame, _p_wxPyPreviewFrameTo_p_wxObject, 0, 0},  {&_swigt__p_wxMenuItem, _p_wxMenuItemTo_p_wxObject, 0, 0},  {&_swigt__p_wxImage, _p_wxImageTo_p_wxObject, 0, 0},  {&_swigt__p_wxPySizer, _p_wxPySizerTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyTaskBarIcon, _p_wxPyTaskBarIconTo_p_wxObject, 0, 0},  {&_swigt__p_wxLayoutAlgorithm, _p_wxLayoutAlgorithmTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyApp, _p_wxPyAppTo_p_wxObject, 0, 0},  {&_swigt__p_wxBookCtrlBase, _p_wxBookCtrlBaseTo_p_wxObject, 0, 0},  {&_swigt__p_wxTextCtrlBase, _p_wxTextCtrlBaseTo_p_wxObject, 0, 0},  {&_swigt__p_wxPreviewControlBar, _p_wxPreviewControlBarTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyPreviewControlBar, _p_wxPyPreviewControlBarTo_p_wxObject, 0, 0},  {&_swigt__p_wxFindReplaceData, _p_wxFindReplaceDataTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyValidator, _p_wxPyValidatorTo_p_wxObject, 0, 0},  {&_swigt__p_wxValidator, _p_wxValidatorTo_p_wxObject, 0, 0},  {&_swigt__p_wxCloseEvent, _p_wxCloseEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxMouseEvent, _p_wxMouseEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxEraseEvent, _p_wxEraseEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxWrapSizer, _p_wxWrapSizerTo_p_wxObject, 0, 0},  {&_swigt__p_wxBookCtrlEvent, _p_wxBookCtrlEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxScrollEvent, _p_wxScrollEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxPageSetupDialogData, _p_wxPageSetupDialogDataTo_p_wxObject, 0, 0},  {&_swigt__p_wxPrintDialogData, _p_wxPrintDialogDataTo_p_wxObject, 0, 0},  {&_swigt__p_wxPrinter, _p_wxPrinterTo_p_wxObject, 0, 0},  {&_swigt__p_wxControlWithItems, _p_wxControlWithItemsTo_p_wxObject, 0, 0},  {&_swigt__p_wxObject, 0, 0, 0},  {&_swigt__p_wxGridSizer, _p_wxGridSizerTo_p_wxObject, 0, 0},  {&_swigt__p_wxFlexGridSizer, _p_wxFlexGridSizerTo_p_wxObject, 0, 0},  {&_swigt__p_wxAcceleratorTable, _p_wxAcceleratorTableTo_p_wxObject, 0, 0},  {&_swigt__p_wxControl, _p_wxControlTo_p_wxObject, 0, 0},  {&_swigt__p_wxColourData, _p_wxColourDataTo_p_wxObject, 0, 0},  {&_swigt__p_wxWindowCreateEvent, _p_wxWindowCreateEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxQueryNewPaletteEvent, _p_wxQueryNewPaletteEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxMaximizeEvent, _p_wxMaximizeEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxIconizeEvent, _p_wxIconizeEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxActivateEvent, _p_wxActivateEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxSizeEvent, _p_wxSizeEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxMoveEvent, _p_wxMoveEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxIdleEvent, _p_wxIdleEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxDateEvent, _p_wxDateEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxMouseCaptureLostEvent, _p_wxMouseCaptureLostEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxCalculateLayoutEvent, _p_wxCalculateLayoutEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyPrintout, _p_wxPyPrintoutTo_p_wxObject, 0, 0},  {&_swigt__p_wxMDIChildFrame, _p_wxMDIChildFrameTo_p_wxObject, 0, 0},  {&_swigt__p_wxStdDialogButtonSizer, _p_wxStdDialogButtonSizerTo_p_wxObject, 0, 0},  {&_swigt__p_wxMenu, _p_wxMenuTo_p_wxObject, 0, 0},  {&_swigt__p_wxWindowDestroyEvent, _p_wxWindowDestroyEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxNavigationKeyEvent, _p_wxNavigationKeyEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxKeyEvent, _p_wxKeyEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxSashEvent, _p_wxSashEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxSimpleHtmlListBox, _p_wxSimpleHtmlListBoxTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyHtmlListBox, _p_wxPyHtmlListBoxTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyVListBox, _p_wxPyVListBoxTo_p_wxObject, 0, 0},  {&_swigt__p_wxPrintData, _p_wxPrintDataTo_p_wxObject, 0, 0},  {&_swigt__p_wxFontData, _p_wxFontDataTo_p_wxObject, 0, 0},  {&_swigt__p_wxMiniFrame, _p_wxMiniFrameTo_p_wxObject, 0, 0},  {&_swigt__p_wxFrame, _p_wxFrameTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyPanel, _p_wxPyPanelTo_p_wxObject, 0, 0},  {&_swigt__p_wxQueryLayoutInfoEvent, _p_wxQueryLayoutInfoEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxSplashScreen, _p_wxSplashScreenTo_p_wxObject, 0, 0},  {&_swigt__p_wxFileSystem, _p_wxFileSystemTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyPrintPreview, _p_wxPyPrintPreviewTo_p_wxObject, 0, 0},  {&_swigt__p_wxPrintPreview, _p_wxPrintPreviewTo_p_wxObject, 0, 0},  {&_swigt__p_wxLayoutConstraints, _p_wxLayoutConstraintsTo_p_wxObject, 0, 0},  {&_swigt__p_wxStaticBoxSizer, _p_wxStaticBoxSizerTo_p_wxObject, 0, 0},  {&_swigt__p_wxBoxSizer, _p_wxBoxSizerTo_p_wxObject, 0, 0},  {&_swigt__p_wxSizer, _p_wxSizerTo_p_wxObject, 0, 0},  {&_swigt__p_wxGridBagSizer, _p_wxGridBagSizerTo_p_wxObject, 0, 0},  {&_swigt__p_wxPaintEvent, _p_wxPaintEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxNcPaintEvent, _p_wxNcPaintEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxClipboardTextEvent, _p_wxClipboardTextEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxFSFile, _p_wxFSFileTo_p_wxObject, 0, 0},  {&_swigt__p_wxStandardDialogLayoutAdapter, _p_wxStandardDialogLayoutAdapterTo_p_wxObject, 0, 0},  {&_swigt__p_wxDialogLayoutAdapter, _p_wxDialogLayoutAdapterTo_p_wxObject, 0, 0},  {&_swigt__p_wxPGEditorDialogAdapter, _p_wxPGEditorDialogAdapterTo_p_wxObject, 0, 0},  {&_swigt__p_wxPGFileDialogAdapter, _p_wxPGFileDialogAdapterTo_p_wxObject, 0, 0},  {&_swigt__p_wxPGLongStringDialogAdapter, _p_wxPGLongStringDialogAdapterTo_p_wxObject, 0, 0},  {&_swigt__p_PyEditorDialogAdapter, _p_PyEditorDialogAdapterTo_p_wxObject, 0, 0},  {&_swigt__p_PyFileDialogAdapter, _p_PyFileDialogAdapterTo_p_wxObject, 0, 0},  {&_swigt__p_PyLongStringDialogAdapter, _p_PyLongStringDialogAdapterTo_p_wxObject, 0, 0},  {&_swigt__p_wxSetCursorEvent, _p_wxSetCursorEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxSplitterEvent, _p_wxSplitterEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxPGMultiButton, _p_wxPGMultiButtonTo_p_wxObject, 0, 0},  {&_swigt__p_wxGBSizerItem, _p_wxGBSizerItemTo_p_wxObject, 0, 0},  {&_swigt__p_wxSizerItem, _p_wxSizerItemTo_p_wxObject, 0, 0},  {&_swigt__p_wxFontDialog, _p_wxFontDialogTo_p_wxObject, 0, 0},  {&_swigt__p_wxDirDialog, _p_wxDirDialogTo_p_wxObject, 0, 0},  {&_swigt__p_wxColourDialog, _p_wxColourDialogTo_p_wxObject, 0, 0},  {&_swigt__p_wxDialog, _p_wxDialogTo_p_wxObject, 0, 0},  {&_swigt__p_wxPGArrayEditorDialog, _p_wxPGArrayEditorDialogTo_p_wxObject, 0, 0},  {&_swigt__p_wxPGArrayStringEditorDialog, _p_wxPGArrayStringEditorDialogTo_p_wxObject, 0, 0},  {&_swigt__p_wxNotifyEvent, _p_wxNotifyEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyEvent, _p_wxPyEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxPageSetupDialog, _p_wxPageSetupDialogTo_p_wxObject, 0, 0},  {&_swigt__p_wxPrintDialog, _p_wxPrintDialogTo_p_wxObject, 0, 0},  {&_swigt__p_wxShowEvent, _p_wxShowEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxPNMHandler, _p_wxPNMHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxJPEGHandler, _p_wxJPEGHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxPCXHandler, _p_wxPCXHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxGIFHandler, _p_wxGIFHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxPNGHandler, _p_wxPNGHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxANIHandler, _p_wxANIHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxCURHandler, _p_wxCURHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxICOHandler, _p_wxICOHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxBMPHandler, _p_wxBMPHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyImageHandler, _p_wxPyImageHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxImageHandler, _p_wxImageHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxXPMHandler, _p_wxXPMHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxTIFFHandler, _p_wxTIFFHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxTGAHandler, _p_wxTGAHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxEvtHandler, _p_wxEvtHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyEvtHandler, _p_wxPyEvtHandlerTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyScrolledWindow, _p_wxPyScrolledWindowTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyHVScrolledWindow, _p_wxPyHVScrolledWindowTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyHScrolledWindow, _p_wxPyHScrolledWindowTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyVScrolledWindow, _p_wxPyVScrolledWindowTo_p_wxObject, 0, 0},  {&_swigt__p_wxScrolledWindow, _p_wxScrolledWindowTo_p_wxObject, 0, 0},  {&_swigt__p_wxSplashScreenWindow, _p_wxSplashScreenWindowTo_p_wxObject, 0, 0},  {&_swigt__p_wxSplitterWindow, _p_wxSplitterWindowTo_p_wxObject, 0, 0},  {&_swigt__p_wxSashWindow, _p_wxSashWindowTo_p_wxObject, 0, 0},  {&_swigt__p_wxSashLayoutWindow, _p_wxSashLayoutWindowTo_p_wxObject, 0, 0},  {&_swigt__p_wxPopupWindow, _p_wxPopupWindowTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyPopupTransientWindow, _p_wxPyPopupTransientWindowTo_p_wxObject, 0, 0},  {&_swigt__p_wxTipWindow, _p_wxTipWindowTo_p_wxObject, 0, 0},  {&_swigt__p_wxTopLevelWindow, _p_wxTopLevelWindowTo_p_wxObject, 0, 0},  {&_swigt__p_wxWindow, _p_wxWindowTo_p_wxObject, 0, 0},  {&_swigt__p_wxMDIClientWindow, _p_wxMDIClientWindowTo_p_wxObject, 0, 0},  {&_swigt__p_wxPGTextCtrlEditor, _p_wxPGTextCtrlEditorTo_p_wxObject, 0, 0},  {&_swigt__p_wxPGTextCtrlAndButtonEditor, _p_wxPGTextCtrlAndButtonEditorTo_p_wxObject, 0, 0},  {&_swigt__p_wxPGSpinCtrlEditor, _p_wxPGSpinCtrlEditorTo_p_wxObject, 0, 0},  {&_swigt__p_PyTextCtrlEditor, _p_PyTextCtrlEditorTo_p_wxObject, 0, 0},  {&_swigt__p_wxPGComboBoxEditor, _p_wxPGComboBoxEditorTo_p_wxObject, 0, 0},  {&_swigt__p_PyComboBoxEditor, _p_PyComboBoxEditorTo_p_wxObject, 0, 0},  {&_swigt__p_wxPGChoiceAndButtonEditor, _p_wxPGChoiceAndButtonEditorTo_p_wxObject, 0, 0},  {&_swigt__p_wxPGCheckBoxEditor, _p_wxPGCheckBoxEditorTo_p_wxObject, 0, 0},  {&_swigt__p_wxPropertyGridPage, _p_wxPropertyGridPageTo_p_wxObject, 0, 0},  {&_swigt__p_wxPGCell, _p_wxPGCellTo_p_wxObject, 0, 0},  {&_swigt__p_wxPropertyGrid, _p_wxPropertyGridTo_p_wxObject, 0, 0},  {&_swigt__p_wxGenericProgressDialog, _p_wxGenericProgressDialogTo_p_wxObject, 0, 0},  {&_swigt__p_wxMessageDialog, _p_wxMessageDialogTo_p_wxObject, 0, 0},  {&_swigt__p_wxNumberEntryDialog, _p_wxNumberEntryDialogTo_p_wxObject, 0, 0},  {&_swigt__p_wxPasswordEntryDialog, _p_wxPasswordEntryDialogTo_p_wxObject, 0, 0},  {&_swigt__p_wxTextEntryDialog, _p_wxTextEntryDialogTo_p_wxObject, 0, 0},  {&_swigt__p_wxSingleChoiceDialog, _p_wxSingleChoiceDialogTo_p_wxObject, 0, 0},  {&_swigt__p_wxProgressDialog, _p_wxProgressDialogTo_p_wxObject, 0, 0},  {&_swigt__p_wxFindReplaceDialog, _p_wxFindReplaceDialogTo_p_wxObject, 0, 0},  {&_swigt__p_wxMultiChoiceDialog, _p_wxMultiChoiceDialogTo_p_wxObject, 0, 0},  {&_swigt__p_wxFileDialog, _p_wxFileDialogTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyWindow, _p_wxPyWindowTo_p_wxObject, 0, 0},  {&_swigt__p_wxSysColourChangedEvent, _p_wxSysColourChangedEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxMouseCaptureChangedEvent, _p_wxMouseCaptureChangedEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxDisplayChangedEvent, _p_wxDisplayChangedEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxPaletteChangedEvent, _p_wxPaletteChangedEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxThreadEvent, _p_wxThreadEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxPropertyGridEvent, _p_wxPropertyGridEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxEventBlocker, _p_wxEventBlockerTo_p_wxObject, 0, 0},  {&_swigt__p_wxPGEditor, _p_wxPGEditorTo_p_wxObject, 0, 0},  {&_swigt__p_wxPGChoiceEditor, _p_wxPGChoiceEditorTo_p_wxObject, 0, 0},  {&_swigt__p_PyChoiceEditor, _p_PyChoiceEditorTo_p_wxObject, 0, 0},  {&_swigt__p_PyEditor, _p_PyEditorTo_p_wxObject, 0, 0},  {&_swigt__p_wxColourPropertyValue, _p_wxColourPropertyValueTo_p_wxObject, 0, 0},  {&_swigt__p_wxPanel, _p_wxPanelTo_p_wxObject, 0, 0},  {&_swigt__p_wxScrollWinEvent, _p_wxScrollWinEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxTaskBarIconEvent, _p_wxTaskBarIconEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxContextMenuEvent, _p_wxContextMenuEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxMenuEvent, _p_wxMenuEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxCommandEvent, _p_wxCommandEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxPyCommandEvent, _p_wxPyCommandEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxPropertyGridManager, _p_wxPropertyGridManagerTo_p_wxObject, 0, 0},  {&_swigt__p_wxStatusBar, _p_wxStatusBarTo_p_wxObject, 0, 0},  {&_swigt__p_wxDropFilesEvent, _p_wxDropFilesEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxChildFocusEvent, _p_wxChildFocusEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxFocusEvent, _p_wxFocusEventTo_p_wxObject, 0, 0},  {&_swigt__p_wxPropertyCategory, _p_wxPropertyCategoryTo_p_wxObject, 0, 0},  {&_swigt__p_wxMDIParentFrame, _p_wxMDIParentFrameTo_p_wxObject, 0, 0},  {&_swigt__p_wxMenuBar, _p_wxMenuBarTo_p_wxObject, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPGArrayEditorDialog[] = {  {&_swigt__p_wxPGArrayEditorDialog, 0, 0, 0},  {&_swigt__p_wxPGArrayStringEditorDialog, _p_wxPGArrayStringEditorDialogTo_p_wxPGArrayEditorDialog, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPGArrayStringEditorDialog[] = {  {&_swigt__p_wxPGArrayStringEditorDialog, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPGAttributeStorage[] = {  {&_swigt__p_wxPGAttributeStorage, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPGCell[] = {  {&_swigt__p_wxPGChoiceEntry, _p_wxPGChoiceEntryTo_p_wxPGCell, 0, 0},  {&_swigt__p_wxPGCell, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPGCellData[] = {  {&_swigt__p_wxPGCellData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPGDefaultRenderer[] = {{&_swigt__p_wxPGDefaultRenderer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPGCellRenderer[] = {  {&_swigt__p_wxPGCellRenderer, 0, 0, 0},  {&_swigt__p_wxPGDefaultRenderer, _p_wxPGDefaultRendererTo_p_wxPGCellRenderer, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPGChoiceEditor[] = {  {&_swigt__p_wxPGComboBoxEditor, _p_wxPGComboBoxEditorTo_p_wxPGChoiceEditor, 0, 0},  {&_swigt__p_PyComboBoxEditor, _p_PyComboBoxEditorTo_p_wxPGChoiceEditor, 0, 0},  {&_swigt__p_wxPGChoiceAndButtonEditor, _p_wxPGChoiceAndButtonEditorTo_p_wxPGChoiceEditor, 0, 0},  {&_swigt__p_wxPGChoiceEditor, 0, 0, 0},  {&_swigt__p_PyChoiceEditor, _p_PyChoiceEditorTo_p_wxPGChoiceEditor, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPGChoiceEntry[] = {  {&_swigt__p_wxPGChoiceEntry, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPGChoices[] = {  {&_swigt__p_wxPGChoices, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPGChoicesData[] = {  {&_swigt__p_wxPGChoicesData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPGComboBoxEditor[] = {  {&_swigt__p_wxPGComboBoxEditor, 0, 0, 0},  {&_swigt__p_PyComboBoxEditor, _p_PyComboBoxEditorTo_p_wxPGComboBoxEditor, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPGCommonValue[] = {  {&_swigt__p_wxPGCommonValue, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPGEditor[] = {  {&_swigt__p_wxPGTextCtrlEditor, _p_wxPGTextCtrlEditorTo_p_wxPGEditor, 0, 0},  {&_swigt__p_wxPGTextCtrlAndButtonEditor, _p_wxPGTextCtrlAndButtonEditorTo_p_wxPGEditor, 0, 0},  {&_swigt__p_wxPGSpinCtrlEditor, _p_wxPGSpinCtrlEditorTo_p_wxPGEditor, 0, 0},  {&_swigt__p_PyTextCtrlEditor, _p_PyTextCtrlEditorTo_p_wxPGEditor, 0, 0},  {&_swigt__p_wxPGComboBoxEditor, _p_wxPGComboBoxEditorTo_p_wxPGEditor, 0, 0},  {&_swigt__p_PyComboBoxEditor, _p_PyComboBoxEditorTo_p_wxPGEditor, 0, 0},  {&_swigt__p_wxPGChoiceAndButtonEditor, _p_wxPGChoiceAndButtonEditorTo_p_wxPGEditor, 0, 0},  {&_swigt__p_wxPGCheckBoxEditor, _p_wxPGCheckBoxEditorTo_p_wxPGEditor, 0, 0},  {&_swigt__p_wxPGEditor, 0, 0, 0},  {&_swigt__p_wxPGChoiceEditor, _p_wxPGChoiceEditorTo_p_wxPGEditor, 0, 0},  {&_swigt__p_PyChoiceEditor, _p_PyChoiceEditorTo_p_wxPGEditor, 0, 0},  {&_swigt__p_PyEditor, _p_PyEditorTo_p_wxPGEditor, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPGEditorDialogAdapter[] = {  {&_swigt__p_wxPGEditorDialogAdapter, 0, 0, 0},  {&_swigt__p_wxPGFileDialogAdapter, _p_wxPGFileDialogAdapterTo_p_wxPGEditorDialogAdapter, 0, 0},  {&_swigt__p_PyFileDialogAdapter, _p_PyFileDialogAdapterTo_p_wxPGEditorDialogAdapter, 0, 0},  {&_swigt__p_wxPGLongStringDialogAdapter, _p_wxPGLongStringDialogAdapterTo_p_wxPGEditorDialogAdapter, 0, 0},  {&_swigt__p_PyLongStringDialogAdapter, _p_PyLongStringDialogAdapterTo_p_wxPGEditorDialogAdapter, 0, 0},  {&_swigt__p_PyEditorDialogAdapter, _p_PyEditorDialogAdapterTo_p_wxPGEditorDialogAdapter, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPGFileDialogAdapter[] = {  {&_swigt__p_wxPGFileDialogAdapter, 0, 0, 0},  {&_swigt__p_PyFileDialogAdapter, _p_PyFileDialogAdapterTo_p_wxPGFileDialogAdapter, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPGLongStringDialogAdapter[] = {  {&_swigt__p_wxPGLongStringDialogAdapter, 0, 0, 0},  {&_swigt__p_PyLongStringDialogAdapter, _p_PyLongStringDialogAdapterTo_p_wxPGLongStringDialogAdapter, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPGMultiButton[] = {  {&_swigt__p_wxPGMultiButton, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPGPaintData[] = {  {&_swigt__p_wxPGPaintData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPGPropArgCls[] = {  {&_swigt__p_wxPGPropArgCls, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPGProperty[] = {  {&_swigt__p_wxPGRootProperty, _p_wxPGRootPropertyTo_p_wxPGProperty, 0, 0},  {&_swigt__p_wxStringProperty, _p_wxStringPropertyTo_p_wxPGProperty, 0, 0},  {&_swigt__p_wxIntProperty, _p_wxIntPropertyTo_p_wxPGProperty, 0, 0},  {&_swigt__p_wxUIntProperty, _p_wxUIntPropertyTo_p_wxPGProperty, 0, 0},  {&_swigt__p_wxFloatProperty, _p_wxFloatPropertyTo_p_wxPGProperty, 0, 0},  {&_swigt__p_wxBoolProperty, _p_wxBoolPropertyTo_p_wxPGProperty, 0, 0},  {&_swigt__p_wxEnumProperty, _p_wxEnumPropertyTo_p_wxPGProperty, 0, 0},  {&_swigt__p_wxEditEnumProperty, _p_wxEditEnumPropertyTo_p_wxPGProperty, 0, 0},  {&_swigt__p_wxFlagsProperty, _p_wxFlagsPropertyTo_p_wxPGProperty, 0, 0},  {&_swigt__p_wxFileProperty, _p_wxFilePropertyTo_p_wxPGProperty, 0, 0},  {&_swigt__p_wxLongStringProperty, _p_wxLongStringPropertyTo_p_wxPGProperty, 0, 0},  {&_swigt__p_wxDirProperty, _p_wxDirPropertyTo_p_wxPGProperty, 0, 0},  {&_swigt__p_wxArrayStringProperty, _p_wxArrayStringPropertyTo_p_wxPGProperty, 0, 0},  {&_swigt__p_wxFontProperty, _p_wxFontPropertyTo_p_wxPGProperty, 0, 0},  {&_swigt__p_wxSystemColourProperty, _p_wxSystemColourPropertyTo_p_wxPGProperty, 0, 0},  {&_swigt__p_wxColourProperty, _p_wxColourPropertyTo_p_wxPGProperty, 0, 0},  {&_swigt__p_wxCursorProperty, _p_wxCursorPropertyTo_p_wxPGProperty, 0, 0},  {&_swigt__p_wxImageFileProperty, _p_wxImageFilePropertyTo_p_wxPGProperty, 0, 0},  {&_swigt__p_PyFloatProperty, _p_PyFloatPropertyTo_p_wxPGProperty, 0, 0},  {&_swigt__p_wxPGProperty, 0, 0, 0},  {&_swigt__p_PyLongStringProperty, _p_PyLongStringPropertyTo_p_wxPGProperty, 0, 0},  {&_swigt__p_PyUIntProperty, _p_PyUIntPropertyTo_p_wxPGProperty, 0, 0},  {&_swigt__p_PyProperty, _p_PyPropertyTo_p_wxPGProperty, 0, 0},  {&_swigt__p_PyIntProperty, _p_PyIntPropertyTo_p_wxPGProperty, 0, 0},  {&_swigt__p_PyFileProperty, _p_PyFilePropertyTo_p_wxPGProperty, 0, 0},  {&_swigt__p_PyColourProperty, _p_PyColourPropertyTo_p_wxPGProperty, 0, 0},  {&_swigt__p_PyFontProperty, _p_PyFontPropertyTo_p_wxPGProperty, 0, 0},  {&_swigt__p_PyFlagsProperty, _p_PyFlagsPropertyTo_p_wxPGProperty, 0, 0},  {&_swigt__p_PySystemColourProperty, _p_PySystemColourPropertyTo_p_wxPGProperty, 0, 0},  {&_swigt__p_PyEditEnumProperty, _p_PyEditEnumPropertyTo_p_wxPGProperty, 0, 0},  {&_swigt__p_PyStringProperty, _p_PyStringPropertyTo_p_wxPGProperty, 0, 0},  {&_swigt__p_PyArrayStringProperty, _p_PyArrayStringPropertyTo_p_wxPGProperty, 0, 0},  {&_swigt__p_PyEnumProperty, _p_PyEnumPropertyTo_p_wxPGProperty, 0, 0},  {&_swigt__p_wxPropertyCategory, _p_wxPropertyCategoryTo_p_wxPGProperty, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPGTextCtrlEditor[] = {  {&_swigt__p_wxPGTextCtrlEditor, 0, 0, 0},  {&_swigt__p_wxPGTextCtrlAndButtonEditor, _p_wxPGTextCtrlAndButtonEditorTo_p_wxPGTextCtrlEditor, 0, 0},  {&_swigt__p_wxPGSpinCtrlEditor, _p_wxPGSpinCtrlEditorTo_p_wxPGTextCtrlEditor, 0, 0},  {&_swigt__p_PyTextCtrlEditor, _p_PyTextCtrlEditorTo_p_wxPGTextCtrlEditor, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPGVIterator[] = {  {&_swigt__p_wxPGVIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPGVIteratorBase[] = {  {&_swigt__p_wxPGVIteratorBase, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPGValidationInfo[] = {  {&_swigt__p_wxPGValidationInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPGWindowList[] = {  {&_swigt__p_wxPGWindowList, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPanel[] = {  {&_swigt__p_wxPyVListBox, _p_wxPyVListBoxTo_p_wxPanel, 0, 0},  {&_swigt__p_wxPyHtmlListBox, _p_wxPyHtmlListBoxTo_p_wxPanel, 0, 0},  {&_swigt__p_wxSimpleHtmlListBox, _p_wxSimpleHtmlListBoxTo_p_wxPanel, 0, 0},  {&_swigt__p_wxPropertyGridManager, _p_wxPropertyGridManagerTo_p_wxPanel, 0, 0},  {&_swigt__p_wxScrolledWindow, _p_wxScrolledWindowTo_p_wxPanel, 0, 0},  {&_swigt__p_wxPyVScrolledWindow, _p_wxPyVScrolledWindowTo_p_wxPanel, 0, 0},  {&_swigt__p_wxPyHScrolledWindow, _p_wxPyHScrolledWindowTo_p_wxPanel, 0, 0},  {&_swigt__p_wxPyHVScrolledWindow, _p_wxPyHVScrolledWindowTo_p_wxPanel, 0, 0},  {&_swigt__p_wxPyScrolledWindow, _p_wxPyScrolledWindowTo_p_wxPanel, 0, 0},  {&_swigt__p_wxPreviewControlBar, _p_wxPreviewControlBarTo_p_wxPanel, 0, 0},  {&_swigt__p_wxPyPreviewControlBar, _p_wxPyPreviewControlBarTo_p_wxPanel, 0, 0},  {&_swigt__p_wxPyPanel, _p_wxPyPanelTo_p_wxPanel, 0, 0},  {&_swigt__p_wxPreviewCanvas, _p_wxPreviewCanvasTo_p_wxPanel, 0, 0},  {&_swigt__p_wxPanel, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPaperSize[] = {  {&_swigt__p_wxPaperSize, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPoint[] = {  {&_swigt__p_wxPoint, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPropertyCategory[] = {  {&_swigt__p_wxPropertyCategory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPropertyGrid[] = {  {&_swigt__p_wxPropertyGrid, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPropertyGridConstIterator[] = {  {&_swigt__p_wxPropertyGridConstIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPropertyGridEvent[] = {  {&_swigt__p_wxPropertyGridEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPropertyGridHitTestResult[] = {  {&_swigt__p_wxPropertyGridHitTestResult, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPropertyGridInterface[] = {  {&_swigt__p_wxPropertyGridInterface, 0, 0, 0},  {&_swigt__p_wxPropertyGrid, _p_wxPropertyGridTo_p_wxPropertyGridInterface, 0, 0},  {&_swigt__p_wxPropertyGridPage, _p_wxPropertyGridPageTo_p_wxPropertyGridInterface, 0, 0},  {&_swigt__p_wxPropertyGridManager, _p_wxPropertyGridManagerTo_p_wxPropertyGridInterface, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPropertyGridIterator[] = {  {&_swigt__p_wxPropertyGridIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPropertyGridIteratorBase[] = {  {&_swigt__p_wxPropertyGridIterator, _p_wxPropertyGridIteratorTo_p_wxPropertyGridIteratorBase, 0, 0},  {&_swigt__p_wxPropertyGridConstIterator, _p_wxPropertyGridConstIteratorTo_p_wxPropertyGridIteratorBase, 0, 0},  {&_swigt__p_wxPropertyGridIteratorBase, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPropertyGridManager[] = {  {&_swigt__p_wxPropertyGridManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPropertyGridPage[] = {  {&_swigt__p_wxPropertyGridPage, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPropertyGridPageState[] = {  {&_swigt__p_wxPropertyGridPage, _p_wxPropertyGridPageTo_p_wxPropertyGridPageState, 0, 0},  {&_swigt__p_wxPropertyGridPageState, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxPropertyGridPopulator[] = {  {&_swigt__p_wxPropertyGridPopulator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxRect[] = {  {&_swigt__p_wxRect, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxRefCounter[] = {  {&_swigt__p_wxRefCounter, 0, 0, 0},  {&_swigt__p_wxPGCellRenderer, _p_wxPGCellRendererTo_p_wxRefCounter, 0, 0},  {&_swigt__p_wxPGDefaultRenderer, _p_wxPGDefaultRendererTo_p_wxRefCounter, 0, 0},  {&_swigt__p_wxPGCellData, _p_wxPGCellDataTo_p_wxRefCounter, 0, 0},  {&_swigt__p_wxPGChoicesData, _p_wxPGChoicesDataTo_p_wxRefCounter, 0, 0},  {&_swigt__p_wxPGVIteratorBase, _p_wxPGVIteratorBaseTo_p_wxRefCounter, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxScrollHelper[] = {  {&_swigt__p_wxPropertyGrid, _p_wxPropertyGridTo_p_wxScrollHelper, 0, 0},  {&_swigt__p_wxScrolledWindow, _p_wxScrolledWindowTo_p_wxScrollHelper, 0, 0},  {&_swigt__p_wxPyScrolledWindow, _p_wxPyScrolledWindowTo_p_wxScrollHelper, 0, 0},  {&_swigt__p_wxScrollHelper, 0, 0, 0},  {&_swigt__p_wxPreviewCanvas, _p_wxPreviewCanvasTo_p_wxScrollHelper, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSize[] = {  {&_swigt__p_wxSize, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxString[] = {  {&_swigt__p_wxString, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxStringProperty[] = {  {&_swigt__p_wxStringProperty, 0, 0, 0},  {&_swigt__p_PyStringProperty, _p_PyStringPropertyTo_p_wxStringProperty, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxSystemColourProperty[] = {  {&_swigt__p_wxSystemColourProperty, 0, 0, 0},  {&_swigt__p_wxColourProperty, _p_wxColourPropertyTo_p_wxSystemColourProperty, 0, 0},  {&_swigt__p_PyColourProperty, _p_PyColourPropertyTo_p_wxSystemColourProperty, 0, 0},  {&_swigt__p_PySystemColourProperty, _p_PySystemColourPropertyTo_p_wxSystemColourProperty, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxTopLevelWindow[] = {  {&_swigt__p_wxFrame, _p_wxFrameTo_p_wxTopLevelWindow, 0, 0},  {&_swigt__p_wxMiniFrame, _p_wxMiniFrameTo_p_wxTopLevelWindow, 0, 0},  {&_swigt__p_wxFontDialog, _p_wxFontDialogTo_p_wxTopLevelWindow, 0, 0},  {&_swigt__p_wxDirDialog, _p_wxDirDialogTo_p_wxTopLevelWindow, 0, 0},  {&_swigt__p_wxColourDialog, _p_wxColourDialogTo_p_wxTopLevelWindow, 0, 0},  {&_swigt__p_wxDialog, _p_wxDialogTo_p_wxTopLevelWindow, 0, 0},  {&_swigt__p_wxPGArrayEditorDialog, _p_wxPGArrayEditorDialogTo_p_wxTopLevelWindow, 0, 0},  {&_swigt__p_wxPGArrayStringEditorDialog, _p_wxPGArrayStringEditorDialogTo_p_wxTopLevelWindow, 0, 0},  {&_swigt__p_wxSplashScreen, _p_wxSplashScreenTo_p_wxTopLevelWindow, 0, 0},  {&_swigt__p_wxTopLevelWindow, 0, 0, 0},  {&_swigt__p_wxTipWindow, _p_wxTipWindowTo_p_wxTopLevelWindow, 0, 0},  {&_swigt__p_wxMDIParentFrame, _p_wxMDIParentFrameTo_p_wxTopLevelWindow, 0, 0},  {&_swigt__p_wxMDIChildFrame, _p_wxMDIChildFrameTo_p_wxTopLevelWindow, 0, 0},  {&_swigt__p_wxMessageDialog, _p_wxMessageDialogTo_p_wxTopLevelWindow, 0, 0},  {&_swigt__p_wxNumberEntryDialog, _p_wxNumberEntryDialogTo_p_wxTopLevelWindow, 0, 0},  {&_swigt__p_wxPasswordEntryDialog, _p_wxPasswordEntryDialogTo_p_wxTopLevelWindow, 0, 0},  {&_swigt__p_wxTextEntryDialog, _p_wxTextEntryDialogTo_p_wxTopLevelWindow, 0, 0},  {&_swigt__p_wxSingleChoiceDialog, _p_wxSingleChoiceDialogTo_p_wxTopLevelWindow, 0, 0},  {&_swigt__p_wxGenericProgressDialog, _p_wxGenericProgressDialogTo_p_wxTopLevelWindow, 0, 0},  {&_swigt__p_wxProgressDialog, _p_wxProgressDialogTo_p_wxTopLevelWindow, 0, 0},  {&_swigt__p_wxFindReplaceDialog, _p_wxFindReplaceDialogTo_p_wxTopLevelWindow, 0, 0},  {&_swigt__p_wxMultiChoiceDialog, _p_wxMultiChoiceDialogTo_p_wxTopLevelWindow, 0, 0},  {&_swigt__p_wxFileDialog, _p_wxFileDialogTo_p_wxTopLevelWindow, 0, 0},  {&_swigt__p_wxPreviewFrame, _p_wxPreviewFrameTo_p_wxTopLevelWindow, 0, 0},  {&_swigt__p_wxPyPreviewFrame, _p_wxPyPreviewFrameTo_p_wxTopLevelWindow, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxUIntProperty[] = {  {&_swigt__p_wxUIntProperty, 0, 0, 0},  {&_swigt__p_PyUIntProperty, _p_PyUIntPropertyTo_p_wxUIntProperty, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxULongLong[] = {  {&_swigt__p_wxULongLong, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxUniChar[] = {  {&_swigt__p_wxUniChar, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxValidator[] = {  {&_swigt__p_wxValidator, 0, 0, 0},  {&_swigt__p_wxPyValidator, _p_wxPyValidatorTo_p_wxValidator, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxVariant[] = {  {&_swigt__p_wxVariant, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxWindow[] = {  {&_swigt__p_wxSplashScreen, _p_wxSplashScreenTo_p_wxWindow, 0, 0},  {&_swigt__p_wxMiniFrame, _p_wxMiniFrameTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPyPanel, _p_wxPyPanelTo_p_wxWindow, 0, 0},  {&_swigt__p_wxMenuBar, _p_wxMenuBarTo_p_wxWindow, 0, 0},  {&_swigt__p_wxTextCtrlBase, _p_wxTextCtrlBaseTo_p_wxWindow, 0, 0},  {&_swigt__p_wxBookCtrlBase, _p_wxBookCtrlBaseTo_p_wxWindow, 0, 0},  {&_swigt__p_wxMessageDialog, _p_wxMessageDialogTo_p_wxWindow, 0, 0},  {&_swigt__p_wxFileDialog, _p_wxFileDialogTo_p_wxWindow, 0, 0},  {&_swigt__p_wxMultiChoiceDialog, _p_wxMultiChoiceDialogTo_p_wxWindow, 0, 0},  {&_swigt__p_wxFindReplaceDialog, _p_wxFindReplaceDialogTo_p_wxWindow, 0, 0},  {&_swigt__p_wxProgressDialog, _p_wxProgressDialogTo_p_wxWindow, 0, 0},  {&_swigt__p_wxGenericProgressDialog, _p_wxGenericProgressDialogTo_p_wxWindow, 0, 0},  {&_swigt__p_wxNumberEntryDialog, _p_wxNumberEntryDialogTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPasswordEntryDialog, _p_wxPasswordEntryDialogTo_p_wxWindow, 0, 0},  {&_swigt__p_wxTextEntryDialog, _p_wxTextEntryDialogTo_p_wxWindow, 0, 0},  {&_swigt__p_wxSingleChoiceDialog, _p_wxSingleChoiceDialogTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPGMultiButton, _p_wxPGMultiButtonTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPanel, _p_wxPanelTo_p_wxWindow, 0, 0},  {&_swigt__p_wxStatusBar, _p_wxStatusBarTo_p_wxWindow, 0, 0},  {&_swigt__p_wxSplashScreenWindow, _p_wxSplashScreenWindowTo_p_wxWindow, 0, 0},  {&_swigt__p_wxMDIClientWindow, _p_wxMDIClientWindowTo_p_wxWindow, 0, 0},  {&_swigt__p_wxScrolledWindow, _p_wxScrolledWindowTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPyVScrolledWindow, _p_wxPyVScrolledWindowTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPyHScrolledWindow, _p_wxPyHScrolledWindowTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPyHVScrolledWindow, _p_wxPyHVScrolledWindowTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPyScrolledWindow, _p_wxPyScrolledWindowTo_p_wxWindow, 0, 0},  {&_swigt__p_wxWindow, 0, 0, 0},  {&_swigt__p_wxTopLevelWindow, _p_wxTopLevelWindowTo_p_wxWindow, 0, 0},  {&_swigt__p_wxTipWindow, _p_wxTipWindowTo_p_wxWindow, 0, 0},  {&_swigt__p_wxSplitterWindow, _p_wxSplitterWindowTo_p_wxWindow, 0, 0},  {&_swigt__p_wxSashWindow, _p_wxSashWindowTo_p_wxWindow, 0, 0},  {&_swigt__p_wxSashLayoutWindow, _p_wxSashLayoutWindowTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPopupWindow, _p_wxPopupWindowTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPyPopupTransientWindow, _p_wxPyPopupTransientWindowTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPreviewFrame, _p_wxPreviewFrameTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPyPreviewFrame, _p_wxPyPreviewFrameTo_p_wxWindow, 0, 0},  {&_swigt__p_wxControl, _p_wxControlTo_p_wxWindow, 0, 0},  {&_swigt__p_wxMDIChildFrame, _p_wxMDIChildFrameTo_p_wxWindow, 0, 0},  {&_swigt__p_wxControlWithItems, _p_wxControlWithItemsTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPreviewCanvas, _p_wxPreviewCanvasTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPyWindow, _p_wxPyWindowTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPyVListBox, _p_wxPyVListBoxTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPyHtmlListBox, _p_wxPyHtmlListBoxTo_p_wxWindow, 0, 0},  {&_swigt__p_wxSimpleHtmlListBox, _p_wxSimpleHtmlListBoxTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPropertyGrid, _p_wxPropertyGridTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPreviewControlBar, _p_wxPreviewControlBarTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPyPreviewControlBar, _p_wxPyPreviewControlBarTo_p_wxWindow, 0, 0},  {&_swigt__p_wxFrame, _p_wxFrameTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPGArrayStringEditorDialog, _p_wxPGArrayStringEditorDialogTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPGArrayEditorDialog, _p_wxPGArrayEditorDialogTo_p_wxWindow, 0, 0},  {&_swigt__p_wxDialog, _p_wxDialogTo_p_wxWindow, 0, 0},  {&_swigt__p_wxColourDialog, _p_wxColourDialogTo_p_wxWindow, 0, 0},  {&_swigt__p_wxDirDialog, _p_wxDirDialogTo_p_wxWindow, 0, 0},  {&_swigt__p_wxFontDialog, _p_wxFontDialogTo_p_wxWindow, 0, 0},  {&_swigt__p_wxMDIParentFrame, _p_wxMDIParentFrameTo_p_wxWindow, 0, 0},  {&_swigt__p_wxPropertyGridManager, _p_wxPropertyGridManagerTo_p_wxWindow, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wxWindowBase[] = {  {&_swigt__p_wxWindowBase, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_FlagType,
  _swigc__p_PyArrayStringProperty,
  _swigc__p_PyChoiceEditor,
  _swigc__p_PyColourProperty,
  _swigc__p_PyComboBoxEditor,
  _swigc__p_PyEditEnumProperty,
  _swigc__p_PyEditor,
  _swigc__p_PyEditorDialogAdapter,
  _swigc__p_PyEnumProperty,
  _swigc__p_PyFileDialogAdapter,
  _swigc__p_PyFileProperty,
  _swigc__p_PyFlagsProperty,
  _swigc__p_PyFloatProperty,
  _swigc__p_PyFontProperty,
  _swigc__p_PyIntProperty,
  _swigc__p_PyLongStringDialogAdapter,
  _swigc__p_PyLongStringProperty,
  _swigc__p_PyProperty,
  _swigc__p_PyStringProperty,
  _swigc__p_PySystemColourProperty,
  _swigc__p_PyTextCtrlEditor,
  _swigc__p_PyUIntProperty,
  _swigc__p_ValArrItem,
  _swigc__p_char,
  _swigc__p_double,
  _swigc__p_f_p_wxPropertyGrid_p_wxPGProperty_p_wxPGProperty__int,
  _swigc__p_int,
  _swigc__p_long,
  _swigc__p_p_wxBookCtrlBase,
  _swigc__p_p_wxChar,
  _swigc__p_p_wxColourDialog,
  _swigc__p_p_wxControl,
  _swigc__p_p_wxControlWithItems,
  _swigc__p_p_wxDialog,
  _swigc__p_p_wxDirDialog,
  _swigc__p_p_wxFileDialog,
  _swigc__p_p_wxFindReplaceDialog,
  _swigc__p_p_wxFontDialog,
  _swigc__p_p_wxFrame,
  _swigc__p_p_wxGenericProgressDialog,
  _swigc__p_p_wxMDIChildFrame,
  _swigc__p_p_wxMDIClientWindow,
  _swigc__p_p_wxMDIParentFrame,
  _swigc__p_p_wxMenuBar,
  _swigc__p_p_wxMessageDialog,
  _swigc__p_p_wxMiniFrame,
  _swigc__p_p_wxMultiChoiceDialog,
  _swigc__p_p_wxNumberEntryDialog,
  _swigc__p_p_wxPGArrayEditorDialog,
  _swigc__p_p_wxPGArrayStringEditorDialog,
  _swigc__p_p_wxPGMultiButton,
  _swigc__p_p_wxPanel,
  _swigc__p_p_wxPasswordEntryDialog,
  _swigc__p_p_wxPopupWindow,
  _swigc__p_p_wxPreviewCanvas,
  _swigc__p_p_wxPreviewControlBar,
  _swigc__p_p_wxPreviewFrame,
  _swigc__p_p_wxProgressDialog,
  _swigc__p_p_wxPropertyGrid,
  _swigc__p_p_wxPropertyGridManager,
  _swigc__p_p_wxPyHScrolledWindow,
  _swigc__p_p_wxPyHVScrolledWindow,
  _swigc__p_p_wxPyHtmlListBox,
  _swigc__p_p_wxPyPanel,
  _swigc__p_p_wxPyPopupTransientWindow,
  _swigc__p_p_wxPyPreviewControlBar,
  _swigc__p_p_wxPyPreviewFrame,
  _swigc__p_p_wxPyScrolledWindow,
  _swigc__p_p_wxPyVListBox,
  _swigc__p_p_wxPyVScrolledWindow,
  _swigc__p_p_wxPyWindow,
  _swigc__p_p_wxSashLayoutWindow,
  _swigc__p_p_wxSashWindow,
  _swigc__p_p_wxScrolledWindow,
  _swigc__p_p_wxSimpleHtmlListBox,
  _swigc__p_p_wxSingleChoiceDialog,
  _swigc__p_p_wxSplashScreen,
  _swigc__p_p_wxSplashScreenWindow,
  _swigc__p_p_wxSplitterWindow,
  _swigc__p_p_wxStatusBar,
  _swigc__p_p_wxTextCtrlBase,
  _swigc__p_p_wxTextEntryDialog,
  _swigc__p_p_wxTipWindow,
  _swigc__p_p_wxTopLevelWindow,
  _swigc__p_p_wxWindow,
  _swigc__p_unsigned_char,
  _swigc__p_unsigned_int,
  _swigc__p_unsigned_long,
  _swigc__p_void,
  _swigc__p_wxANIHandler,
  _swigc__p_wxAcceleratorTable,
  _swigc__p_wxActivateEvent,
  _swigc__p_wxArrayInt,
  _swigc__p_wxArrayPGProperty,
  _swigc__p_wxArrayString,
  _swigc__p_wxArrayStringProperty,
  _swigc__p_wxBMPHandler,
  _swigc__p_wxBitmap,
  _swigc__p_wxBookCtrlBase,
  _swigc__p_wxBookCtrlEvent,
  _swigc__p_wxBoolProperty,
  _swigc__p_wxBoxSizer,
  _swigc__p_wxCURHandler,
  _swigc__p_wxCalculateLayoutEvent,
  _swigc__p_wxChar,
  _swigc__p_wxChildFocusEvent,
  _swigc__p_wxClipboardTextEvent,
  _swigc__p_wxCloseEvent,
  _swigc__p_wxColour,
  _swigc__p_wxColourData,
  _swigc__p_wxColourDialog,
  _swigc__p_wxColourProperty,
  _swigc__p_wxColourPropertyValue,
  _swigc__p_wxCommandEvent,
  _swigc__p_wxContextMenuEvent,
  _swigc__p_wxControl,
  _swigc__p_wxControlWithItems,
  _swigc__p_wxCursorProperty,
  _swigc__p_wxDC,
  _swigc__p_wxDateEvent,
  _swigc__p_wxDateTime,
  _swigc__p_wxDialog,
  _swigc__p_wxDialogLayoutAdapter,
  _swigc__p_wxDirDialog,
  _swigc__p_wxDirProperty,
  _swigc__p_wxDisplayChangedEvent,
  _swigc__p_wxDropFilesEvent,
  _swigc__p_wxDuplexMode,
  _swigc__p_wxEditEnumProperty,
  _swigc__p_wxEnumProperty,
  _swigc__p_wxEraseEvent,
  _swigc__p_wxEvent,
  _swigc__p_wxEventBlocker,
  _swigc__p_wxEvtHandler,
  _swigc__p_wxFSFile,
  _swigc__p_wxFileDialog,
  _swigc__p_wxFileName,
  _swigc__p_wxFileProperty,
  _swigc__p_wxFileSystem,
  _swigc__p_wxFindDialogEvent,
  _swigc__p_wxFindReplaceData,
  _swigc__p_wxFindReplaceDialog,
  _swigc__p_wxFlagsProperty,
  _swigc__p_wxFlexGridSizer,
  _swigc__p_wxFloatProperty,
  _swigc__p_wxFocusEvent,
  _swigc__p_wxFont,
  _swigc__p_wxFontData,
  _swigc__p_wxFontDialog,
  _swigc__p_wxFontProperty,
  _swigc__p_wxFrame,
  _swigc__p_wxGBSizerItem,
  _swigc__p_wxGIFHandler,
  _swigc__p_wxGenericProgressDialog,
  _swigc__p_wxGridBagSizer,
  _swigc__p_wxGridSizer,
  _swigc__p_wxICOHandler,
  _swigc__p_wxIconizeEvent,
  _swigc__p_wxIdleEvent,
  _swigc__p_wxImage,
  _swigc__p_wxImageFileProperty,
  _swigc__p_wxImageHandler,
  _swigc__p_wxIndividualLayoutConstraint,
  _swigc__p_wxInitDialogEvent,
  _swigc__p_wxIntProperty,
  _swigc__p_wxJPEGHandler,
  _swigc__p_wxKeyEvent,
  _swigc__p_wxLayoutAlgorithm,
  _swigc__p_wxLayoutConstraints,
  _swigc__p_wxListEvent,
  _swigc__p_wxLongLong,
  _swigc__p_wxLongLong_t,
  _swigc__p_wxLongStringProperty,
  _swigc__p_wxMDIChildFrame,
  _swigc__p_wxMDIClientWindow,
  _swigc__p_wxMDIParentFrame,
  _swigc__p_wxMaximizeEvent,
  _swigc__p_wxMenu,
  _swigc__p_wxMenuBar,
  _swigc__p_wxMenuEvent,
  _swigc__p_wxMenuItem,
  _swigc__p_wxMessageDialog,
  _swigc__p_wxMiniFrame,
  _swigc__p_wxMouseCaptureChangedEvent,
  _swigc__p_wxMouseCaptureLostEvent,
  _swigc__p_wxMouseEvent,
  _swigc__p_wxMoveEvent,
  _swigc__p_wxMultiChoiceDialog,
  _swigc__p_wxNavigationKeyEvent,
  _swigc__p_wxNcPaintEvent,
  _swigc__p_wxNotifyEvent,
  _swigc__p_wxNumberEntryDialog,
  _swigc__p_wxNumericPropertyValidator,
  _swigc__p_wxObject,
  _swigc__p_wxPCXHandler,
  _swigc__p_wxPGArrayEditorDialog,
  _swigc__p_wxPGArrayStringEditorDialog,
  _swigc__p_wxPGAttributeStorage,
  _swigc__p_wxPGCell,
  _swigc__p_wxPGCellData,
  _swigc__p_wxPGCellRenderer,
  _swigc__p_wxPGCheckBoxEditor,
  _swigc__p_wxPGChoiceAndButtonEditor,
  _swigc__p_wxPGChoiceEditor,
  _swigc__p_wxPGChoiceEntry,
  _swigc__p_wxPGChoices,
  _swigc__p_wxPGChoicesData,
  _swigc__p_wxPGComboBoxEditor,
  _swigc__p_wxPGCommonValue,
  _swigc__p_wxPGDefaultRenderer,
  _swigc__p_wxPGEditor,
  _swigc__p_wxPGEditorDialogAdapter,
  _swigc__p_wxPGFileDialogAdapter,
  _swigc__p_wxPGLongStringDialogAdapter,
  _swigc__p_wxPGMultiButton,
  _swigc__p_wxPGPaintData,
  _swigc__p_wxPGPropArgCls,
  _swigc__p_wxPGProperty,
  _swigc__p_wxPGRootProperty,
  _swigc__p_wxPGSpinCtrlEditor,
  _swigc__p_wxPGTextCtrlAndButtonEditor,
  _swigc__p_wxPGTextCtrlEditor,
  _swigc__p_wxPGVIterator,
  _swigc__p_wxPGVIteratorBase,
  _swigc__p_wxPGValidationInfo,
  _swigc__p_wxPGWindowList,
  _swigc__p_wxPNGHandler,
  _swigc__p_wxPNMHandler,
  _swigc__p_wxPageSetupDialog,
  _swigc__p_wxPageSetupDialogData,
  _swigc__p_wxPaintEvent,
  _swigc__p_wxPaletteChangedEvent,
  _swigc__p_wxPanel,
  _swigc__p_wxPaperSize,
  _swigc__p_wxPasswordEntryDialog,
  _swigc__p_wxPoint,
  _swigc__p_wxPopupWindow,
  _swigc__p_wxPreviewCanvas,
  _swigc__p_wxPreviewControlBar,
  _swigc__p_wxPreviewFrame,
  _swigc__p_wxPrintData,
  _swigc__p_wxPrintDialog,
  _swigc__p_wxPrintDialogData,
  _swigc__p_wxPrintPreview,
  _swigc__p_wxPrinter,
  _swigc__p_wxProgressDialog,
  _swigc__p_wxPropertyCategory,
  _swigc__p_wxPropertyGrid,
  _swigc__p_wxPropertyGridConstIterator,
  _swigc__p_wxPropertyGridEvent,
  _swigc__p_wxPropertyGridHitTestResult,
  _swigc__p_wxPropertyGridInterface,
  _swigc__p_wxPropertyGridIterator,
  _swigc__p_wxPropertyGridIteratorBase,
  _swigc__p_wxPropertyGridManager,
  _swigc__p_wxPropertyGridPage,
  _swigc__p_wxPropertyGridPageState,
  _swigc__p_wxPropertyGridPopulator,
  _swigc__p_wxPyApp,
  _swigc__p_wxPyCommandEvent,
  _swigc__p_wxPyEvent,
  _swigc__p_wxPyEvtHandler,
  _swigc__p_wxPyHScrolledWindow,
  _swigc__p_wxPyHVScrolledWindow,
  _swigc__p_wxPyHtmlListBox,
  _swigc__p_wxPyImageHandler,
  _swigc__p_wxPyPanel,
  _swigc__p_wxPyPopupTransientWindow,
  _swigc__p_wxPyPreviewControlBar,
  _swigc__p_wxPyPreviewFrame,
  _swigc__p_wxPyPrintPreview,
  _swigc__p_wxPyPrintout,
  _swigc__p_wxPyScrolledWindow,
  _swigc__p_wxPySizer,
  _swigc__p_wxPyTaskBarIcon,
  _swigc__p_wxPyVListBox,
  _swigc__p_wxPyVScrolledWindow,
  _swigc__p_wxPyValidator,
  _swigc__p_wxPyWindow,
  _swigc__p_wxQueryLayoutInfoEvent,
  _swigc__p_wxQueryNewPaletteEvent,
  _swigc__p_wxRect,
  _swigc__p_wxRefCounter,
  _swigc__p_wxSashEvent,
  _swigc__p_wxSashLayoutWindow,
  _swigc__p_wxSashWindow,
  _swigc__p_wxScrollEvent,
  _swigc__p_wxScrollHelper,
  _swigc__p_wxScrollWinEvent,
  _swigc__p_wxScrolledWindow,
  _swigc__p_wxSetCursorEvent,
  _swigc__p_wxShowEvent,
  _swigc__p_wxSimpleHtmlListBox,
  _swigc__p_wxSingleChoiceDialog,
  _swigc__p_wxSize,
  _swigc__p_wxSizeEvent,
  _swigc__p_wxSizer,
  _swigc__p_wxSizerItem,
  _swigc__p_wxSplashScreen,
  _swigc__p_wxSplashScreenWindow,
  _swigc__p_wxSplitterEvent,
  _swigc__p_wxSplitterWindow,
  _swigc__p_wxStandardDialogLayoutAdapter,
  _swigc__p_wxStaticBoxSizer,
  _swigc__p_wxStatusBar,
  _swigc__p_wxStdDialogButtonSizer,
  _swigc__p_wxString,
  _swigc__p_wxStringProperty,
  _swigc__p_wxSysColourChangedEvent,
  _swigc__p_wxSystemColourProperty,
  _swigc__p_wxTGAHandler,
  _swigc__p_wxTIFFHandler,
  _swigc__p_wxTaskBarIconEvent,
  _swigc__p_wxTextCtrlBase,
  _swigc__p_wxTextEntryDialog,
  _swigc__p_wxThreadEvent,
  _swigc__p_wxTipWindow,
  _swigc__p_wxTopLevelWindow,
  _swigc__p_wxUIntProperty,
  _swigc__p_wxULongLong,
  _swigc__p_wxUniChar,
  _swigc__p_wxUpdateUIEvent,
  _swigc__p_wxValidator,
  _swigc__p_wxVariant,
  _swigc__p_wxWindow,
  _swigc__p_wxWindowBase,
  _swigc__p_wxWindowCreateEvent,
  _swigc__p_wxWindowDestroyEvent,
  _swigc__p_wxWindowModalDialogEvent,
  _swigc__p_wxWrapSizer,
  _swigc__p_wxXPMHandler,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{0, 0, 0, 0.0, 0, 0}};

#ifdef __cplusplus
}
#endif
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic 
 * memory is used. Also, since swig_type_info structures store pointers to 
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization. 
 * The idea is that swig generates all the structures that are needed. 
 * The runtime then collects these partially filled structures. 
 * The SWIG_InitializeModule function takes these initial arrays out of 
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned staticly to an initial 
 * array. We just loop though that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it 
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded. 
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the 
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif

SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head;
  static int init_run = 0;
  
  clientdata = clientdata;
  
  if (init_run) return;
  init_run = 1;
  
  /* Initialize the swig_module */
  swig_module.type_initial = swig_type_initial;
  swig_module.cast_initial = swig_cast_initial;
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (module_head) {
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  } else {
    /* This is the first module loaded */
    swig_module.next = &swig_module;
    SWIG_SetModule(clientdata, &swig_module);
  }
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %d\n", swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif



#ifdef __cplusplus
extern "C" {
#endif
  
  /* Python-specific SWIG API */
#define SWIG_newvarlink()                             SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr)  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_InstallConstants(d, constants)           SWIG_Python_InstallConstants(d, constants)
  
  /* -----------------------------------------------------------------------------
   * global variable support code.
   * ----------------------------------------------------------------------------- */
  
  typedef struct swig_globalvar {
    char       *name;                  /* Name of global variable */
    PyObject *(*get_attr)(void);       /* Return the current value */
    int       (*set_attr)(PyObject *); /* Set the value */
    struct swig_globalvar *next;
  } swig_globalvar;
  
  typedef struct swig_varlinkobject {
    PyObject_HEAD
    swig_globalvar *vars;
  } swig_varlinkobject;
  
  SWIGINTERN PyObject *
  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {
    return PyString_FromString("<Swig global variables>");
  }
  
  SWIGINTERN PyObject *
  swig_varlink_str(swig_varlinkobject *v) {
    PyObject *str = PyString_FromString("(");
    swig_globalvar  *var;
    for (var = v->vars; var; var=var->next) {
      PyString_ConcatAndDel(&str,PyString_FromString(var->name));
      if (var->next) PyString_ConcatAndDel(&str,PyString_FromString(", "));
    }
    PyString_ConcatAndDel(&str,PyString_FromString(")"));
    return str;
  }
  
  SWIGINTERN int
  swig_varlink_print(swig_varlinkobject *v, FILE *fp, int SWIGUNUSEDPARM(flags)) {
    PyObject *str = swig_varlink_str(v);
    fprintf(fp,"Swig global variables ");
    fprintf(fp,"%s\n", PyString_AsString(str));
    Py_DECREF(str);
    return 0;
  }
  
  SWIGINTERN void
  swig_varlink_dealloc(swig_varlinkobject *v) {
    swig_globalvar *var = v->vars;
    while (var) {
      swig_globalvar *n = var->next;
      free(var->name);
      free(var);
      var = n;
    }
  }
  
  SWIGINTERN PyObject *
  swig_varlink_getattr(swig_varlinkobject *v, char *n) {
    PyObject *res = NULL;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->get_attr)();
        break;
      }
      var = var->next;
    }
    if (res == NULL && !PyErr_Occurred()) {
      PyErr_SetString(PyExc_NameError,"Unknown C global variable");
    }
    return res;
  }
  
  SWIGINTERN int
  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
    int res = 1;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->set_attr)(p);
        break;
      }
      var = var->next;
    }
    if (res == 1 && !PyErr_Occurred()) {
      PyErr_SetString(PyExc_NameError,"Unknown C global variable");
    }
    return res;
  }
  
  SWIGINTERN PyTypeObject*
  swig_varlink_type(void) {
    static char varlink__doc__[] = "Swig var link object";
    static PyTypeObject varlink_type;
    static int type_init = 0;  
    if (!type_init) {
      const PyTypeObject tmp
      = {
        PyObject_HEAD_INIT(NULL)
        0,                                  /* Number of items in variable part (ob_size) */
        (char *)"swigvarlink",              /* Type name (tp_name) */
        sizeof(swig_varlinkobject),         /* Basic size (tp_basicsize) */
        0,                                  /* Itemsize (tp_itemsize) */
        (destructor) swig_varlink_dealloc,   /* Deallocator (tp_dealloc) */ 
        (printfunc) swig_varlink_print,     /* Print (tp_print) */
        (getattrfunc) swig_varlink_getattr, /* get attr (tp_getattr) */
        (setattrfunc) swig_varlink_setattr, /* Set attr (tp_setattr) */
        0,                                  /* tp_compare */
        (reprfunc) swig_varlink_repr,       /* tp_repr */
        0,                                  /* tp_as_number */
        0,                                  /* tp_as_sequence */
        0,                                  /* tp_as_mapping */
        0,                                  /* tp_hash */
        0,                                  /* tp_call */
        (reprfunc)swig_varlink_str,        /* tp_str */
        0,                                  /* tp_getattro */
        0,                                  /* tp_setattro */
        0,                                  /* tp_as_buffer */
        0,                                  /* tp_flags */
        varlink__doc__,                     /* tp_doc */
        0,                                  /* tp_traverse */
        0,                                  /* tp_clear */
        0,                                  /* tp_richcompare */
        0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
        0,                                  /* tp_del */
#endif
#ifdef COUNT_ALLOCS
        0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
      varlink_type = tmp;
      varlink_type.ob_type = &PyType_Type;
      type_init = 1;
    }
    return &varlink_type;
  }
  
  /* Create a variable linking object for use later */
  SWIGINTERN PyObject *
  SWIG_Python_newvarlink(void) {
    swig_varlinkobject *result = PyObject_NEW(swig_varlinkobject, swig_varlink_type());
    if (result) {
      result->vars = 0;
    }
    return ((PyObject*) result);
  }
  
  SWIGINTERN void 
  SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
    swig_varlinkobject *v = (swig_varlinkobject *) p;
    swig_globalvar *gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
    if (gv) {
      size_t size = strlen(name)+1;
      gv->name = (char *)malloc(size);
      if (gv->name) {
        strncpy(gv->name,name,size);
        gv->get_attr = get_attr;
        gv->set_attr = set_attr;
        gv->next = v->vars;
      }
    }
    v->vars = gv;
  }
  
  SWIGINTERN PyObject *
  SWIG_globals() {
    static PyObject *_SWIG_globals = 0; 
    if (!_SWIG_globals) _SWIG_globals = SWIG_newvarlink();  
    return _SWIG_globals;
  }
  
  /* -----------------------------------------------------------------------------
   * constants/methods manipulation
   * ----------------------------------------------------------------------------- */
  
  /* Install Constants */
  SWIGINTERN void
  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
    PyObject *obj = 0;
    size_t i;
    for (i = 0; constants[i].type; ++i) {
      switch(constants[i].type) {
      case SWIG_PY_POINTER:
        obj = SWIG_NewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
        break;
      case SWIG_PY_BINARY:
        obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
        break;
      default:
        obj = 0;
        break;
      }
      if (obj) {
        PyDict_SetItemString(d, constants[i].name, obj);
        Py_DECREF(obj);
      }
    }
  }
  
  /* -----------------------------------------------------------------------------*/
  /* Fix SwigMethods to carry the callback ptrs when needed */
  /* -----------------------------------------------------------------------------*/
  
  SWIGINTERN void
  SWIG_Python_FixMethods(PyMethodDef *methods,
    swig_const_info *const_table,
    swig_type_info **types,
    swig_type_info **types_initial) {
    size_t i;
    for (i = 0; methods[i].ml_name; ++i) {
      const char *c = methods[i].ml_doc;
      if (c && (c = strstr(c, "swig_ptr: "))) {
        int j;
        swig_const_info *ci = 0;
        const char *name = c + 10;
        for (j = 0; const_table[j].type; ++j) {
          if (strncmp(const_table[j].name, name, 
              strlen(const_table[j].name)) == 0) {
            ci = &(const_table[j]);
            break;
          }
        }
        if (ci) {
          size_t shift = (ci->ptype) - types;
          swig_type_info *ty = types_initial[shift];
          size_t ldoc = (c - methods[i].ml_doc);
          size_t lptr = strlen(ty->name)+2*sizeof(void*)+2;
          char *ndoc = (char*)malloc(ldoc + lptr + 10);
          if (ndoc) {
            char *buff = ndoc;
            void *ptr = (ci->type == SWIG_PY_POINTER) ? ci->pvalue : 0;
            if (ptr) {
              strncpy(buff, methods[i].ml_doc, ldoc);
              buff += ldoc;
              strncpy(buff, "swig_ptr: ", 10);
              buff += 10;
              SWIG_PackVoidPtr(buff, ptr, ty->name, lptr);
              methods[i].ml_doc = ndoc;
            }
          }
        }
      }
    }
  } 
  
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

#ifdef __cplusplus
extern "C"
#endif
SWIGEXPORT void SWIG_init(void) {
  PyObject *m, *d;
  
  /* Fix SwigMethods to carry the callback ptrs when needed */
  SWIG_Python_FixMethods(SwigMethods, swig_const_table, swig_types, swig_type_initial);
  
  m = Py_InitModule((char *) SWIG_name, SwigMethods);
  d = PyModule_GetDict(m);
  
  SWIG_InitializeModule(0);
  SWIG_InstallConstants(d,swig_const_table);
  
  
  SWIG_Python_SetConstant(d, "PG_XBEFORETEXT",SWIG_From_int(static_cast< int >(4)));
  SWIG_Python_SetConstant(d, "PG_XBEFOREWIDGET",SWIG_From_int(static_cast< int >(1)));
  SWIG_Python_SetConstant(d, "PG_TEXTCTRLXADJUST",SWIG_From_int(static_cast< int >(0)));
  SWIG_Python_SetConstant(d, "PG_ICON_WIDTH",SWIG_From_int(static_cast< int >(11)));
  SWIG_Python_SetConstant(d, "PG_USE_RENDERER_NATIVE",SWIG_From_int(static_cast< int >(1)));
  SWIG_Python_SetConstant(d, "PG_SUPPORT_TOOLTIPS",SWIG_From_int(static_cast< int >(1)));
  SWIG_Python_SetConstant(d, "PG_CUSTOM_IMAGE_WIDTH",SWIG_From_int(static_cast< int >(20)));
  SWIG_Python_SetConstant(d, "PG_NO_CHILD_EVT_MOTION",SWIG_From_int(static_cast< int >(0)));
  SWIG_Python_SetConstant(d, "PG_NAT_BUTTON_BORDER_ANY",SWIG_From_int(static_cast< int >(0)));
  SWIG_Python_SetConstant(d, "PG_NAT_BUTTON_BORDER_X",SWIG_From_int(static_cast< int >(0)));
  SWIG_Python_SetConstant(d, "PG_NAT_BUTTON_BORDER_Y",SWIG_From_int(static_cast< int >(0)));
  SWIG_Python_SetConstant(d, "PG_REFRESH_CONTROLS_AFTER_REPAINT",SWIG_From_int(static_cast< int >(0)));
  SWIG_Python_SetConstant(d, "PG_CONTROL_MARGIN",SWIG_From_int(static_cast< int >(0)));
  SWIG_Python_SetConstant(d, "CC_CUSTOM_IMAGE_MARGIN1",SWIG_From_int(static_cast< int >(4)));
  SWIG_Python_SetConstant(d, "CC_CUSTOM_IMAGE_MARGIN2",SWIG_From_int(static_cast< int >(5)));
  SWIG_Python_SetConstant(d, "DEFAULT_IMAGE_OFFSET_INCREMENT",SWIG_From_int(static_cast< int >((4+5))));
  SWIG_Python_SetConstant(d, "PG_DRAG_MARGIN",SWIG_From_int(static_cast< int >(30)));
  SWIG_Python_SetConstant(d, "PG_SPLITTERX_DETECTMARGIN1",SWIG_From_int(static_cast< int >(3)));
  SWIG_Python_SetConstant(d, "PG_SPLITTERX_DETECTMARGIN2",SWIG_From_int(static_cast< int >(2)));
  SWIG_Python_SetConstant(d, "PG_SMALL_SCREEN",SWIG_From_int(static_cast< int >(0)));
  SWIG_Python_SetConstant(d, "PG_COMPATIBILITY_1_4",SWIG_From_int(static_cast< int >(0)));
  SWIG_Python_SetConstant(d, "PG_INCLUDE_ADVPROPS",SWIG_From_int(static_cast< int >(1)));
  SWIG_Python_SetConstant(d, "PG_INCLUDE_CHECKBOX",SWIG_From_int(static_cast< int >(1)));
  SWIG_Python_SetConstant(d, "PG_KEEP_STRUCTURE",SWIG_From_int(static_cast< int >(wxPG_KEEP_STRUCTURE)));
  SWIG_Python_SetConstant(d, "PG_RECURSE",SWIG_From_int(static_cast< int >(wxPG_RECURSE)));
  SWIG_Python_SetConstant(d, "PG_INC_ATTRIBUTES",SWIG_From_int(static_cast< int >(wxPG_INC_ATTRIBUTES)));
  SWIG_Python_SetConstant(d, "PG_RECURSE_STARTS",SWIG_From_int(static_cast< int >(wxPG_RECURSE_STARTS)));
  SWIG_Python_SetConstant(d, "PG_FORCE",SWIG_From_int(static_cast< int >(wxPG_FORCE)));
  SWIG_Python_SetConstant(d, "PG_SORT_TOP_LEVEL_ONLY",SWIG_From_int(static_cast< int >(wxPG_SORT_TOP_LEVEL_ONLY)));
  SWIG_Python_SetConstant(d, "PG_DONT_RECURSE",SWIG_From_int(static_cast< int >(0x00000000)));
  SWIG_Python_SetConstant(d, "PG_FULL_VALUE",SWIG_From_int(static_cast< int >(wxPG_FULL_VALUE)));
  SWIG_Python_SetConstant(d, "PG_REPORT_ERROR",SWIG_From_int(static_cast< int >(wxPG_REPORT_ERROR)));
  SWIG_Python_SetConstant(d, "PG_PROPERTY_SPECIFIC",SWIG_From_int(static_cast< int >(wxPG_PROPERTY_SPECIFIC)));
  SWIG_Python_SetConstant(d, "PG_EDITABLE_VALUE",SWIG_From_int(static_cast< int >(wxPG_EDITABLE_VALUE)));
  SWIG_Python_SetConstant(d, "PG_COMPOSITE_FRAGMENT",SWIG_From_int(static_cast< int >(wxPG_COMPOSITE_FRAGMENT)));
  SWIG_Python_SetConstant(d, "PG_UNEDITABLE_COMPOSITE_FRAGMENT",SWIG_From_int(static_cast< int >(wxPG_UNEDITABLE_COMPOSITE_FRAGMENT)));
  SWIG_Python_SetConstant(d, "PG_VALUE_IS_CURRENT",SWIG_From_int(static_cast< int >(wxPG_VALUE_IS_CURRENT)));
  SWIG_Python_SetConstant(d, "PG_PROGRAMMATIC_VALUE",SWIG_From_int(static_cast< int >(wxPG_PROGRAMMATIC_VALUE)));
  SWIG_Python_SetConstant(d, "PG_SETVAL_REFRESH_EDITOR",SWIG_From_int(static_cast< int >(wxPG_SETVAL_REFRESH_EDITOR)));
  SWIG_Python_SetConstant(d, "PG_SETVAL_AGGREGATED",SWIG_From_int(static_cast< int >(wxPG_SETVAL_AGGREGATED)));
  SWIG_Python_SetConstant(d, "PG_SETVAL_FROM_PARENT",SWIG_From_int(static_cast< int >(wxPG_SETVAL_FROM_PARENT)));
  SWIG_Python_SetConstant(d, "PG_SETVAL_BY_USER",SWIG_From_int(static_cast< int >(wxPG_SETVAL_BY_USER)));
  SWIG_Python_SetConstant(d, "PG_CUSTOM_IMAGE_SPACINGY",SWIG_From_int(static_cast< int >(1)));
  SWIG_Python_SetConstant(d, "PG_CAPRECTXMARGIN",SWIG_From_int(static_cast< int >(2)));
  SWIG_Python_SetConstant(d, "PG_CAPRECTYMARGIN",SWIG_From_int(static_cast< int >(1)));
  SWIG_Python_SetConstant(d, "PG_PROP_MODIFIED",SWIG_From_int(static_cast< int >(wxPG_PROP_MODIFIED)));
  SWIG_Python_SetConstant(d, "PG_PROP_DISABLED",SWIG_From_int(static_cast< int >(wxPG_PROP_DISABLED)));
  SWIG_Python_SetConstant(d, "PG_PROP_HIDDEN",SWIG_From_int(static_cast< int >(wxPG_PROP_HIDDEN)));
  SWIG_Python_SetConstant(d, "PG_PROP_CUSTOMIMAGE",SWIG_From_int(static_cast< int >(wxPG_PROP_CUSTOMIMAGE)));
  SWIG_Python_SetConstant(d, "PG_PROP_NOEDITOR",SWIG_From_int(static_cast< int >(wxPG_PROP_NOEDITOR)));
  SWIG_Python_SetConstant(d, "PG_PROP_COLLAPSED",SWIG_From_int(static_cast< int >(wxPG_PROP_COLLAPSED)));
  SWIG_Python_SetConstant(d, "PG_PROP_INVALID_VALUE",SWIG_From_int(static_cast< int >(wxPG_PROP_INVALID_VALUE)));
  SWIG_Python_SetConstant(d, "PG_PROP_WAS_MODIFIED",SWIG_From_int(static_cast< int >(wxPG_PROP_WAS_MODIFIED)));
  SWIG_Python_SetConstant(d, "PG_PROP_AGGREGATE",SWIG_From_int(static_cast< int >(wxPG_PROP_AGGREGATE)));
  SWIG_Python_SetConstant(d, "PG_PROP_CHILDREN_ARE_COPIES",SWIG_From_int(static_cast< int >(wxPG_PROP_CHILDREN_ARE_COPIES)));
  SWIG_Python_SetConstant(d, "PG_PROP_PROPERTY",SWIG_From_int(static_cast< int >(wxPG_PROP_PROPERTY)));
  SWIG_Python_SetConstant(d, "PG_PROP_CATEGORY",SWIG_From_int(static_cast< int >(wxPG_PROP_CATEGORY)));
  SWIG_Python_SetConstant(d, "PG_PROP_MISC_PARENT",SWIG_From_int(static_cast< int >(wxPG_PROP_MISC_PARENT)));
  SWIG_Python_SetConstant(d, "PG_PROP_READONLY",SWIG_From_int(static_cast< int >(wxPG_PROP_READONLY)));
  SWIG_Python_SetConstant(d, "PG_PROP_COMPOSED_VALUE",SWIG_From_int(static_cast< int >(wxPG_PROP_COMPOSED_VALUE)));
  SWIG_Python_SetConstant(d, "PG_PROP_USES_COMMON_VALUE",SWIG_From_int(static_cast< int >(wxPG_PROP_USES_COMMON_VALUE)));
  SWIG_Python_SetConstant(d, "PG_PROP_AUTO_UNSPECIFIED",SWIG_From_int(static_cast< int >(wxPG_PROP_AUTO_UNSPECIFIED)));
  SWIG_Python_SetConstant(d, "PG_PROP_CLASS_SPECIFIC_1",SWIG_From_int(static_cast< int >(wxPG_PROP_CLASS_SPECIFIC_1)));
  SWIG_Python_SetConstant(d, "PG_PROP_CLASS_SPECIFIC_2",SWIG_From_int(static_cast< int >(wxPG_PROP_CLASS_SPECIFIC_2)));
  SWIG_Python_SetConstant(d, "PG_PROP_BEING_DELETED",SWIG_From_int(static_cast< int >(wxPG_PROP_BEING_DELETED)));
  SWIG_Python_SetConstant(d, "PG_ITERATE_PROPERTIES",SWIG_From_int(static_cast< int >(wxPG_ITERATE_PROPERTIES)));
  SWIG_Python_SetConstant(d, "PG_ITERATE_HIDDEN",SWIG_From_int(static_cast< int >(wxPG_ITERATE_HIDDEN)));
  SWIG_Python_SetConstant(d, "PG_ITERATE_FIXED_CHILDREN",SWIG_From_int(static_cast< int >(wxPG_ITERATE_FIXED_CHILDREN)));
  SWIG_Python_SetConstant(d, "PG_ITERATE_CATEGORIES",SWIG_From_int(static_cast< int >(wxPG_ITERATE_CATEGORIES)));
  SWIG_Python_SetConstant(d, "PG_ITERATE_ALL_PARENTS",SWIG_From_int(static_cast< int >(wxPG_ITERATE_ALL_PARENTS)));
  SWIG_Python_SetConstant(d, "PG_ITERATE_ALL_PARENTS_RECURSIVELY",SWIG_From_int(static_cast< int >(wxPG_ITERATE_ALL_PARENTS_RECURSIVELY)));
  SWIG_Python_SetConstant(d, "PG_ITERATOR_FLAGS_ALL",SWIG_From_int(static_cast< int >(wxPG_ITERATOR_FLAGS_ALL)));
  SWIG_Python_SetConstant(d, "PG_ITERATOR_MASK_OP_ITEM",SWIG_From_int(static_cast< int >(wxPG_ITERATOR_MASK_OP_ITEM)));
  SWIG_Python_SetConstant(d, "PG_ITERATOR_MASK_OP_PARENT",SWIG_From_int(static_cast< int >(wxPG_ITERATOR_MASK_OP_PARENT)));
  SWIG_Python_SetConstant(d, "PG_ITERATE_VISIBLE",SWIG_From_int(static_cast< int >(wxPG_ITERATE_VISIBLE)));
  SWIG_Python_SetConstant(d, "PG_ITERATE_ALL",SWIG_From_int(static_cast< int >(wxPG_ITERATE_ALL)));
  SWIG_Python_SetConstant(d, "PG_ITERATE_NORMAL",SWIG_From_int(static_cast< int >(wxPG_ITERATE_NORMAL)));
  SWIG_Python_SetConstant(d, "PG_ITERATE_DEFAULT",SWIG_From_int(static_cast< int >(wxPG_ITERATE_DEFAULT)));
  SWIG_Python_SetConstant(d, "PropertyGridInterface_SelectionState",SWIG_From_int(static_cast< int >(wxPropertyGridInterface::SelectionState)));
  SWIG_Python_SetConstant(d, "PropertyGridInterface_ExpandedState",SWIG_From_int(static_cast< int >(wxPropertyGridInterface::ExpandedState)));
  SWIG_Python_SetConstant(d, "PropertyGridInterface_ScrollPosState",SWIG_From_int(static_cast< int >(wxPropertyGridInterface::ScrollPosState)));
  SWIG_Python_SetConstant(d, "PropertyGridInterface_PageState",SWIG_From_int(static_cast< int >(wxPropertyGridInterface::PageState)));
  SWIG_Python_SetConstant(d, "PropertyGridInterface_SplitterPosState",SWIG_From_int(static_cast< int >(wxPropertyGridInterface::SplitterPosState)));
  SWIG_Python_SetConstant(d, "PropertyGridInterface_DescBoxState",SWIG_From_int(static_cast< int >(wxPropertyGridInterface::DescBoxState)));
  SWIG_Python_SetConstant(d, "PropertyGridInterface_AllStates",SWIG_From_int(static_cast< int >(wxPropertyGridInterface::AllStates)));
  SWIG_Python_SetConstant(d, "PG_AUTO_SORT",SWIG_From_int(static_cast< int >(wxPG_AUTO_SORT)));
  SWIG_Python_SetConstant(d, "PG_HIDE_CATEGORIES",SWIG_From_int(static_cast< int >(wxPG_HIDE_CATEGORIES)));
  SWIG_Python_SetConstant(d, "PG_ALPHABETIC_MODE",SWIG_From_int(static_cast< int >(wxPG_ALPHABETIC_MODE)));
  SWIG_Python_SetConstant(d, "PG_BOLD_MODIFIED",SWIG_From_int(static_cast< int >(wxPG_BOLD_MODIFIED)));
  SWIG_Python_SetConstant(d, "PG_SPLITTER_AUTO_CENTER",SWIG_From_int(static_cast< int >(wxPG_SPLITTER_AUTO_CENTER)));
  SWIG_Python_SetConstant(d, "PG_TOOLTIPS",SWIG_From_int(static_cast< int >(wxPG_TOOLTIPS)));
  SWIG_Python_SetConstant(d, "PG_HIDE_MARGIN",SWIG_From_int(static_cast< int >(wxPG_HIDE_MARGIN)));
  SWIG_Python_SetConstant(d, "PG_STATIC_SPLITTER",SWIG_From_int(static_cast< int >(wxPG_STATIC_SPLITTER)));
  SWIG_Python_SetConstant(d, "PG_STATIC_LAYOUT",SWIG_From_int(static_cast< int >(wxPG_STATIC_LAYOUT)));
  SWIG_Python_SetConstant(d, "PG_LIMITED_EDITING",SWIG_From_int(static_cast< int >(wxPG_LIMITED_EDITING)));
  SWIG_Python_SetConstant(d, "PG_TOOLBAR",SWIG_From_int(static_cast< int >(wxPG_TOOLBAR)));
  SWIG_Python_SetConstant(d, "PG_DESCRIPTION",SWIG_From_int(static_cast< int >(wxPG_DESCRIPTION)));
  SWIG_Python_SetConstant(d, "PG_NO_INTERNAL_BORDER",SWIG_From_int(static_cast< int >(wxPG_NO_INTERNAL_BORDER)));
  SWIG_Python_SetConstant(d, "PG_EX_INIT_NOCAT",SWIG_From_int(static_cast< int >(wxPG_EX_INIT_NOCAT)));
  SWIG_Python_SetConstant(d, "PG_EX_NO_FLAT_TOOLBAR",SWIG_From_int(static_cast< int >(wxPG_EX_NO_FLAT_TOOLBAR)));
  SWIG_Python_SetConstant(d, "PG_EX_MODE_BUTTONS",SWIG_From_int(static_cast< int >(wxPG_EX_MODE_BUTTONS)));
  SWIG_Python_SetConstant(d, "PG_EX_HELP_AS_TOOLTIPS",SWIG_From_int(static_cast< int >(wxPG_EX_HELP_AS_TOOLTIPS)));
  SWIG_Python_SetConstant(d, "PG_EX_NATIVE_DOUBLE_BUFFERING",SWIG_From_int(static_cast< int >(wxPG_EX_NATIVE_DOUBLE_BUFFERING)));
  SWIG_Python_SetConstant(d, "PG_EX_AUTO_UNSPECIFIED_VALUES",SWIG_From_int(static_cast< int >(wxPG_EX_AUTO_UNSPECIFIED_VALUES)));
  SWIG_Python_SetConstant(d, "PG_EX_WRITEONLY_BUILTIN_ATTRIBUTES",SWIG_From_int(static_cast< int >(wxPG_EX_WRITEONLY_BUILTIN_ATTRIBUTES)));
  SWIG_Python_SetConstant(d, "PG_EX_HIDE_PAGE_BUTTONS",SWIG_From_int(static_cast< int >(wxPG_EX_HIDE_PAGE_BUTTONS)));
  SWIG_Python_SetConstant(d, "PG_EX_MULTIPLE_SELECTION",SWIG_From_int(static_cast< int >(wxPG_EX_MULTIPLE_SELECTION)));
  SWIG_Python_SetConstant(d, "PG_EX_ENABLE_TLP_TRACKING",SWIG_From_int(static_cast< int >(wxPG_EX_ENABLE_TLP_TRACKING)));
  SWIG_Python_SetConstant(d, "PG_EX_NO_TOOLBAR_DIVIDER",SWIG_From_int(static_cast< int >(wxPG_EX_NO_TOOLBAR_DIVIDER)));
  SWIG_Python_SetConstant(d, "PG_EX_TOOLBAR_SEPARATOR",SWIG_From_int(static_cast< int >(wxPG_EX_TOOLBAR_SEPARATOR)));
  SWIG_Python_SetConstant(d, "PG_DEFAULT_STYLE",SWIG_From_int(static_cast< int >((0))));
  SWIG_Python_SetConstant(d, "PGMAN_DEFAULT_STYLE",SWIG_From_int(static_cast< int >((0))));
  SWIG_Python_SetConstant(d, "PG_SUBID1",SWIG_From_int(static_cast< int >(2)));
  SWIG_Python_SetConstant(d, "PG_SUBID2",SWIG_From_int(static_cast< int >(3)));
  SWIG_Python_SetConstant(d, "PG_SUBID_TEMP1",SWIG_From_int(static_cast< int >(4)));
  SWIG_Python_SetConstant(d, "PG_VFB_STAY_IN_PROPERTY",SWIG_From_int(static_cast< int >(wxPG_VFB_STAY_IN_PROPERTY)));
  SWIG_Python_SetConstant(d, "PG_VFB_BEEP",SWIG_From_int(static_cast< int >(wxPG_VFB_BEEP)));
  SWIG_Python_SetConstant(d, "PG_VFB_MARK_CELL",SWIG_From_int(static_cast< int >(wxPG_VFB_MARK_CELL)));
  SWIG_Python_SetConstant(d, "PG_VFB_SHOW_MESSAGE",SWIG_From_int(static_cast< int >(wxPG_VFB_SHOW_MESSAGE)));
  SWIG_Python_SetConstant(d, "PG_VFB_SHOW_MESSAGEBOX",SWIG_From_int(static_cast< int >(wxPG_VFB_SHOW_MESSAGEBOX)));
  SWIG_Python_SetConstant(d, "PG_VFB_SHOW_MESSAGE_ON_STATUSBAR",SWIG_From_int(static_cast< int >(wxPG_VFB_SHOW_MESSAGE_ON_STATUSBAR)));
  SWIG_Python_SetConstant(d, "PG_VFB_DEFAULT",SWIG_From_int(static_cast< int >(wxPG_VFB_DEFAULT)));
  SWIG_Python_SetConstant(d, "PG_VFB_UNDEFINED",SWIG_From_int(static_cast< int >(wxPG_VFB_UNDEFINED)));
  SWIG_Python_SetConstant(d, "PG_ACTION_INVALID",SWIG_From_int(static_cast< int >(wxPG_ACTION_INVALID)));
  SWIG_Python_SetConstant(d, "PG_ACTION_NEXT_PROPERTY",SWIG_From_int(static_cast< int >(wxPG_ACTION_NEXT_PROPERTY)));
  SWIG_Python_SetConstant(d, "PG_ACTION_PREV_PROPERTY",SWIG_From_int(static_cast< int >(wxPG_ACTION_PREV_PROPERTY)));
  SWIG_Python_SetConstant(d, "PG_ACTION_EXPAND_PROPERTY",SWIG_From_int(static_cast< int >(wxPG_ACTION_EXPAND_PROPERTY)));
  SWIG_Python_SetConstant(d, "PG_ACTION_COLLAPSE_PROPERTY",SWIG_From_int(static_cast< int >(wxPG_ACTION_COLLAPSE_PROPERTY)));
  SWIG_Python_SetConstant(d, "PG_ACTION_CANCEL_EDIT",SWIG_From_int(static_cast< int >(wxPG_ACTION_CANCEL_EDIT)));
  SWIG_Python_SetConstant(d, "PG_ACTION_EDIT",SWIG_From_int(static_cast< int >(wxPG_ACTION_EDIT)));
  SWIG_Python_SetConstant(d, "PG_ACTION_PRESS_BUTTON",SWIG_From_int(static_cast< int >(wxPG_ACTION_PRESS_BUTTON)));
  SWIG_Python_SetConstant(d, "PG_ACTION_MAX",SWIG_From_int(static_cast< int >(wxPG_ACTION_MAX)));
  SWIG_Python_SetConstant(d, "PG_SEL_FOCUS",SWIG_From_int(static_cast< int >(0x0001)));
  SWIG_Python_SetConstant(d, "PG_SEL_FORCE",SWIG_From_int(static_cast< int >(0x0002)));
  SWIG_Python_SetConstant(d, "PG_SEL_NONVISIBLE",SWIG_From_int(static_cast< int >(0x0004)));
  SWIG_Python_SetConstant(d, "PG_SEL_NOVALIDATE",SWIG_From_int(static_cast< int >(0x0008)));
  SWIG_Python_SetConstant(d, "PG_SEL_DELETING",SWIG_From_int(static_cast< int >(0x0010)));
  SWIG_Python_SetConstant(d, "PG_SEL_SETUNSPEC",SWIG_From_int(static_cast< int >(0x0020)));
  SWIG_Python_SetConstant(d, "PG_SEL_DIALOGVAL",SWIG_From_int(static_cast< int >(0x0040)));
  SWIG_Python_SetConstant(d, "PG_SEL_DONT_SEND_EVENT",SWIG_From_int(static_cast< int >(0x0080)));
  SWIG_Python_SetConstant(d, "PG_SEL_NO_REFRESH",SWIG_From_int(static_cast< int >(0x0100)));
  SWIG_Python_SetConstant(d, "PG_SPLITTER_REFRESH",SWIG_From_int(static_cast< int >(wxPG_SPLITTER_REFRESH)));
  SWIG_Python_SetConstant(d, "PG_SPLITTER_ALL_PAGES",SWIG_From_int(static_cast< int >(wxPG_SPLITTER_ALL_PAGES)));
  SWIG_Python_SetConstant(d, "PG_SPLITTER_FROM_EVENT",SWIG_From_int(static_cast< int >(wxPG_SPLITTER_FROM_EVENT)));
  SWIG_Python_SetConstant(d, "PG_SPLITTER_FROM_AUTO_CENTER",SWIG_From_int(static_cast< int >(wxPG_SPLITTER_FROM_AUTO_CENTER)));
  SWIG_Python_SetConstant(d, "PG_FL_INITIALIZED",SWIG_From_int(static_cast< int >(0x0001)));
  SWIG_Python_SetConstant(d, "PG_FL_ACTIVATION_BY_CLICK",SWIG_From_int(static_cast< int >(0x0002)));
  SWIG_Python_SetConstant(d, "PG_FL_DONT_CENTER_SPLITTER",SWIG_From_int(static_cast< int >(0x0004)));
  SWIG_Python_SetConstant(d, "PG_FL_FOCUSED",SWIG_From_int(static_cast< int >(0x0008)));
  SWIG_Python_SetConstant(d, "PG_FL_MOUSE_CAPTURED",SWIG_From_int(static_cast< int >(0x0010)));
  SWIG_Python_SetConstant(d, "PG_FL_MOUSE_INSIDE",SWIG_From_int(static_cast< int >(0x0020)));
  SWIG_Python_SetConstant(d, "PG_FL_VALUE_MODIFIED",SWIG_From_int(static_cast< int >(0x0040)));
  SWIG_Python_SetConstant(d, "PG_FL_PRIMARY_FILLS_ENTIRE",SWIG_From_int(static_cast< int >(0x0080)));
  SWIG_Python_SetConstant(d, "PG_FL_CUR_USES_CUSTOM_IMAGE",SWIG_From_int(static_cast< int >(0x0100)));
  SWIG_Python_SetConstant(d, "PG_FL_CELL_OVERRIDES_SEL",SWIG_From_int(static_cast< int >(0x0200)));
  SWIG_Python_SetConstant(d, "PG_FL_SCROLLED",SWIG_From_int(static_cast< int >(0x0400)));
  SWIG_Python_SetConstant(d, "PG_FL_ADDING_HIDEABLES",SWIG_From_int(static_cast< int >(0x0800)));
  SWIG_Python_SetConstant(d, "PG_FL_NOSTATUSBARHELP",SWIG_From_int(static_cast< int >(0x1000)));
  SWIG_Python_SetConstant(d, "PG_FL_CREATEDSTATE",SWIG_From_int(static_cast< int >(0x2000)));
  SWIG_Python_SetConstant(d, "PG_FL_SCROLLBAR_DETECTED",SWIG_From_int(static_cast< int >(0x4000)));
  SWIG_Python_SetConstant(d, "PG_FL_DESC_REFRESH_REQUIRED",SWIG_From_int(static_cast< int >(0x8000)));
  SWIG_Python_SetConstant(d, "PG_FL_IN_MANAGER",SWIG_From_int(static_cast< int >(0x00020000)));
  SWIG_Python_SetConstant(d, "PG_FL_GOOD_SIZE_SET",SWIG_From_int(static_cast< int >(0x00040000)));
  SWIG_Python_SetConstant(d, "PG_FL_IN_SELECT_PROPERTY",SWIG_From_int(static_cast< int >(0x00100000)));
  SWIG_Python_SetConstant(d, "PG_FL_STRING_IN_STATUSBAR",SWIG_From_int(static_cast< int >(0x00200000)));
  SWIG_Python_SetConstant(d, "PG_FL_CATMODE_AUTO_SORT",SWIG_From_int(static_cast< int >(0x01000000)));
  SWIG_Python_SetConstant(d, "PG_MAN_FL_PAGE_INSERTED",SWIG_From_int(static_cast< int >(0x02000000)));
  SWIG_Python_SetConstant(d, "PG_FL_ABNORMAL_EDITOR",SWIG_From_int(static_cast< int >(0x04000000)));
  SWIG_Python_SetConstant(d, "PG_FL_IN_HANDLECUSTOMEDITOREVENT",SWIG_From_int(static_cast< int >(0x08000000)));
  SWIG_Python_SetConstant(d, "PG_FL_VALUE_CHANGE_IN_EVENT",SWIG_From_int(static_cast< int >(0x10000000)));
  SWIG_Python_SetConstant(d, "PG_FL_FIXED_WIDTH_EDITOR",SWIG_From_int(static_cast< int >(0x20000000)));
  SWIG_Python_SetConstant(d, "PG_FL_HAS_VIRTUAL_WIDTH",SWIG_From_int(static_cast< int >(0x40000000)));
  SWIG_Python_SetConstant(d, "PG_FL_RECALCULATING_VIRTUAL_SIZE",SWIG_From_int(static_cast< int >(0x80000000)));
  SWIG_Python_SetConstant(d, "PG_BASE_EVT_PRE_ID",SWIG_From_int(static_cast< int >(1775)));
  SWIG_Python_SetConstant(d, "wxEVT_PG_SELECTED",SWIG_From_int(static_cast< int >(wxEVT_PG_SELECTED)));
  SWIG_Python_SetConstant(d, "wxEVT_PG_CHANGING",SWIG_From_int(static_cast< int >(wxEVT_PG_CHANGING)));
  SWIG_Python_SetConstant(d, "wxEVT_PG_CHANGED",SWIG_From_int(static_cast< int >(wxEVT_PG_CHANGED)));
  SWIG_Python_SetConstant(d, "wxEVT_PG_HIGHLIGHTED",SWIG_From_int(static_cast< int >(wxEVT_PG_HIGHLIGHTED)));
  SWIG_Python_SetConstant(d, "wxEVT_PG_RIGHT_CLICK",SWIG_From_int(static_cast< int >(wxEVT_PG_RIGHT_CLICK)));
  SWIG_Python_SetConstant(d, "wxEVT_PG_PAGE_CHANGED",SWIG_From_int(static_cast< int >(wxEVT_PG_PAGE_CHANGED)));
  SWIG_Python_SetConstant(d, "wxEVT_PG_ITEM_COLLAPSED",SWIG_From_int(static_cast< int >(wxEVT_PG_ITEM_COLLAPSED)));
  SWIG_Python_SetConstant(d, "wxEVT_PG_ITEM_EXPANDED",SWIG_From_int(static_cast< int >(wxEVT_PG_ITEM_EXPANDED)));
  SWIG_Python_SetConstant(d, "wxEVT_PG_DOUBLE_CLICK",SWIG_From_int(static_cast< int >(wxEVT_PG_DOUBLE_CLICK)));
  SWIG_Python_SetConstant(d, "wxEVT_PG_LABEL_EDIT_BEGIN",SWIG_From_int(static_cast< int >(wxEVT_PG_LABEL_EDIT_BEGIN)));
  SWIG_Python_SetConstant(d, "wxEVT_PG_LABEL_EDIT_ENDING",SWIG_From_int(static_cast< int >(wxEVT_PG_LABEL_EDIT_ENDING)));
  SWIG_Python_SetConstant(d, "wxEVT_PG_COL_BEGIN_DRAG",SWIG_From_int(static_cast< int >(wxEVT_PG_COL_BEGIN_DRAG)));
  SWIG_Python_SetConstant(d, "wxEVT_PG_COL_DRAGGING",SWIG_From_int(static_cast< int >(wxEVT_PG_COL_DRAGGING)));
  SWIG_Python_SetConstant(d, "wxEVT_PG_COL_END_DRAG",SWIG_From_int(static_cast< int >(wxEVT_PG_COL_END_DRAG)));
  SWIG_Python_SetConstant(d, "PG_PROPERTY_VALIDATION_ERROR_MESSAGE",SWIG_From_int(static_cast< int >(wxPG_PROPERTY_VALIDATION_ERROR_MESSAGE)));
  SWIG_Python_SetConstant(d, "PG_PROPERTY_VALIDATION_SATURATE",SWIG_From_int(static_cast< int >(wxPG_PROPERTY_VALIDATION_SATURATE)));
  SWIG_Python_SetConstant(d, "PG_PROPERTY_VALIDATION_WRAP",SWIG_From_int(static_cast< int >(wxPG_PROPERTY_VALIDATION_WRAP)));
  SWIG_Python_SetConstant(d, "NumericPropertyValidator_Signed",SWIG_From_int(static_cast< int >(wxNumericPropertyValidator::Signed)));
  SWIG_Python_SetConstant(d, "NumericPropertyValidator_Unsigned",SWIG_From_int(static_cast< int >(wxNumericPropertyValidator::Unsigned)));
  SWIG_Python_SetConstant(d, "NumericPropertyValidator_Float",SWIG_From_int(static_cast< int >(wxNumericPropertyValidator::Float)));
  SWIG_Python_SetConstant(d, "ArrayStringProperty_Escape",SWIG_From_int(static_cast< int >(wxArrayStringProperty::Escape)));
  SWIG_Python_SetConstant(d, "ArrayStringProperty_QuoteStrings",SWIG_From_int(static_cast< int >(wxArrayStringProperty::QuoteStrings)));
  SWIG_Python_SetConstant(d, "PG_COLOUR_WEB_BASE",SWIG_From_int(static_cast< int >(0x10000)));
  SWIG_Python_SetConstant(d, "PG_COLOUR_CUSTOM",SWIG_From_int(static_cast< int >(0xFFFFFF)));
  SWIG_Python_SetConstant(d, "PG_COLOUR_UNSPECIFIED",SWIG_From_int(static_cast< int >((0xFFFFFF+1))));
  
  wxPGInitResourceModule();
  
}

